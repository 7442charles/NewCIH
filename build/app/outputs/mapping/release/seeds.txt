co.notix.s0
co.notix.jo
co.notix.y1
co.notix.wo
androidx.window.embedding.EmptyEmbeddingComponent
co.notix.di
co.notix.k1
androidx.window.core.Bounds
androidx.lifecycle.SavedStateHandleAttacher
co.notix.b6
co.notix.ca
co.notix.wf
co.notix.j5
co.notix.v4
co.notix.q0
co.notix.un
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable
co.notix.e4
co.notix.xl
co.notix.xg
co.notix.fc
co.notix.v6
co.notix.t4
co.notix.m1
co.notix.notix_inapp_flutter.R$string
androidx.core.app.RemoteActionCompatParcelizer
co.notix.lg
co.notix.fa
co.notix.e8
co.notix.R$bool
co.notix.eh
co.notix.callback.NotixCallbackHandler
co.notix.co
co.notix.gb
androidx.window.layout.WindowMetricsCalculatorCompat
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl
co.notix.R$styleable
co.notix.bm
co.notix.r5
co.notix.n2
co.notix.i2
co.notix.ab
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
co.notix.vf
co.notix.ae
co.notix.o6
co.notix.t1
co.notix.h0
androidx.profileinstaller.ProfileInstallerInitializer
co.notix.bd
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
co.notix.c
co.notix.m6
co.notix.l8
co.notix.kq
co.notix.R$string
co.notix.interstitial.WebViewInterstitialActivity
com.google.android.gms.common.GooglePlayServicesManifestException
androidx.window.layout.WindowInfoTrackerImpl$Companion
co.notix.w5
androidx.window.embedding.SplitRule$LayoutDir
androidx.core.app.RemoteActionCompat
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
androidx.appcompat.widget.ViewStubCompat
co.notix.n6
co.notix.j7
androidx.window.embedding.ExtensionEmbeddingBackend$Companion
co.notix.sd
androidx.window.layout.SidecarCompat$Companion
co.notix.fk
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar
com.google.firebase.FirebaseCommonRegistrar
co.notix.ff
co.notix.qg
co.notix.k3
co.notix.f9
co.notix.k
co.notix.notix_inapp_flutter.BuildConfig
co.notix.ol
androidx.work.ArrayCreatingInputMerger
co.notix.qn
co.notix.z7
co.notix.z5
androidx.appcompat.widget.ActionBarContextView
co.notix.o4
co.notix.c6
co.notix.v9
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
androidx.window.layout.DisplayCompatHelperApi17
co.notix.np
co.notix.vg
co.notix.zj
androidx.window.layout.WindowMetricsCalculatorDecorator
androidx.core.graphics.drawable.IconCompatParcelizer
co.notix.lsi.LockScreenInterstitialActivity
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer
co.notix.log.LogLevel
co.notix.notix_inapp_flutter.R$id
co.notix.ar
co.notix.b8
co.notix.s4
co.notix.q6
co.notix.jd
co.notix.R$style
co.notix.b1
co.notix.fn
co.notix.ob
co.notix.md
co.notix.q3
com.google.firebase.FirebaseCommonKtxRegistrar
co.notix.wk
co.notix.je
co.notix.d4
co.notix.n3
co.notix.xm
co.notix.g
androidx.window.layout.WindowInfoTrackerImpl
co.notix.kk
co.notix.t7
co.notix.mj
androidx.window.embedding.EmbeddingBackend
androidx.window.embedding.SplitController$Companion
co.notix.yn
androidx.appcompat.widget.AlertDialogLayout
co.notix.jb
co.notix.ip
co.notix.jj
co.notix.mh
co.notix.ro
co.notix.qa
co.notix.pm
co.notix.ga
co.notix.tg
co.notix.dp
co.notix.q2
co.notix.dn
co.notix.qc
co.notix.bg
co.notix.za
co.notix.interstitial.InterstitialLoader$DefaultImpls
co.notix.wn
co.notix.yk
co.notix.p1
com.google.firebase.remoteconfig.ktx.FirebaseRemoteConfigKtxRegistrar
co.notix.sc
io.flutter.view.TextureRegistry$ImageTextureEntry
co.notix.cd
co.notix.gp
co.notix.cf
co.notix.qk
co.notix.w6
co.notix.j8
co.notix.y4
co.notix.mb
co.notix.ji
co.notix.domain.RequestVars
co.notix.p8
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialLoaderNext$1
co.notix.nj
kotlin.internal.jdk8.JDK8PlatformImplementations
androidx.work.impl.foreground.SystemForegroundService
co.notix.fd
co.notix.lm
co.notix.g1
co.notix.g9
co.notix.wc
co.notix.wh
co.notix.id
androidx.activity.ComponentActivity$4
co.notix.de
co.notix.a2
co.notix.rk
co.notix.tq
co.notix.dg
co.notix.we
co.notix.s8
co.notix.l5
co.notix.ka
com.google.firebase.perf.FirebasePerfRegistrar
co.notix.hd
co.notix.Notix$Companion
co.notix.ej
androidx.window.layout.SidecarCompat$FirstAttachAdapter
co.notix.R$drawable
co.notix.pp
co.notix.ce
co.notix.b5
io.flutter.view.TextureRegistry$SurfaceTextureEntry
co.notix.yj
co.notix.ub
co.notix.ml
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
co.notix.re
co.notix.ii
co.notix.n5
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1
co.notix.w7
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar
co.notix.ra
co.notix.ja
co.notix.ik
co.notix.callback.NotixCallback$Impression
co.notix.xc
co.notix.tl
androidx.appcompat.widget.ActionMenuView
co.notix.pe
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1
co.notix.callback.NotixCallback$RefreshData
androidx.window.layout.ActivityCompatHelperApi24
co.notix.t5
co.notix.d6
co.notix.kg
co.notix.hc
androidx.annotation.Keep
co.notix.ki
co.notix.h
co.notix.tf
co.notix.hh
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
co.notix.lsi.NotixLockScreenInterstitialAd$Companion
co.notix.cm
co.notix.rh
co.notix.d5
co.notix.fb
co.notix.sg
co.notix.i1
androidx.window.embedding.EmbeddingRule
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
co.notix.zb
co.notix.native.NotixNative
co.notix.push.NotixPush
kotlinx.coroutines.internal.StackTraceRecoveryKt
co.notix.pk
co.notix.appopen.NotixAppOpen
co.notix.f7
androidx.window.R$styleable
androidx.versionedparcelable.ParcelImpl
co.notix.xk
co.notix.ul
co.notix.c0
co.notix.wb
co.notix.aq
co.notix.wg
androidx.window.layout.WindowMetricsCalculator$Companion
io.flutter.plugin.platform.SingleViewPresentation
androidx.window.core.Version$bigInteger$2
androidx.work.impl.background.systemjob.SystemJobService
co.notix.lb
co.notix.cb
co.notix.xf
co.notix.ea
com.google.firebase.appcheck.ktx.FirebaseAppCheckKtxRegistrar
co.notix.lsi.LsiInterval$Fixed
co.notix.interstitial.InterstitialData
co.notix.m2
co.notix.uo
androidx.appcompat.view.menu.ExpandedMenuView
co.notix.ib
co.notix.ua
co.notix.a1
co.notix.startup.NotixInitializer
co.notix.l1
co.notix.lsi.LsiInterval$Optimized
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
co.notix.tn
co.notix.R
co.notix.z9
co.notix.a9
androidx.window.layout.SidecarCompat
co.notix.ne
co.notix.m4
co.notix.native.NativeLoader
io.flutter.view.TextureRegistry$SurfaceProducer
co.notix.jc
co.notix.ef
co.notix.vn
co.notix.zq
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface
co.notix.kj
co.notix.hf
co.notix.sf
co.notix.c7
co.notix.si
co.notix.e9
co.notix.push.data.NotificationOverrides
co.notix.banner.NotixBannerView
co.notix.u
co.notix.wd
co.notix.r1
co.notix.in
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer
co.notix.zd
androidx.work.impl.workers.DiagnosticsWorker
co.notix.interstitial.NotixInterstitial
co.notix.nc
io.flutter.plugins.firebase.performance.FlutterFirebaseAppRegistrar
co.notix.push.NotixPush$Companion
co.notix.zg
co.notix.aa
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$3
com.google.firebase.sessions.FirebaseSessionsRegistrar
co.notix.mg
co.notix.c5
com.google.android.gms.auth.api.signin.GoogleSignInAccount
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver
co.notix.lk
co.notix.lp
co.notix.c8
co.notix.x5
co.notix.hn
androidx.window.layout.WindowInfoTracker
co.notix.c3
co.notix.e7
co.notix.fo
co.notix.mo
co.notix.o1
co.notix.v3
co.notix.x4
co.notix.gd
co.notix.zc
co.notix.appopen.AppOpenActivity
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
co.notix.h2
co.notix.th
co.notix.v1
co.notix.k6
co.notix.vc
co.notix.cg
co.notix.mi
co.notix.callback.NotixCallback$Click
androidx.appcompat.widget.ButtonBarLayout
androidx.appcompat.widget.ContentFrameLayout
co.notix.qh
co.notix.t
com.google.firebase.appcheck.FirebaseAppCheckKtxRegistrar
androidx.window.embedding.EmbeddingCompat
co.notix.xe
co.notix.l3
co.notix.el
co.notix.u7
co.notix.y9
co.notix.ph
co.notix.qo
co.notix.g4
co.notix.callback.NotixCallback$Unsubscription
co.notix.bq
co.notix.h9
co.notix.yc
co.notix.sk
androidx.work.impl.diagnostics.DiagnosticsReceiver
co.notix.c2
androidx.fragment.app.Fragment$2
co.notix.bl
co.notix.u6
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
co.notix.fh
androidx.window.core.Version
co.notix.aj
co.notix.io
co.notix.j1
co.notix.ve
co.notix.q4
androidx.lifecycle.DefaultLifecycleObserver
com.google.firebase.perf.network.FirebasePerfHttpClient
co.notix.i3
co.notix.uj
co.notix.d
co.notix.worker.SelfRestartingWorker
co.notix.so
io.flutter.view.TextureRegistry$GLTextureConsumer
androidx.window.embedding.SplitPairRule
co.notix.p9
androidx.window.layout.FoldingFeature$OcclusionType
androidx.window.layout.WindowInfoTracker$Companion
androidx.window.embedding.SplitInfo
co.notix.d0
androidx.window.layout.FoldingFeature$State
androidx.window.R$id
co.notix.hb
co.notix.h3
co.notix.yl
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver
co.notix.t8
co.notix.u4
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
co.notix.R$integer
co.notix.ln
androidx.appcompat.widget.SearchView$SearchAutoComplete
co.notix.y6
co.notix.jf
co.notix.gj
co.notix.l7
co.notix.ao
co.notix.s5
co.notix.x
co.notix.ud
co.notix.hj
io.flutter.view.AccessibilityViewEmbedder
co.notix.i4
co.notix.xp
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$2
co.notix.xi
co.notix.a4
co.notix.dh
co.notix.ld
co.notix.lc
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar
co.notix.u5
co.notix.u0
co.notix.ta
co.notix.xa
co.notix.bj
co.notix.rp
co.notix.mf
co.notix.notix_inapp_flutter.R$layout
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar
co.notix.n7
com.google.firebase.analytics.FirebaseAnalytics
co.notix.x7
co.notix.k8
androidx.appcompat.widget.ActionBarContainer
co.notix.m3
co.notix.ih
co.notix.t6
co.notix.db
co.notix.uc
co.notix.oa
com.google.android.gms.common.api.Status
androidx.window.layout.ExtensionWindowLayoutInfoBackend
co.notix.k7
com.google.firebase.database.ktx.FirebaseDatabaseKtxRegistrar
com.google.firebase.perf.config.RemoteConfigManager
co.notix.ni
co.notix.o5
co.notix.notix_inapp_flutter.R$dimen
androidx.window.embedding.EmbeddingInterfaceCompat
co.notix.ad
androidx.startup.InitializationProvider
co.notix.wl
co.notix.qb
co.notix.d8
co.notix.w
co.notix.R$attr
androidx.window.layout.ActivityCompatHelperApi30
androidx.appcompat.widget.SearchView
co.notix.rf
androidx.window.layout.HardwareFoldingFeature$Companion
co.notix.s7
co.notix.zn
co.notix.j3
co.notix.nf
androidx.core.app.FrameMetricsAggregator
co.notix.al
co.notix.m9
co.notix.oj
co.notix.ac
co.notix.of
co.notix.oq
co.notix.tj
androidx.core.widget.NestedScrollView
co.notix.na
co.notix.hk
co.notix.z2
co.notix.cc
co.notix.nk
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar
co.notix.l0
co.notix.d9
co.notix.appopen.AppOpenLoader
com.google.firebase.storage.StorageRegistrar
com.google.firebase.perf.session.SessionManager
co.notix.k9
co.notix.an
co.notix.tp
co.notix.appopen.AppOpenData
co.notix.bf
androidx.window.embedding.EmbeddingAdapter
co.notix.i7
co.notix.gi
co.notix.gn
co.notix.uf
androidx.window.layout.FoldingFeature$Orientation
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface
co.notix.banner.BannerData
co.notix.eq
co.notix.yq
co.notix.kf
io.flutter.plugins.imagepicker.ImagePickerFileProvider
co.notix.hl
androidx.window.layout.SidecarWindowBackend$Companion
co.notix.vd
com.google.firebase.components.ComponentDiscoveryService
com.google.android.gms.common.api.internal.LifecycleCallback
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
co.notix.interstitial.NotixInterstitial$Companion
co.notix.k2
co.notix.sa
co.notix.zm
co.notix.n0
co.notix.y5
co.notix.vo
androidx.window.embedding.ExtensionEmbeddingBackend
co.notix.interstitial.InterstitialLoader
co.notix.qj
co.notix.p0
co.notix.push.pull.PullWorker
co.notix.ap
co.notix.fp
co.notix.hq
co.notix.ak
co.notix.rn
co.notix.u1
co.notix.gc
co.notix.gf
co.notix.notix_inapp_flutter.R$raw
co.notix.bp
co.notix.ql
androidx.window.embedding.SplitController
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
androidx.window.layout.SidecarWindowBackend
co.notix.dj
androidx.window.layout.WindowMetrics
co.notix.f
co.notix.w1
androidx.core.app.CoreComponentFactory
com.google.firebase.perf.metrics.Trace
com.google.firebase.database.DatabaseRegistrar
co.notix.qe
co.notix.yd
androidx.window.R$attr
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper
co.notix.dq
co.notix.po
co.notix.kp
androidx.window.embedding.SplitRuleParser
co.notix.banner.NotixBannerListener
co.notix.w0
co.notix.le
co.notix.g8
co.notix.m
co.notix.rq
co.notix.r7
co.notix.z
com.google.firebase.components.ComponentRegistrar
co.notix.to
co.notix.m5
androidx.window.embedding.SplitPlaceholderRule
co.notix.utils.ExperimentalNotixApi
androidx.lifecycle.LifecycleCoroutineScopeImpl
androidx.lifecycle.SingleGeneratedAdapterObserver
co.notix.kh
co.notix.ia
androidx.window.layout.DisplayCompatHelperApi28
co.notix.pb
co.notix.zk
io.flutter.plugins.GeneratedPluginRegistrant
co.notix.eb
androidx.activity.ComponentActivity$3
co.notix.interstitial.NotixInterstitial$DefaultImpls
co.notix.xj
co.notix.ei
co.notix.ie
androidx.appcompat.view.menu.ListMenuItemView
androidx.window.embedding.EmbeddingTranslatingCallback
co.notix.r3
co.notix.h4
androidx.window.layout.HardwareFoldingFeature$Type
co.notix.lj
co.notix.a8
co.notix.sh
co.notix.va
co.notix.i6
co.notix.e3
co.notix.native.NotixNative$Companion
androidx.window.layout.DisplayFeature
co.notix.gm
co.notix.uh
android.support.v4.graphics.drawable.IconCompatParcelizer
co.notix.l2
co.notix.nl
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar
co.notix.a
co.notix.banner.BannerSize$Fixed
co.notix.if
co.notix.callback.NotixCallbackStatus
co.notix.f2
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1
co.notix.bc
co.notix.p3
co.notix.n
co.notix.g5
co.notix.vm
co.notix.op
co.notix.jl
co.notix.callback.NotixCallback$FcmTokenReceived
androidx.work.impl.background.systemalarm.RescheduleReceiver
androidx.window.embedding.EmbeddingCompat$Companion
co.notix.hg
co.notix.mc
androidx.window.embedding.ActivityRule
co.notix.vi
androidx.room.MultiInstanceInvalidationService
co.notix.j0
com.google.firebase.appcheck.FirebaseAppCheckRegistrar
co.notix.e0
co.notix.l6
androidx.work.CoroutineWorker
com.google.firebase.perf.network.FirebasePerfUrlConnection
co.notix.r4
androidx.appcompat.view.menu.ActionMenuItemView
co.notix.l4
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
co.notix.Notix
co.notix.nq
co.notix.s6
co.notix.ai
co.notix.q1
co.notix.ba
androidx.window.embedding.SplitPairFilter
co.notix.lsi.LockScreenInterstitialCallback
co.notix.cn
androidx.window.layout.SidecarAdapter
co.notix.n8
co.notix.on
co.notix.ic
co.notix.w4
com.google.firebase.concurrent.ExecutorsRegistrar
co.notix.s1
co.notix.v7
co.notix.yo
com.google.android.gms.common.annotation.KeepName
androidx.work.impl.WorkDatabase_Impl
io.flutter.embedding.engine.FlutterOverlaySurface
co.notix.yh
com.google.firebase.perf.ktx.FirebasePerfKtxRegistrar
co.notix.mk
co.notix.j2
androidx.activity.ComponentActivity$5
com.google.android.gms.common.api.GoogleApiActivity
com.google.firebase.storage.ktx.FirebaseStorageKtxRegistrar
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
co.notix.oh
co.notix.s9
com.google.firebase.abt.component.AbtRegistrar
co.notix.oi
androidx.work.WorkManagerInitializer
co.notix.qp
co.notix.xb
co.notix.ha
co.notix.b2
co.notix.m0
co.notix.k4
com.google.android.gms.common.util.DynamiteApi
androidx.appcompat.widget.FitWindowsFrameLayout
co.notix.ym
co.notix.ye
co.notix.nb
androidx.lifecycle.CompositeGeneratedAdaptersObserver
co.notix.qm
co.notix.dm
co.notix.mn
co.notix.q9
co.notix.ge
co.notix.cl
co.notix.zl
com.google.firebase.remoteconfig.FirebaseRemoteConfigKtxRegistrar
co.notix.fg
co.notix.native.NativeData
co.notix.s
co.notix.callback.NotixCallback$Subscription
androidx.window.embedding.SplitRule
co.notix.pj
co.notix.h7
com.google.firebase.database.FirebaseDatabaseKtxRegistrar
co.notix.mm
co.notix.z4
co.notix.rc
co.notix.p5
co.notix.notix_inapp_flutter.R$style
co.notix.p4
co.notix.yf
co.notix.vp
co.notix.ci
co.notix.push.firebase.NotixFirebaseMessagingService
androidx.appcompat.widget.Toolbar
co.notix.w2
co.notix.callback.NotixCallback$PushDataLoad
co.notix.fi
com.google.android.gms.measurement.AppMeasurementReceiver
com.example.myapp.MainActivity
androidx.window.layout.ExtensionInterfaceCompat
androidx.work.ListenableWorker
androidx.versionedparcelable.CustomVersionedParcelable
co.notix.o
co.notix.nm
co.notix.jm
co.notix.hp
co.notix.v2
androidx.core.graphics.drawable.IconCompat
co.notix.em
co.notix.i8
co.notix.notix_inapp_flutter.R$attr
co.notix.f3
co.notix.b9
co.notix.mq
com.google.android.gms.measurement.AppMeasurement
co.notix.g0
co.notix.rg
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.google.firebase.sessions.SessionLifecycleService
co.notix.i0
co.notix.zi
co.notix.oc
co.notix.vk
co.notix.uk
co.notix.sn
androidx.lifecycle.ProcessLifecycleInitializer
co.notix.l9
co.notix.q5
androidx.window.core.Version$Companion
com.google.android.gms.common.internal.ReflectedParcelable
co.notix.R$dimen
androidx.window.layout.EmptyDecorator
co.notix.sp
co.notix.u3
co.notix.notix_inapp_flutter.Refs
co.notix.qd
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
co.notix.cp
co.notix.b
co.notix.nn
co.notix.gk
com.google.firebase.perf.network.FirebasePerfOkHttpClient
androidx.profileinstaller.ProfileInstallReceiver
com.google.firebase.storage.FirebaseStorageKtxRegistrar
co.notix.b4
co.notix.z0
co.notix.h6
co.notix.lsi.NotixLockScreenInterstitialAd
com.google.firebase.perf.metrics.AppStartTrace
co.notix.notix_inapp_flutter.R$styleable
io.flutter.view.FlutterCallbackInformation
co.notix.e
co.notix.nh
co.notix.n4
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback
co.notix.lo
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$1
co.notix.callback.NotixCallback
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
co.notix.u9
co.notix.appopen.NotixAppOpen$Companion
co.notix.bb
co.notix.da
androidx.window.layout.WindowLayoutInfo
co.notix.vl
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1
co.notix.fj
co.notix.f1
co.notix.la
co.notix.ug
com.google.android.gms.measurement.AppMeasurementService
androidx.activity.ImmLeaksCleaner
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl
co.notix.kb
co.notix.xo
co.notix.fe
com.google.firebase.provider.FirebaseInitProvider
co.notix.o0
co.notix.ze
com.google.firebase.perf.session.gauges.GaugeManager
co.notix.g3
co.notix.t9
androidx.window.layout.WindowBackend
co.notix.a7
co.notix.perseverance.worker.PerseveranceWorker
co.notix.e2
co.notix.interstitial.InterstitialButton
co.notix.notix_inapp_flutter.R$color
androidx.work.Worker
com.google.firebase.remoteconfig.RemoteConfigRegistrar
co.notix.ll
co.notix.go
co.notix.sj
co.notix.wp
androidx.appcompat.widget.ActivityChooserView$InnerLayout
co.notix.gl
co.notix.banner.BannerSize$Sticky
co.notix.i9
co.notix.ah
co.notix.b3
co.notix.e6
co.notix.ue
co.notix.r2
co.notix.li
co.notix.pd
co.notix.callback.NotixCallback$AppInstall
co.notix.yb
co.notix.t0
co.notix.jn
co.notix.bi
co.notix.rj
androidx.window.layout.WindowMetricsCalculator
co.notix.h8
co.notix.banner.BannerRequest
com.google.firebase.installations.FirebaseInstallationsRegistrar
co.notix.u8
co.notix.om
co.notix.bo
co.notix.g6
co.notix.o7
co.notix.push.NotixTargetEventHandler
co.notix.w8
co.notix.t3
co.notix.eo
androidx.window.layout.FoldingFeature$State$Companion
co.notix.pa
co.notix.d7
co.notix.qf
co.notix.f5
co.notix.uq
androidx.window.layout.SidecarAdapter$Companion
co.notix.td
co.notix.af
co.notix.y7
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
co.notix.xd
androidx.window.java.R
co.notix.r0
co.notix.appopen.NotixAppOpen$DefaultImpls
co.notix.o3
co.notix.oe
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar
co.notix.v5
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy
co.notix.up
co.notix.h5
co.notix.pi
co.notix.kc
kotlinx.coroutines.android.AndroidDispatcherFactory
androidx.window.core.ExperimentalWindowApi
co.notix.i5
co.notix.R$layout
co.notix.dd
co.notix.fl
co.notix.r6
co.notix.z8
co.notix.x2
co.notix.n1
co.notix.j4
co.notix.pl
co.notix.lh
io.flutter.plugins.firebase.storage.FlutterFirebaseAppRegistrar
co.notix.sb
androidx.work.impl.workers.ConstraintTrackingWorker
co.notix.x9
androidx.window.layout.SidecarCompat$TranslatingCallback
co.notix.lsi.LsiInterval
co.notix.pc
androidx.work.impl.workers.CombineContinuationsWorker
co.notix.ok
co.notix.jp
co.notix.zo
androidx.lifecycle.ReflectiveGenericLifecycleObserver
androidx.lifecycle.SavedStateHandleController
co.notix.lf
co.notix.k5
co.notix.jk
co.notix.il
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1
androidx.window.embedding.ActivityFilter
co.notix.notix_inapp_flutter.R$drawable
androidx.lifecycle.LegacySavedStateHandleController$tryToAddRecreator$1
co.notix.ec
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy
co.notix.z6
co.notix.push.permissions.NotificationsPermissionActivity
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy
co.notix.z3
androidx.window.layout.WindowInfoTrackerDecorator
co.notix.he
co.notix.te
co.notix.zf
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
co.notix.p2
co.notix.df
co.notix.a3
co.notix.bh
com.google.firebase.iid.FirebaseInstanceIdReceiver
co.notix.mp
co.notix.t2
co.notix.q8
com.google.firebase.messaging.FirebaseMessaging
co.notix.ui
co.notix.y
co.notix.jh
co.notix.oo
co.notix.km
co.notix.e1
co.notix.o8
co.notix.zp
co.notix.ag
androidx.window.layout.FoldingFeature
co.notix.q7
co.notix.notix_inapp_flutter.R$bool
androidx.lifecycle.DefaultLifecycleObserverAdapter
androidx.appcompat.app.AlertController$RecycleListView
androidx.lifecycle.LiveData$LifecycleBoundObserver
co.notix.x6
androidx.appcompat.widget.FitWindowsLinearLayout
co.notix.r8
co.notix.wi
co.notix.ke
androidx.work.WorkerParameters
co.notix.notix_inapp_flutter.R
co.notix.x8
co.notix.y3
co.notix.c4
co.notix.p
co.notix.dl
co.notix.en
androidx.window.layout.HardwareFoldingFeature
co.notix.vh
co.notix.ti
co.notix.m7
co.notix.callback.NotixCallback$GeneralMetrics
androidx.appcompat.widget.ActionBarOverlayLayout
co.notix.vq
co.notix.ch
co.notix.g7
co.notix.tc
co.notix.d1
co.notix.d3
com.google.android.datatransport.cct.CctBackendFactory
co.notix.l
androidx.activity.result.ActivityResultRegistry$1
co.notix.lq
co.notix.vj
co.notix.ed
co.notix.u2
co.notix.gq
co.notix.banner.BannerSize$Inline
co.notix.pq
co.notix.tk
co.notix.ng
androidx.window.layout.SidecarCompat$DistinctElementCallback
co.notix.wq
co.notix.j9
co.notix.wa
androidx.window.layout.FoldingFeature$OcclusionType$Companion
co.notix.j6
co.notix.lsi.LockScreenInterstitialWorker
co.notix.push.NotixNotificationModifier
co.notix.rd
co.notix.kd
co.notix.eg
co.notix.y8
co.notix.y0
co.notix.dk
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
co.notix.xn
co.notix.zh
co.notix.p6
co.notix.i
co.notix.bn
com.google.android.gms.common.api.internal.BasePendingResult
co.notix.yp
co.notix.ko
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
co.notix.d2
co.notix.ee
co.notix.v8
co.notix.a6
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
co.notix.fm
co.notix.ya
co.notix.tm
co.notix.kn
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1
co.notix.s3
androidx.work.OverwritingInputMerger
co.notix.im
co.notix.wm
co.notix.k0
androidx.appcompat.widget.DialogTitle
co.notix.n9
com.google.firebase.datatransport.TransportRegistrar
co.notix.banner.BannerSize
com.google.firebase.messaging.FirebaseMessagingRegistrar
co.notix.ho
co.notix.R$raw
co.notix.od
co.notix.o9
co.notix.w9
io.flutter.view.TextureRegistry$ImageConsumer
co.notix.rb
co.notix.jg
co.notix.tb
co.notix.gg
co.notix.jq
co.notix.do
co.notix.no
co.notix.bk
co.notix.a5
co.notix.og
co.notix.vb
co.notix.f6
co.notix.qq
androidx.window.embedding.ActivityStack
co.notix.cq
co.notix.se
co.notix.cj
co.notix.be
co.notix.xh
co.notix.kl
co.notix.j
co.notix.ma
co.notix.ij
co.notix.periodicworker.PeriodicWorker
co.notix.c1
co.notix.o2
co.notix.R$color
co.notix.ig
co.notix.qi
io.flutter.embedding.engine.FlutterJNI
co.notix.y2
androidx.savedstate.Recreator
co.notix.R$id
co.notix.um
co.notix.pg
co.notix.pf
co.notix.me
co.notix.x1
co.notix.native.NativeLoader$DefaultImpls
co.notix.sq
androidx.window.R
co.notix.am
com.google.android.gms.measurement.AppMeasurementJobService
co.notix.a0
co.notix.sm
co.notix.f4
co.notix.b7
co.notix.dc
co.notix.ek
io.flutter.plugins.imagepicker.ImagePickerPlugin$LifeCycleObserver
kotlin.internal.jdk7.JDK7PlatformImplementations
co.notix.m8
co.notix.ri
co.notix.callback.NotixCallback$ManageAudience
co.notix.appopen.AppOpenLoader$DefaultImpls
co.notix.f8
androidx.window.embedding.MatcherUtils
androidx.window.layout.HardwareFoldingFeature$Type$Companion
co.notix.banner.NotixBannerLoader
co.notix.ep
co.notix.push.NotificationClickHandlerActivity
co.notix.w3
androidx.window.embedding.SplitRule$Api30Impl
co.notix.pn
co.notix.iq
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter
com.google.android.gms.common.api.Scope
co.notix.f0
co.notix.v0
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper
co.notix.nd
co.notix.rl
co.notix.r9
co.notix.wj
co.notix.yg
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin
co.notix.notix_inapp_flutter.R$integer
co.notix.gh
co.notix.ck
co.notix.g2
androidx.work.impl.background.systemalarm.SystemAlarmService
co.notix.rm
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
co.notix.z1
co.notix.c9
co.notix.q
com.google.firebase.messaging.FirebaseMessagingService
co.notix.p7
co.notix.v
co.notix.x3
co.notix.xq
com.google.firebase.perf.FirebasePerfKtxRegistrar
com.google.firebase.remoteconfig.internal.ConfigFetchHttpClient
co.notix.s2
co.notix.interstitial.InterstitialActivity
co.notix.fq
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter
co.notix.e5
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
co.notix.yi
androidx.window.layout.FoldingFeature$Orientation$Companion
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1
co.notix.sl
co.notix.h1
android.support.v4.app.RemoteActionCompatParcelizer
co.notix.b0
androidx.work.impl.WorkDatabase
co.notix.hm
kotlin.coroutines.jvm.internal.BaseContinuationImpl
co.notix.x0
co.notix.hi
co.notix.R$bool: int enable_system_alarm_service_default
co.notix.rj: co.notix.rq a
co.notix.k9: co.notix.l9 b
co.notix.dp: co.notix.xo d
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
co.notix.t2: java.lang.String c
co.notix.cl: co.notix.fl d
co.notix.interstitial.InterstitialActivity: co.notix.w9 t
co.notix.R$style: int TextAppearance_Compat_Notification_Info
co.notix.notix_inapp_flutter.R$id: int action_container
co.notix.R$color: int notix_interstitial_text_background_color
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
co.notix.xl: co.notix.al a
co.notix.R$dimen: int compat_button_padding_horizontal_material
co.notix.ad: int a
co.notix.ri: java.lang.Object b
co.notix.hq: co.notix.ea q
co.notix.o: int e
co.notix.notix_inapp_flutter.R$color: int notix_primary_color_highlight
co.notix.e8: int c
co.notix.zg: java.lang.Object c
androidx.datastore.preferences.PreferencesProto$Value: int STRING_FIELD_NUMBER
co.notix.ac: java.lang.Object b
com.google.firebase.perf.v1.NetworkRequestMetric: int PERF_SESSIONS_FIELD_NUMBER
co.notix.zf: co.notix.xf b
co.notix.d3: co.notix.d3 a
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzaw
co.notix.banner.NotixBannerView: co.notix.banner.BannerSize responseSize
co.notix.notix_inapp_flutter.R$bool: int enable_system_alarm_service_default
com.google.firebase.messaging.FirebaseMessagingService: java.lang.String EXTRA_TOKEN
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
com.google.firebase.perf.util.Timer: android.os.Parcelable$Creator CREATOR
co.notix.en: co.notix.gn b
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.ApplicationInfo applicationInfo_
co.notix.no: int c
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$2
co.notix.l2: co.notix.pq g
co.notix.notix_inapp_flutter.R$drawable: int notix_ic_notix_close
com.google.android.gms.internal.measurement.zzft$zzn: java.lang.String zzh
co.notix.o9: co.notix.w9 b
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
co.notix.n1: co.notix.jh a
co.notix.appopen.AppOpenActivity: kotlin.Lazy t
co.notix.mg: co.notix.domain.RequestVars f
co.notix.hq: co.notix.we g
com.google.android.gms.internal.measurement.zzfn$zza$zzc: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.R$styleable: int GradientColorItem_android_offset
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
co.notix.eo: java.lang.Object a
co.notix.R$id: int tag_accessibility_clickable_spans
co.notix.w0: co.notix.ta a
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType FULL
co.notix.domain.RequestVars: java.lang.String var3
co.notix.vq: java.util.Iterator d
co.notix.i7: java.lang.String c
co.notix.u0: co.notix.jh a
co.notix.ul: java.lang.Object a
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_text_light_normal
co.notix.r9: co.notix.w9 b
com.google.android.gms.internal.measurement.zzfh$zze: int zze
com.google.android.gms.internal.measurement.zzft$zzb: boolean zzj
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.TraceMetric traceMetric_
co.notix.y9: co.notix.z9 c
kotlin.jvm.internal.FunctionReference: int arity
co.notix.yh: java.lang.String a
co.notix.rk: co.notix.vk b
co.notix.callback.NotixCallback$Subscription: co.notix.callback.NotixCallbackStatus status
co.notix.rc: java.lang.Class e
co.notix.qg: co.notix.rg d
co.notix.me: co.notix.he b
co.notix.x5: co.notix.k6 a
co.notix.R$id: int accessibility_custom_action_12
co.notix.nn: co.notix.s8 a
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
co.notix.R$drawable: int notification_bg_normal
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastQueueTime
co.notix.ye: kotlin.jvm.functions.Function1 b
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzp
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_android_fontWeight
co.notix.notix_inapp_flutter.R$id: int iv_appopen_icon
com.google.android.gms.internal.measurement.zzfh$zze: com.google.android.gms.internal.measurement.zzfh$zzc zzh
androidx.window.R$attr: int splitLayoutDirection
co.notix.am: co.notix.gn b
co.notix.notix_inapp_flutter.R$string: int notix_public_app_id
co.notix.he: java.lang.String i
co.notix.k4: java.lang.Object a
androidx.window.embedding.MatcherUtils: java.lang.String sMatchersTag
com.google.android.gms.internal.measurement.zzfn$zza$zzb: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.a8: co.notix.yn h
co.notix.notix_inapp_flutter.R$styleable: int SplitPairRule_splitLayoutDirection
com.google.firebase.perf.v1.ApplicationInfo: int GOOGLE_APP_ID_FIELD_NUMBER
com.google.firebase.perf.v1.TraceMetric: int bitField0_
co.notix.gp: int a
com.google.android.gms.internal.measurement.zzft$zzj: int zzg
co.notix.o: int d
co.notix.p3: co.notix.d4 d
co.notix.R$drawable: int common_google_signin_btn_text_light_normal_background
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_text_disabled
co.notix.na: kotlinx.coroutines.sync.Mutex b
co.notix.gd: long a
com.google.android.gms.internal.measurement.zzft$zzb: boolean zzi
com.google.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
co.notix.kg: co.notix.ng d
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType NONE
co.notix.R$string: int common_google_play_services_update_text
co.notix.notix_inapp_flutter.R$styleable: int[] FontFamily
co.notix.rp: int b
co.notix.mq: java.lang.String c
co.notix.s7: long b
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_26
co.notix.vq: co.notix.yn a
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzkc zzh
co.notix.co: com.google.common.util.concurrent.ListenableFuture b
com.google.firebase.perf.v1.CpuMetricReading: int CLIENT_TIME_US_FIELD_NUMBER
co.notix.re: co.notix.he c
co.notix.notix_inapp_flutter.R$id: int italic
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map listenerToActivity
com.google.android.gms.internal.measurement.zzfn$zza: com.google.android.gms.internal.measurement.zzkc zzg
co.notix.j7: co.notix.dd a
co.notix.R$attr: int fontProviderCerts
co.notix.vn: long b
co.notix.notix_inapp_flutter.R$id: int androidx_window_activity_scope
co.notix.push.NotificationClickHandlerActivity: co.notix.qq b
com.google.firebase.perf.v1.ApplicationInfo: java.lang.String appInstanceId_
co.notix.r5: co.notix.w5 a
co.notix.lsi.LockScreenInterstitialWorker: android.app.NotificationManager c
co.notix.wk: java.util.Map e
co.notix.i9: co.notix.l9 b
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean newFrameAvailable
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
co.notix.notix_inapp_flutter.R$drawable: int notification_icon_background
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_endColor
co.notix.s9: int a
co.notix.yg: int a
co.notix.ra: co.notix.s8 c
com.google.firebase.perf.v1.GaugeMetric: com.google.protobuf.Internal$ProtobufList androidMemoryReadings_
co.notix.aj: java.lang.String f
co.notix.rc: kotlinx.coroutines.CoroutineScope b
co.notix.x4: int c
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
co.notix.vp: co.notix.xp b
com.google.android.gms.internal.measurement.zzgb$zzc: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.wi: kotlinx.coroutines.sync.Mutex a
co.notix.qh: java.lang.Object a
co.notix.nj: long b
com.google.android.gms.internal.measurement.zzgb$zzc: com.google.android.gms.internal.measurement.zzkc zzf
com.google.protobuf.GeneratedMessageLite: int MEMOIZED_SERIALIZED_SIZE_MASK
co.notix.zl: int d
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_light_pressed
co.notix.dh: java.lang.Object b
androidx.window.layout.WindowMetrics: androidx.window.core.Bounds _bounds
co.notix.hq: co.notix.w9 n
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_14
co.notix.th: int a
co.notix.bf: co.notix.appopen.AppOpenLoader b
com.google.android.gms.internal.measurement.zzfh$zzb: com.google.android.gms.internal.measurement.zzlp zzd
com.google.android.gms.internal.measurement.zzgb$zzd: boolean zzj
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
co.notix.vg: co.notix.jh d
co.notix.f7: kotlin.jvm.functions.Function1 d
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.application.AppStateMonitor appStateMonitor
co.notix.we: kotlin.Lazy c
co.notix.gn: co.notix.pq c
co.notix.notix_inapp_flutter.R$attr: int ttcIndex
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_7
co.notix.te: co.notix.qi c
com.google.firebase.perf.v1.PerfSession: com.google.protobuf.Internal$IntList sessionVerbosity_
androidx.work.CoroutineWorker: kotlinx.coroutines.CompletableJob job
co.notix.domain.RequestVars: co.notix.sn Companion
co.notix.kj: int d
co.notix.im: int a
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.config.ConfigResolver configResolver
co.notix.R$styleable: int FontFamilyFont_fontVariationSettings
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_enable_title
co.notix.notix_inapp_flutter.R$string: int fcm_fallback_notification_channel_label
co.notix.R$id: int accessibility_custom_action_7
co.notix.ug: java.lang.Object b
com.google.android.gms.internal.measurement.zzft$zze: long zzi
co.notix.k6: kotlin.Lazy h
co.notix.appopen.NotixAppOpen$Companion: co.notix.appopen.NotixAppOpen$Companion $$INSTANCE
co.notix.R$attr: int fontProviderPackage
co.notix.yh: org.json.JSONObject e
co.notix.ne: int i
co.notix.bc: java.lang.String a
co.notix.y7: co.notix.d8 a
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
co.notix.h7: java.lang.String c
co.notix.R$string: int common_open_on_phone
co.notix.rf: co.notix.banner.NotixBannerView a
co.notix.R$layout: int notification_template_custom_big
co.notix.native.NotixNative: co.notix.native.NotixNative$Companion Companion
co.notix.R$styleable: int SignInButton_scopeUris
co.notix.if: co.notix.banner.NotixBannerView d
co.notix.l: java.lang.String c
androidx.window.layout.WindowMetricsCalculator$Companion: kotlin.jvm.functions.Function1 decorator
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type type
co.notix.vg: java.lang.String a
co.notix.banner.NotixBannerView: kotlinx.coroutines.CoroutineScope csMain
com.google.firebase.perf.v1.ApplicationInfo: int bitField0_
co.notix.x6: co.notix.appopen.AppOpenActivity a
co.notix.ik: java.lang.Integer c
co.notix.u: co.notix.l2 a
co.notix.banner.NotixBannerView: java.util.concurrent.atomic.AtomicBoolean loadCalled
co.notix.callback.NotixCallback$FcmTokenReceived: java.lang.String data
co.notix.w5: kotlin.Lazy b
co.notix.o: int c
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
co.notix.f2: co.notix.l2 a
co.notix.ul: co.notix.al b
co.notix.u: int p
co.notix.R$styleable: int FontFamilyFont_android_fontVariationSettings
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
co.notix.notix_inapp_flutter.R$bool: int enable_system_job_service_default
co.notix.id: java.lang.String c
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_light_disabled
co.notix.R$id: int iv_appopen_click
co.notix.sc: co.notix.lsi.LockScreenInterstitialWorker a
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
co.notix.qa: co.notix.oa a
co.notix.m7: co.notix.s7 d
co.notix.kq: int i
co.notix.pg: java.util.Map b
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
co.notix.sd: int d
co.notix.bj: co.notix.bj a
co.notix.hq: co.notix.x8 b
co.notix.ze: long c
co.notix.R$string: int common_google_play_services_install_text
co.notix.l2: co.notix.pq a
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_15
co.notix.rh: co.notix.periodicworker.PeriodicWorker b
co.notix.d4: kotlinx.coroutines.Job l
com.google.firebase.perf.v1.TraceMetric: boolean isAuto_
co.notix.vk: co.notix.l2 h
com.google.firebase.perf.v1.GaugeMetric: com.google.firebase.perf.v1.GaugeMetric DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzft$zzm: com.google.android.gms.internal.measurement.zzft$zzm zzc
com.google.firebase.perf.v1.ApplicationInfo: com.google.protobuf.Parser PARSER
co.notix.dk: co.notix.pq c
co.notix.R$id: int accessibility_custom_action_15
co.notix.R$id: int tag_transition_group
com.google.android.gms.internal.measurement.zzft$zza: java.lang.String zzf
co.notix.i9: java.lang.String c
co.notix.bm: java.lang.Object a
co.notix.R$id: int fl_description_container
co.notix.kl: java.lang.Object a
co.notix.lk: co.notix.push.pull.PullWorker g
co.notix.dl: int a
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzkc zzj
co.notix.ma: kotlinx.coroutines.sync.Mutex b
co.notix.yl: co.notix.al a
com.google.firebase.messaging.EnhancedIntentService: java.lang.String TAG
co.notix.zp: java.lang.String b
co.notix.k6: kotlin.Lazy l
co.notix.kj: java.lang.Object b
co.notix.push.data.NotificationOverrides: java.lang.Integer importance
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzft$zzh zzbc
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_8
co.notix.ql: co.notix.wk a
co.notix.z3: co.notix.d4 c
co.notix.f4: co.notix.m4 a
com.google.firebase.perf.v1.ApplicationInfo: com.google.protobuf.MapFieldLite customAttributes_
co.notix.am: java.lang.Object a
co.notix.je: co.notix.oe d
co.notix.bh: int e
co.notix.ne: co.notix.oe a
com.google.firebase.perf.v1.NetworkRequestMetric: int NETWORK_CLIENT_ERROR_REASON_FIELD_NUMBER
co.notix.j2: java.lang.Object b
co.notix.ng: co.notix.kk k
co.notix.q: co.notix.l2 a
co.notix.dp: co.notix.cp b
co.notix.t4: co.notix.rq b
com.google.android.gms.internal.measurement.zzfh$zza: com.google.android.gms.internal.measurement.zzkc zzh
com.google.android.gms.internal.measurement.zzfh$zzb: com.google.android.gms.internal.measurement.zzfh$zzd zzj
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_dark_disabled
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.google.android.gms.internal.measurement.zzfh$zza: com.google.android.gms.internal.measurement.zzlp zzd
com.google.android.gms.internal.measurement.zzfn$zza: com.google.android.gms.internal.measurement.zzkc zzh
co.notix.t8: int b
co.notix.appopen.AppOpenActivity: kotlin.jvm.functions.Function0 f
co.notix.notix_inapp_flutter.R$dimen: int notification_media_narrow_margin
co.notix.hq: co.notix.ng E
androidx.window.embedding.ExtensionEmbeddingBackend: java.lang.String TAG
co.notix.mb: co.notix.nb b
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
co.notix.if: int a
co.notix.al: co.notix.bl b
co.notix.R$string: int common_google_play_services_install_title
co.notix.ia: java.lang.String b
co.notix.yg: co.notix.gh b
co.notix.hc: java.lang.Object b
com.google.firebase.messaging.FirebaseMessagingService: java.lang.String ACTION_NEW_TOKEN
co.notix.hq: co.notix.d F
co.notix.d8: long g
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzfn$zza zzr
co.notix.appopen.AppOpenActivity: kotlin.Lazy s
androidx.window.layout.SidecarCompat$FirstAttachAdapter: androidx.window.layout.SidecarCompat sidecarCompat
co.notix.tc: co.notix.lsi.LockScreenInterstitialWorker a
com.google.firebase.perf.v1.TraceMetric: com.google.firebase.perf.v1.TraceMetric DEFAULT_INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
co.notix.vk: co.notix.zf f
co.notix.m9: int h
co.notix.p7: java.lang.Object a
co.notix.kd: java.lang.String d
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: io.flutter.plugin.common.MethodChannel channel
com.google.firebase.perf.application.AppStateUpdateHandler: com.google.firebase.perf.application.AppStateMonitor appStateMonitor
co.notix.h2: java.lang.Object b
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat windowExtension
co.notix.a8: int d
co.notix.banner.NotixBannerView: kotlinx.coroutines.flow.MutableStateFlow timeVisibleF
androidx.window.R$styleable: int[] ActivityRule
co.notix.i7: co.notix.j7 b
co.notix.yb: java.util.List a
co.notix.k7: java.lang.Integer e
co.notix.fh: co.notix.gh e
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation$Companion Companion
androidx.window.core.Version: androidx.window.core.Version UNKNOWN
co.notix.notix_inapp_flutter.R$id: int fl_description_container
co.notix.ng: co.notix.qq g
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
co.notix.R$string: int notix_public_app_name
co.notix.zl: kotlin.jvm.functions.Function1 a
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
co.notix.n7: co.notix.s7 e
co.notix.pg: java.lang.String m
co.notix.g4: java.lang.String e
co.notix.cp: java.lang.Long b
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_dark_pressed
co.notix.ug: kotlinx.coroutines.sync.Mutex c
co.notix.u1: co.notix.jh a
co.notix.a4: int a
com.google.firebase.perf.v1.ApplicationInfo: com.google.firebase.perf.v1.AndroidApplicationInfo androidAppInfo_
androidx.window.core.Version$bigInteger$2: androidx.window.core.Version this$0
com.google.firebase.perf.application.AppStateUpdateHandler: com.google.firebase.perf.v1.ApplicationProcessState currentAppState
co.notix.R$styleable: int GradientColor_android_centerY
co.notix.ah: co.notix.gh b
androidx.window.layout.SidecarWindowBackend: boolean DEBUG
com.google.firebase.storage.StorageRegistrar: java.lang.String LIBRARY_NAME
co.notix.b2: java.lang.String c
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.GaugeMetric gaugeMetric_
co.notix.q9: co.notix.w9 a
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1 INSTANCE
co.notix.l1: co.notix.jh a
com.google.android.gms.internal.measurement.zzft$zzj: long zzj
co.notix.kp: co.notix.jh a
co.notix.ih: co.notix.jh g
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type FOLD
co.notix.banner.BannerRequest: long zoneId
co.notix.ol: int c
co.notix.jh: kotlinx.coroutines.CoroutineScope b
androidx.window.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
com.google.firebase.perf.v1.TransportInfo: com.google.protobuf.Parser PARSER
co.notix.pl: kotlinx.coroutines.sync.Mutex c
co.notix.ok: java.lang.String d
co.notix.p8: co.notix.p8 a
co.notix.y9: java.lang.Object b
com.google.android.gms.internal.measurement.zzft$zzh: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.al: java.util.List g
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
co.notix.eg: co.notix.k3 a
co.notix.l2: co.notix.pq c
co.notix.zh: co.notix.yh a
co.notix.R$id: int accessibility_custom_action_28
co.notix.jh: kotlinx.coroutines.sync.Mutex f
co.notix.u6: co.notix.appopen.AppOpenActivity a
co.notix.fn: java.lang.Object b
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
co.notix.ek: int c
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.SessionManager instance
co.notix.R$id: int iv_appopen_image
co.notix.m1: int a
co.notix.l2: co.notix.pq e
co.notix.notix_inapp_flutter.R$style: int Notix_Banner_Text_H3
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
co.notix.d5: co.notix.ta a
co.notix.li: co.notix.pi b
co.notix.sa: android.graphics.Bitmap$CompressFormat b
co.notix.oe: co.notix.gk c
co.notix.k2: co.notix.l2 c
co.notix.notix_inapp_flutter.R$id: int top
co.notix.up: java.lang.Object a
co.notix.appopen.AppOpenActivity: kotlin.Lazy o
co.notix.nb: co.notix.g b
co.notix.wk: boolean f
com.google.firebase.perf.session.gauges.GaugeManager: long TIME_TO_WAIT_BEFORE_FLUSHING_GAUGES_QUEUE_MS
co.notix.up: co.notix.xp b
co.notix.wn: long a
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo lastInfo
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
co.notix.v8: co.notix.x8 b
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas mResultGuardian
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
co.notix.R$id: int accessibility_custom_action_29
co.notix.k6: co.notix.interstitial.InterstitialButton g
co.notix.notix_inapp_flutter.R$layout: int notix_layout_banner_horizontal
co.notix.k3: co.notix.gb c
co.notix.push.data.NotificationOverrides: java.lang.String iconUrl
co.notix.b8: java.lang.Object a
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
co.notix.callback.NotixCallback$ManageAudience: java.lang.String data
co.notix.kq: java.lang.String d
co.notix.jo: com.google.common.util.concurrent.ListenableFuture a
com.google.firebase.perf.v1.PerfMetric: int bitField0_
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzad
co.notix.banner.NotixBannerView: co.notix.banner.NotixBannerListener listener
co.notix.b8: int c
com.google.android.gms.internal.measurement.zzhz: int zza
com.google.android.gms.internal.measurement.zzft$zzj: long zzk
androidx.datastore.preferences.PreferencesProto$Value: int LONG_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_icon_disabled
com.google.android.gms.internal.measurement.zzgb$zzd: int zzf
co.notix.j8: co.notix.h8 e
co.notix.li: int c
co.notix.bf: long c
co.notix.zg: kotlinx.coroutines.sync.Mutex b
com.google.protobuf.GeneratedMessageLite: int UNINITIALIZED_HASH_CODE
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.MapFieldLite customAttributes_
co.notix.l2: co.notix.pq l
androidx.window.embedding.ActivityStack: boolean isEmpty
co.notix.ek: java.lang.Object a
com.google.android.gms.internal.measurement.zzft$zzj: boolean zzbb
co.notix.log.LogLevel: co.notix.log.LogLevel[] $VALUES
co.notix.ag: int a
co.notix.notix_inapp_flutter.R$id: int icon_group
co.notix.j2: int d
co.notix.z7: co.notix.yn d
co.notix.perseverance.worker.PerseveranceWorker: co.notix.qi c
com.google.firebase.perf.v1.GaugeMetadata: int maxAppJavaHeapMemoryKb_
com.google.firebase.perf.v1.GaugeMetadata: int MAX_APP_JAVA_HEAP_MEMORY_KB_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfn$zza$zzc: int zzf
co.notix.z6: co.notix.appopen.AppOpenActivity b
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat embeddingExtension
co.notix.interstitial.InterstitialButton: java.lang.String text
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: androidx.window.layout.SidecarWindowBackend this$0
co.notix.hk: int b
co.notix.dm: co.notix.rq a
com.google.firebase.perf.v1.NetworkRequestMetric: long timeToResponseCompletedUs_
co.notix.R$styleable: int FontFamilyFont_fontStyle
co.notix.bf: kotlin.jvm.functions.Function1 d
com.google.android.gms.internal.measurement.zzfh$zze: boolean zzk
com.google.android.gms.internal.measurement.zzft$zza: com.google.android.gms.internal.measurement.zzlp zzd
com.google.android.gms.internal.measurement.zzfh$zzc: com.google.android.gms.internal.measurement.zzfh$zzf zzf
com.google.android.gms.internal.measurement.zzfh$zzc: com.google.android.gms.internal.measurement.zzfh$zzc zzc
co.notix.R$id: int accessibility_custom_action_3
co.notix.R$id: int accessibility_custom_action_8
co.notix.en: int a
co.notix.ee: kotlinx.coroutines.flow.MutableStateFlow f
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
co.notix.kh: java.lang.String c
co.notix.R$styleable: int ColorStateListItem_lStar
co.notix.appopen.AppOpenActivity: co.notix.d7 e
co.notix.th: co.notix.periodicworker.PeriodicWorker b
co.notix.k7: java.lang.Integer c
co.notix.p: int e
co.notix.zj: int a
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.PerfSession perfSession
co.notix.oj: int d
androidx.window.layout.SidecarCompat$FirstAttachAdapter: java.lang.ref.WeakReference activityWeakReference
co.notix.l7: co.notix.g a
co.notix.R$id: int iv_image
com.google.android.gms.internal.measurement.zzfh$zze: java.lang.String zzg
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.firebase.perf.application.AppStateUpdateHandler: boolean isRegisteredForAppState
co.notix.R$drawable: int common_google_signin_btn_text_light_normal
co.notix.o: int a
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_android_fontVariationSettings
co.notix.pg: java.io.Serializable f
co.notix.w6: co.notix.appopen.AppOpenActivity a
co.notix.hq: co.notix.r8 f
co.notix.interstitial.NotixInterstitial$Companion: co.notix.interstitial.NotixInterstitial$Companion $$INSTANCE
co.notix.w4: co.notix.u4 a
co.notix.notix_inapp_flutter.R$attr: int circleCrop
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_20
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims
co.notix.R$id: int tag_window_insets_animation_callback
co.notix.f: co.notix.f a
com.google.firebase.perf.v1.GaugeMetric: int bitField0_
com.google.android.gms.internal.measurement.zzft$zzn: float zzj
co.notix.hq: co.notix.l2 l
co.notix.bg: java.lang.String b
co.notix.pk: co.notix.og a
co.notix.a1: co.notix.rq a
co.notix.vc: co.notix.r8 b
co.notix.x3: co.notix.d4 a
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object state
co.notix.ui: co.notix.perseverance.worker.PerseveranceWorker b
co.notix.l3: java.lang.Object a
co.notix.R$id: int line1
co.notix.bm: co.notix.gn b
co.notix.aj: co.notix.o h
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int memoizedSerializedSize
co.notix.periodicworker.PeriodicWorker: co.notix.m4 e
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.ArrayDeque imageReaderQueue
androidx.window.embedding.SplitRule: int minSmallestWidth
co.notix.R$drawable: int common_google_signin_btn_text_dark_normal
co.notix.R$id: int italic
co.notix.notix_inapp_flutter.R$style: int TextAppearance_Compat_Notification_Time
co.notix.e8: java.lang.Object a
co.notix.push.pull.PullWorker: long f
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Waiter waiters
co.notix.R$styleable: int FontFamily_fontProviderSystemFontFamily
co.notix.tl: java.lang.Object c
co.notix.notix_inapp_flutter.R$id: int bottom
co.notix.notix_inapp_flutter.R$drawable: int notification_bg_normal
co.notix.callback.NotixCallback$RefreshData: co.notix.callback.NotixCallbackStatus status
com.google.android.gms.internal.measurement.zzft$zzc: boolean zzi
co.notix.zf: co.notix.callback.NotixCallbackHandler c
co.notix.r0: co.notix.pq b
co.notix.ua: java.util.Map b
co.notix.af: kotlin.jvm.functions.Function1 d
co.notix.notix_inapp_flutter.R$attr: int splitLayoutDirection
co.notix.notix_inapp_flutter.R$dimen: int notification_big_circle_margin
co.notix.ah: java.lang.Object a
co.notix.R$styleable: int[] GradientColor
co.notix.lsi.LockScreenInterstitialWorker: co.notix.rc d
co.notix.v1: int a
co.notix.k3: co.notix.u7 f
co.notix.id: java.lang.String d
com.google.android.gms.internal.measurement.zzfn$zzg: com.google.android.gms.internal.measurement.zzfn$zzg zzc
co.notix.notix_inapp_flutter.R$id: int tag_unhandled_key_listeners
co.notix.R$styleable: int[] FontFamilyFont
co.notix.md: co.notix.md a
co.notix.he: java.lang.String c
co.notix.s6: co.notix.appopen.AppOpenActivity a
com.google.firebase.perf.v1.ApplicationInfo: com.google.firebase.perf.v1.ApplicationInfo DEFAULT_INSTANCE
co.notix.R$string: int notix_continue_to_app
androidx.window.embedding.SplitInfo: float splitRatio
co.notix.c9: java.lang.Object b
com.google.android.gms.internal.measurement.zzft$zzi: java.lang.String zzg
co.notix.vn: long a
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetricsCalculatorCompat INSTANCE
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_10
co.notix.notix_inapp_flutter.R$id: int fl_appopen_continue
co.notix.ne: co.notix.oe l
com.google.firebase.perf.v1.TraceMetric: int NAME_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$id: int iv_banner_image
co.notix.ad: java.lang.String e
androidx.window.embedding.EmbeddingCompat: java.lang.String TAG
co.notix.notix_inapp_flutter.R$string: int notix_public_api_key
com.google.android.gms.internal.measurement.zzfn$zza$zzc: com.google.android.gms.internal.measurement.zzfn$zza$zzc zzc
co.notix.notix_inapp_flutter.R$styleable: int ColorStateListItem_alpha
co.notix.sa: co.notix.sa d
androidx.window.core.Version: androidx.window.core.Version VERSION_1_0
co.notix.wa: java.lang.String b
co.notix.notix_inapp_flutter.R$id: int tv_banner_title
co.notix.ma: co.notix.na a
co.notix.hq: co.notix.iq c
co.notix.np: int c
co.notix.ik: boolean d
com.google.firebase.perf.v1.NetworkRequestMetric: com.google.protobuf.MapFieldLite customAttributes_
co.notix.cg: int a
androidx.window.layout.SidecarCompat$DistinctElementCallback: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface callbackInterface
com.google.android.gms.internal.measurement.zzfh$zzf: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.c8: co.notix.d8 a
co.notix.notix_inapp_flutter.R$id: int tag_on_apply_window_listener
com.google.android.gms.internal.measurement.zzft$zzi: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_install_text
co.notix.R$style: int Notix_Banner_Text_H3
co.notix.mq: int a
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl splitInfoEmbeddingCallback
co.notix.bf: kotlin.jvm.functions.Function0 g
co.notix.R$attr: int imageAspectRatioAdjust
co.notix.qc: long a
co.notix.notix_inapp_flutter.R$styleable: int FontFamily_fontProviderQuery
co.notix.kf: co.notix.banner.NotixBannerView a
com.google.firebase.perf.metrics.Counter: android.os.Parcelable$Creator CREATOR
co.notix.pl: co.notix.wl i
co.notix.u4: long d
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzka zzat
com.google.android.gms.internal.measurement.zzft$zzf: long zzg
co.notix.R$id: int end
co.notix.R$dimen: int notification_right_side_padding_top
co.notix.ic: long a
androidx.window.layout.SidecarCompat: java.util.Map componentCallbackMap
com.google.firebase.perf.v1.NetworkRequestMetric: long responsePayloadBytes_
com.google.firebase.perf.v1.NetworkRequestMetric: long timeToRequestCompletedUs_
androidx.work.ListenableWorker: boolean mStopped
co.notix.R$layout: int notix_layout_banner_horizontal
co.notix.qk: int h
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_21
co.notix.lsi.LsiInterval: co.notix.yc Companion
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.config.DeviceCacheManager cache
co.notix.ze: co.notix.cf b
co.notix.v6: co.notix.appopen.AppOpenActivity a
co.notix.xm: int a
co.notix.notix_inapp_flutter.R$drawable: int notification_bg_normal_pressed
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: co.notix.notix_inapp_flutter.Refs interstitialRefs
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.transport.TransportManager transportManager
co.notix.ra: kotlinx.coroutines.CoroutineScope b
com.google.android.gms.internal.measurement.zzft$zzj: int zzaq
co.notix.i7: int a
co.notix.v4: co.notix.u4 a
co.notix.mk: co.notix.push.pull.PullWorker a
co.notix.R$attr: int imageAspectRatio
androidx.datastore.preferences.PreferencesProto$StringSet: int STRINGS_FIELD_NUMBER
co.notix.m4: kotlinx.coroutines.CoroutineScope a
co.notix.ch: co.notix.gh a
co.notix.lsi.LockScreenInterstitialActivity: co.notix.w9 t
co.notix.push.pull.PullWorker: co.notix.l2 b
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzft$zzk zzas
com.google.firebase.perf.v1.NetworkRequestMetric: int RESPONSE_PAYLOAD_BYTES_FIELD_NUMBER
co.notix.eh: kotlin.jvm.functions.Function1 b
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzkc zzn
co.notix.hq: co.notix.xf j
co.notix.h4: co.notix.i4 c
co.notix.lsi.LsiInterval: long LSI_FALLBACK_INTERVAL
com.google.android.gms.internal.measurement.zzft$zzl: com.google.android.gms.internal.measurement.zzjz zze
androidx.window.core.Version: kotlin.Lazy bigInteger$delegate
co.notix.ue: co.notix.we a
co.notix.h4: int b
co.notix.notix_inapp_flutter.R$raw: int firebase_common_keep
com.google.android.gms.internal.measurement.zzfh$zza: com.google.android.gms.internal.measurement.zzkc zzg
co.notix.gn: co.notix.pq e
com.google.android.gms.internal.measurement.zzfh$zzd: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.re: co.notix.te b
co.notix.h7: int a
com.google.android.gms.internal.measurement.zzfn$zzd: long zzf
co.notix.q4: co.notix.rq b
co.notix.R$id: int fl_spacer
com.google.android.gms.internal.measurement.zzft$zzi: com.google.android.gms.internal.measurement.zzkc zzf
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.remoteconfig.FirebaseRemoteConfig firebaseRemoteConfig
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
co.notix.R$color: int notification_action_color_filter
co.notix.fk: java.lang.Object i
co.notix.notix_inapp_flutter.R$id: int action_text
com.google.firebase.database.DatabaseRegistrar: java.lang.String LIBRARY_NAME
co.notix.m4: long g
co.notix.z7: java.lang.String c
co.notix.eh: java.lang.Object d
co.notix.jk: co.notix.kk b
co.notix.t6: co.notix.appopen.AppOpenActivity a
com.google.android.gms.internal.measurement.zzfh$zze: boolean zzj
co.notix.R$style: int TextAppearance_Compat_Notification_Line2
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_icon_dark_focused
co.notix.l4: co.notix.m4 b
co.notix.R$id: int accessibility_custom_action_11
androidx.window.R$styleable: int SplitPairRule_splitMinSmallestWidth
co.notix.oe: co.notix.vk b
co.notix.rg: co.notix.s8 c
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_centerX
co.notix.b: co.notix.s8 a
co.notix.b8: co.notix.d8 b
androidx.window.layout.SidecarWindowBackend: java.lang.String TAG
co.notix.xl: co.notix.gn d
co.notix.d0: int a
co.notix.pg: int g
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter sidecarAdapter
androidx.work.impl.utils.futures.AbstractFuture: androidx.work.impl.utils.futures.AbstractFuture$Listener listeners
co.notix.notix_inapp_flutter.R$color: int androidx_core_secondary_text_default_material_light
co.notix.log.LogLevel: co.notix.log.LogLevel FULL
co.notix.gl: co.notix.gl a
co.notix.R$id: int wide
co.notix.pg: co.notix.yn q
co.notix.s1: int a
co.notix.to: int d
com.google.android.gms.internal.measurement.zzgb$zzc: com.google.android.gms.internal.measurement.zzgb$zzc zzc
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: androidx.core.util.Consumer $consumer
co.notix.ga: java.lang.Throwable b
co.notix.ij: co.notix.dk d
co.notix.vl: int h
co.notix.k6: kotlin.Lazy o
co.notix.uo: co.notix.s8 c
co.notix.notix_inapp_flutter.R$drawable: int googleg_standard_color_18
co.notix.vk: co.notix.s8 d
co.notix.gc: int c
co.notix.se: android.content.Context a
co.notix.nf: co.notix.banner.NotixBannerView b
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.google.android.gms.internal.measurement.zzft$zzj: int zzf
co.notix.R$id: int action_divider
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.concurrent.locks.ReentrantLock lock
co.notix.notix_inapp_flutter.R$id: int tag_accessibility_heading
co.notix.y3: int a
co.notix.ee: kotlin.Lazy g
co.notix.R$drawable: int common_google_signin_btn_icon_light
androidx.window.R$styleable: int SplitPairFilter_primaryActivityName
co.notix.al: java.lang.String a
co.notix.lsi.LockScreenInterstitialActivity: co.notix.ec w
co.notix.wp: co.notix.xp b
androidx.window.layout.WindowMetricsCalculatorCompat: java.lang.String TAG
co.notix.zl: java.lang.Object b
co.notix.notix_inapp_flutter.R$id: int iv_image
co.notix.gk: co.notix.l2 e
co.notix.ih: java.lang.Object c
co.notix.ea: co.notix.na a
com.google.firebase.perf.v1.GaugeMetadata: int bitField0_
com.google.android.gms.internal.measurement.zzft$zzh: java.lang.String zzg
co.notix.R$id: int normal
co.notix.s5: co.notix.w5 a
co.notix.notix_inapp_flutter.R$layout: int notification_template_part_time
com.google.android.gms.internal.measurement.zzfn$zzh: java.lang.String zzh
co.notix.hk: int f
co.notix.notix_inapp_flutter.R$id: int time
co.notix.R$style: int Notix_Banner_Text_H2
co.notix.uo: co.notix.iq a
co.notix.f0: co.notix.rq a
co.notix.w7: java.lang.String b
co.notix.R$drawable: int common_google_signin_btn_icon_dark
com.google.firebase.perf.v1.GaugeMetadata: int CPU_CLOCK_RATE_KHZ_FIELD_NUMBER
co.notix.nk: co.notix.pk a
com.google.firebase.perf.v1.NetworkRequestMetric: java.lang.String responseContentType_
co.notix.ll: int c
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_fontStyle
co.notix.f5: int a
co.notix.a2: co.notix.jh a
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityAction
co.notix.q9: co.notix.w9 f
com.google.firebase.perf.v1.AndroidApplicationInfo: java.lang.String sdkVersion_
co.notix.notix_inapp_flutter.R$layout: int notification_template_part_chronometer
co.notix.qm: int d
co.notix.w: long b
co.notix.uc: co.notix.log.LogLevel b
co.notix.dg: kotlinx.coroutines.CoroutineScope e
co.notix.push.firebase.NotixFirebaseMessagingService: co.notix.ea b
co.notix.R$drawable: int googleg_standard_color_18
co.notix.hq: co.notix.rc A
co.notix.push.data.NotificationOverrides: java.lang.String imageUrl
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Companion Companion
co.notix.mo: co.notix.worker.SelfRestartingWorker a
co.notix.notix_inapp_flutter.R$id: int standard
co.notix.al: java.lang.String c
com.google.firebase.perf.v1.PerfMetric: com.google.protobuf.Parser PARSER
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_endY
co.notix.qg: java.util.Set a
co.notix.R$color: int common_google_signin_btn_text_light_default
co.notix.f7: co.notix.d7 a
co.notix.notix_inapp_flutter.R$layout: int notix_activity_interstitial
co.notix.qp: java.lang.Object a
co.notix.notix_inapp_flutter.R$attr: int scopeUris
co.notix.mq: java.lang.String e
co.notix.r3: int c
co.notix.wg: co.notix.xg d
co.notix.R$styleable: int FontFamilyFont_ttcIndex
co.notix.ko: java.lang.Object a
co.notix.a9: co.notix.z8 a
co.notix.R$color: int notix_primary_color_highlight
co.notix.R$id: int accessibility_custom_action_10
co.notix.el: int a
co.notix.banner.BannerSize$Sticky: int width
co.notix.j5: co.notix.p4 a
co.notix.gc: java.lang.Object a
co.notix.nj: co.notix.dk d
co.notix.eo: int c
co.notix.R$string: int common_google_play_services_update_button
co.notix.ea: kotlinx.coroutines.flow.MutableStateFlow d
com.google.firebase.perf.v1.NetworkRequestMetric: com.google.protobuf.Parser PARSER
co.notix.q3: long e
co.notix.perseverance.worker.PerseveranceWorker: co.notix.pi b
co.notix.notix_inapp_flutter.R$attr: int shortcutMatchRequired
co.notix.notix_inapp_flutter.R$dimen: int notification_top_pad
co.notix.zq: co.notix.zq a
co.notix.m: java.lang.String b
co.notix.notix_inapp_flutter.R$styleable: int SplitPairRule_splitMinWidth
androidx.window.R$attr: int primaryActivityName
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id
co.notix.mj: java.lang.Object a
co.notix.v: java.lang.Object a
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzbf
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzfh$zzb: com.google.android.gms.internal.measurement.zzkc zzh
co.notix.l8: co.notix.l8 a
co.notix.eh: co.notix.gh e
co.notix.interstitial.InterstitialButton: co.notix.qb Companion
co.notix.m7: java.lang.Object a
co.notix.v4: java.lang.Object b
com.google.firebase.perf.v1.AndroidApplicationInfo: com.google.firebase.perf.v1.AndroidApplicationInfo DEFAULT_INSTANCE
androidx.window.R$id: int rtl
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
co.notix.qh: co.notix.periodicworker.PeriodicWorker b
co.notix.s2: co.notix.u2 a
co.notix.qa: co.notix.ra d
co.notix.R$dimen: int notification_small_icon_background_padding
co.notix.notix_inapp_flutter.R$dimen: int notification_subtext_size
co.notix.q9: java.lang.Object e
co.notix.R$dimen: int notification_subtext_size
co.notix.ac: co.notix.lsi.LockScreenInterstitialActivity a
co.notix.notix_inapp_flutter.R$style: int Notix_Banner_Text_H2
co.notix.notix_inapp_flutter.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
co.notix.R$drawable: int notification_icon_background
co.notix.be: java.lang.Object a
com.google.android.gms.internal.measurement.zzft$zzb: boolean zzl
com.google.android.gms.internal.measurement.zzgb$zzb: int zze
co.notix.dh: java.lang.Object d
co.notix.notix_inapp_flutter.R$id: int actions
co.notix.aq: co.notix.ie a
co.notix.e6: co.notix.k6 a
co.notix.e8: co.notix.f8 b
co.notix.appopen.AppOpenActivity: co.notix.xf d
com.google.firebase.perf.v1.GaugeMetadata: int deviceRamSizeKb_
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.NetworkRequestMetric networkRequestMetric_
co.notix.tc: int d
co.notix.R$dimen: int compat_button_inset_vertical_material
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingCompat$Companion Companion
co.notix.to: co.notix.uo c
co.notix.notix_inapp_flutter.R$styleable: int SplitPlaceholderRule_placeholderActivityName
co.notix.push.data.NotificationOverrides: java.lang.Boolean randomGroupId
co.notix.k1: co.notix.ta a
co.notix.push.firebase.NotixFirebaseMessagingService: co.notix.te c
com.google.android.gms.internal.measurement.zzfh$zzb: com.google.android.gms.internal.measurement.zzfh$zzb zzc
co.notix.aj: java.lang.String d
co.notix.u: int m
co.notix.pl: long g
co.notix.ke: co.notix.push.NotixNotificationModifier a
co.notix.pg: co.notix.xa a
co.notix.we: co.notix.s8 a
co.notix.u9: co.notix.w9 b
com.google.firebase.perf.v1.CpuMetricReading: com.google.protobuf.Parser PARSER
co.notix.ch: kotlinx.coroutines.sync.Mutex c
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_updating_text
com.google.android.gms.internal.measurement.zzgb$zzb: java.lang.String zzf
co.notix.hg: co.notix.we c
co.notix.wo: co.notix.rq a
co.notix.notix_inapp_flutter.R$attr: int activityName
co.notix.R$string: int notix_public_api_key
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
co.notix.l: java.lang.String f
co.notix.qp: int c
co.notix.R$styleable: int FontFamily_fontProviderAuthority
androidx.datastore.preferences.PreferencesProto$Value: int STRING_SET_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$layout: int notification_template_custom_big
co.notix.xc: co.notix.vc a
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$1: co.notix.notix_inapp_flutter.NotixInappFlutterPlugin this$0
co.notix.mg: java.lang.String e
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
co.notix.notix_inapp_flutter.R$styleable: int ColorStateListItem_android_color
com.google.android.gms.internal.measurement.zzfn$zzb: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.ce: kotlinx.coroutines.flow.FlowCollector a
co.notix.uh: int a
kotlin.jvm.internal.Lambda: int arity
co.notix.o9: java.lang.String c
co.notix.rp: java.lang.Object a
androidx.work.ListenableWorker: android.content.Context mAppContext
co.notix.fk: int h
co.notix.notix_inapp_flutter.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
co.notix.R$drawable: int notification_bg_low_pressed
androidx.window.R$styleable: int SplitPairFilter_secondaryActivityName
co.notix.pe: co.notix.push.NotixNotificationModifier b
co.notix.hp: co.notix.wb b
co.notix.uj: co.notix.ta a
co.notix.t2: co.notix.u2 b
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
com.google.android.gms.internal.measurement.zzft$zze: int zzj
co.notix.r3: co.notix.d4 b
co.notix.R$id: int auto
co.notix.push.pull.PullWorker: co.notix.xp d
com.google.android.gms.internal.measurement.zzft$zzj: int zzbl
co.notix.pk: co.notix.wb b
co.notix.mq: java.lang.String f
co.notix.l: java.lang.String b
com.google.android.gms.internal.measurement.zzfn$zze: com.google.android.gms.internal.measurement.zzfn$zze zzc
co.notix.qp: co.notix.xp b
co.notix.cl: java.lang.Throwable c
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_30
co.notix.aj: java.lang.String g
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
co.notix.eh: co.notix.gh a
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
co.notix.ig: co.notix.w9 b
co.notix.ye: int a
co.notix.a8: java.lang.Object e
com.google.firebase.perf.v1.GaugeMetadata: int MAX_ENCOURAGED_APP_JAVA_HEAP_MEMORY_KB_FIELD_NUMBER
co.notix.z9: co.notix.g9 a
co.notix.bf: co.notix.cf e
co.notix.p9: co.notix.w9 d
co.notix.R$id: int accessibility_custom_action_9
co.notix.notix_inapp_flutter.R$drawable: int notification_bg_low_normal
co.notix.l: java.lang.String h
androidx.window.embedding.SplitRule: int layoutDirection
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface callback
co.notix.nb: kotlin.jvm.functions.Function0 c
co.notix.a8: java.lang.String a
co.notix.R$drawable: int common_google_signin_btn_text_dark
co.notix.mj: co.notix.dk b
co.notix.y1: int a
co.notix.w9: co.notix.pi a
co.notix.notix_inapp_flutter.R$id: int tag_screen_reader_focusable
co.notix.wi: int c
co.notix.lm: co.notix.jh a
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: androidx.window.embedding.ExtensionEmbeddingBackend this$0
com.google.android.gms.internal.measurement.zzft$zzf: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.k6: kotlin.Lazy q
co.notix.n0: co.notix.jh a
com.google.android.gms.internal.measurement.zzfh$zzd: com.google.android.gms.internal.measurement.zzfh$zzd zzc
co.notix.l2: long m
co.notix.w7: java.lang.String c
co.notix.vi: java.lang.Object b
co.notix.j5: java.lang.Object b
co.notix.notix_inapp_flutter.R$layout: int notix_layout_banner_webview
co.notix.notix_inapp_flutter.R$id: int line1
co.notix.am: int c
co.notix.R$string: int common_google_play_services_updating_text
com.google.android.gms.internal.measurement.zzfh$zzf: int zzf
co.notix.ng: co.notix.we c
co.notix.mi: co.notix.pi b
com.google.android.gms.internal.measurement.zzft$zzk: com.google.android.gms.internal.measurement.zzft$zzk zzc
co.notix.qk: co.notix.wb c
co.notix.notix_inapp_flutter.R$color: int notix_interstitial_text_color
com.google.android.gms.internal.measurement.zzfn$zza: int zze
co.notix.R$color: int common_google_signin_btn_text_dark_pressed
co.notix.rg: co.notix.va a
co.notix.u3: int c
com.google.android.gms.internal.measurement.zzfn$zzc: int zzi
co.notix.R$id: int ll_appopen_content_card
co.notix.notix_inapp_flutter.R$attr: int imageAspectRatioAdjust
co.notix.n6: co.notix.appopen.AppOpenActivity a
io.flutter.embedding.engine.FlutterJNI: float displayDensity
co.notix.lp: co.notix.ip c
co.notix.an: co.notix.jh a
co.notix.in: int d
com.google.android.gms.internal.measurement.zzft$zzf: java.lang.String zzf
co.notix.notix_inapp_flutter.R$id: int iv_background
co.notix.ul: co.notix.wl d
com.google.android.gms.internal.measurement.zzfn$zzf: int zze
co.notix.notix_inapp_flutter.R$color: int notification_icon_bg_color
co.notix.zl: co.notix.gn c
co.notix.zj: java.lang.String c
co.notix.pl: java.lang.Object h
co.notix.bc: android.graphics.Bitmap c
androidx.window.layout.SidecarAdapter: androidx.window.layout.SidecarAdapter$Companion Companion
co.notix.oo: co.notix.pd a
co.notix.notix_inapp_flutter.R$string: int ad_label_text
co.notix.vi: int d
com.google.firebase.perf.v1.GaugeMetric: com.google.protobuf.Internal$ProtobufList cpuMetricReadings_
co.notix.f1: java.lang.String c
com.google.firebase.perf.v1.NetworkRequestMetric: int REQUEST_PAYLOAD_BYTES_FIELD_NUMBER
co.notix.so: co.notix.so c
co.notix.R$layout: int notification_template_part_time
co.notix.je: co.notix.oe a
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
com.google.android.gms.internal.measurement.zzft$zzm: com.google.android.gms.internal.measurement.zzjz zzg
co.notix.R$raw: int firebase_common_keep
co.notix.tn: co.notix.tn b
co.notix.ng: co.notix.xp l
co.notix.callback.NotixCallback$AppInstall: java.lang.String data
co.notix.w8: co.notix.x8 a
co.notix.td: co.notix.wb f
com.google.android.gms.internal.measurement.zzft$zzj: long zzx
co.notix.u: java.lang.Object n
com.google.android.gms.internal.measurement.zzfn$zzf: java.lang.String zzf
co.notix.h9: co.notix.h9 a
co.notix.lsi.LockScreenInterstitialWorker: co.notix.xp a
com.google.android.gms.internal.measurement.zzft$zza: java.lang.String zzi
co.notix.wk: co.notix.bl a
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedHeight
co.notix.jq: co.notix.jq a
co.notix.R$drawable: int common_google_signin_btn_icon_light_normal_background
co.notix.ke: co.notix.oe b
androidx.datastore.preferences.PreferencesProto$Value: int bitField0_
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
co.notix.mq: co.notix.nq b
co.notix.t2: int a
co.notix.ub: co.notix.rb b
co.notix.u: int l
co.notix.wm: co.notix.gn b
co.notix.rg: co.notix.iq b
com.google.firebase.perf.v1.AndroidApplicationInfo: int VERSION_NAME_FIELD_NUMBER
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
co.notix.gf: co.notix.s8 c
co.notix.mo: java.lang.Object b
co.notix.R$id: int iv_appopen_icon
co.notix.fb: co.notix.fb b
co.notix.notix_inapp_flutter.R$id: int notification_main_column
co.notix.r9: java.lang.String c
co.notix.o6: co.notix.appopen.AppOpenActivity a
co.notix.r4: java.lang.String b
co.notix.nh: co.notix.oh e
com.google.android.gms.internal.measurement.zzft$zzc: int zze
co.notix.e2: co.notix.pq b
co.notix.q: long b
co.notix.a4: co.notix.d4 c
co.notix.notix_inapp_flutter.R$drawable: int notification_bg
com.google.android.gms.internal.measurement.zzfn$zza$zzf: java.lang.String zzg
co.notix.ne: int h
co.notix.rd: int c
co.notix.cl: java.lang.String b
co.notix.sk: co.notix.he b
co.notix.R$styleable: int GradientColor_android_type
co.notix.yo: java.lang.Long c
com.google.firebase.perf.v1.ApplicationInfo: int APP_INSTANCE_ID_FIELD_NUMBER
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
co.notix.kd: int f
co.notix.j8: co.notix.i8 d
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.Internal$ProtobufList subtraces_
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_1
co.notix.Notix: co.notix.Notix$Companion Companion
co.notix.w9: co.notix.l2 d
co.notix.wi: co.notix.perseverance.worker.PerseveranceWorker d
co.notix.sm: co.notix.gn c
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
co.notix.hq: co.notix.a9 a
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
co.notix.wg: co.notix.xg a
co.notix.R$id: int fl_button_container
com.google.firebase.perf.v1.NetworkRequestMetric: int networkClientErrorReason_
co.notix.R$dimen: int notification_main_column_padding_top
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_17
co.notix.od: co.notix.og a
co.notix.d0: co.notix.pq b
co.notix.notix_inapp_flutter.R$string: int notix_continue_to_app
com.google.android.gms.internal.measurement.zzfn$zza: com.google.android.gms.internal.measurement.zzfn$zza zzc
co.notix.uk: int a
co.notix.op: co.notix.xp b
com.google.android.gms.internal.measurement.zzgb$zzd: java.lang.String zzh
com.google.android.gms.internal.measurement.zzfn$zzg: java.lang.String zzf
co.notix.tg: int c
co.notix.bh: kotlinx.coroutines.sync.Mutex b
co.notix.km: co.notix.rq a
co.notix.s7: long c
co.notix.v4: co.notix.n5 c
co.notix.ea: co.notix.zf b
co.notix.g4: int j
co.notix.sp: kotlinx.coroutines.flow.FlowCollector a
co.notix.td: co.notix.iq a
co.notix.lsi.NotixLockScreenInterstitialAd: co.notix.lsi.NotixLockScreenInterstitialAd$Companion Companion
co.notix.al: java.lang.String d
com.google.firebase.perf.v1.CpuMetricReading: long clientTimeUs_
co.notix.notix_inapp_flutter.R$style: int TextAppearance_Compat_Notification_Line2
co.notix.qk: java.lang.Object f
androidx.window.R$styleable: int SplitPairRule_splitRatio
co.notix.he: java.lang.String b
co.notix.yn: co.notix.yn d
com.google.android.gms.internal.measurement.zzft$zzj: long zzau
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.List lastValue
co.notix.R$color: int common_google_signin_btn_tint
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.google.firebase.perf.v1.GaugeMetric: int GAUGE_METADATA_FIELD_NUMBER
androidx.window.layout.DisplayCompatHelperApi28: androidx.window.layout.DisplayCompatHelperApi28 INSTANCE
co.notix.notix_inapp_flutter.Refs: java.util.Map map
co.notix.cc: co.notix.lsi.LockScreenInterstitialActivity a
co.notix.R$dimen: int notification_top_pad
co.notix.w2: co.notix.w2 a
co.notix.r1: co.notix.jh a
co.notix.za: co.notix.ab b
co.notix.R$id: int notification_main_column
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: co.notix.notix_inapp_flutter.Refs loaderRefs
androidx.window.embedding.SplitPairRule: java.util.Set filters
co.notix.notix_inapp_flutter.R$id: int tag_on_receive_content_mime_types
co.notix.mg: java.lang.Object b
com.google.android.gms.internal.measurement.zzfh$zzb: boolean zzk
androidx.window.core.Version: java.lang.String VERSION_PATTERN_STRING
co.notix.xd: co.notix.ee a
co.notix.ln: java.lang.Object a
co.notix.w5: kotlin.Lazy e
co.notix.xa: java.lang.String a
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzkc zzi
co.notix.push.NotixPush: co.notix.push.NotixPush$Companion Companion
co.notix.bd: co.notix.og a
co.notix.R$string: int common_google_play_services_unsupported_text
co.notix.lsi.LockScreenInterstitialActivity: co.notix.xf u
androidx.datastore.preferences.PreferencesProto$Value: int FLOAT_FIELD_NUMBER
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable reflected
co.notix.notix_inapp_flutter.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
co.notix.h3: co.notix.i3 b
co.notix.x7: int b
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String description
co.notix.xp: co.notix.oh b
co.notix.R$attr: int buttonSize
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarDeviceState lastDeviceState
co.notix.ba: int e
co.notix.ih: java.lang.Object f
co.notix.banner.BannerSize$Fixed: int height
co.notix.sk: int c
com.google.android.gms.internal.measurement.zzft$zzj: long zzm
com.google.android.gms.internal.measurement.zzft$zzg: int zze
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
co.notix.gk: co.notix.iq b
com.google.android.gms.internal.measurement.zzft$zzj: int zzak
co.notix.callback.NotixCallbackStatus: co.notix.callback.NotixCallbackStatus[] $VALUES
co.notix.notix_inapp_flutter.R$styleable: int[] ColorStateListItem
co.notix.callback.NotixCallback$GeneralMetrics: java.lang.String data
co.notix.banner.BannerRequest: long refreshIntervalMillis
co.notix.notix_inapp_flutter.R$id: int tv_banner_description
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity activity
co.notix.ef: co.notix.ef c
co.notix.gd: java.lang.String d
co.notix.pe: co.notix.iq a
com.google.android.gms.internal.measurement.zzft$zzc: int zzf
co.notix.v8: kotlinx.coroutines.flow.Flow a
androidx.window.layout.WindowInfoTracker$Companion: java.lang.String TAG
co.notix.y0: java.lang.String c
co.notix.pq: java.lang.Object c
com.google.android.gms.internal.measurement.zzft$zzn: com.google.android.gms.internal.measurement.zzft$zzn zzc
co.notix.w1: co.notix.jh a
com.google.android.gms.internal.measurement.zzft$zze: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.pg: int i
co.notix.q8: java.lang.Integer c
com.google.protobuf.AbstractMessageLite: int memoizedHashCode
com.google.firebase.perf.config.RemoteConfigManager: java.util.concurrent.Executor executor
co.notix.u: int c
co.notix.i: java.lang.String f
androidx.window.core.Version: int major
com.google.firebase.perf.v1.PerfSession: com.google.protobuf.Internal$ListAdapter$Converter sessionVerbosity_converter_
co.notix.dh: int f
co.notix.o9: int a
co.notix.b1: co.notix.jh a
co.notix.v5: co.notix.w5 a
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.google.android.gms.internal.measurement.zzft$zzl: com.google.android.gms.internal.measurement.zzjz zzf
co.notix.gd: java.lang.String c
co.notix.rb: co.notix.g a
co.notix.notix_inapp_flutter.R$dimen: int compat_button_inset_vertical_material
co.notix.notix_inapp_flutter.R$styleable: int ActivityFilter_activityAction
co.notix.m9: java.lang.Object f
co.notix.xl: java.lang.Object c
co.notix.da: com.google.android.gms.tasks.Task a
co.notix.appopen.AppOpenActivity: kotlin.Lazy i
co.notix.xp: co.notix.pq d
co.notix.me: co.notix.oe a
co.notix.R$attr: int fontProviderFetchStrategy
com.google.android.gms.internal.measurement.zzft$zzj: int zze
androidx.window.layout.DisplayCompatHelperApi17: androidx.window.layout.DisplayCompatHelperApi17 INSTANCE
kotlin.jvm.internal.CallableReference: java.lang.Object NO_RECEIVER
co.notix.qh: int c
co.notix.gh: kotlinx.coroutines.flow.MutableStateFlow b
co.notix.gm: co.notix.ta a
co.notix.cg: android.content.Context c
com.google.android.gms.internal.measurement.zzft$zzd: com.google.android.gms.internal.measurement.zzft$zzd zzc
com.google.android.gms.internal.measurement.zzjt$zzb: com.google.android.gms.internal.measurement.zzjj zzc
androidx.window.layout.FoldingFeature$Orientation: java.lang.String description
co.notix.n3: kotlinx.coroutines.flow.Flow a
com.google.android.gms.internal.measurement.zzft$zzn: long zzi
co.notix.wl: co.notix.il a
co.notix.pl: java.util.List d
com.google.firebase.messaging.EnhancedIntentService: java.util.concurrent.ExecutorService executor
co.notix.d8: java.util.LinkedHashMap e
co.notix.in: java.util.List a
co.notix.yh: long d
com.google.firebase.perf.v1.AndroidApplicationInfo: java.lang.String packageName_
co.notix.xm: co.notix.gn b
com.google.android.gms.internal.measurement.zzfn$zza: boolean zzi
co.notix.push.data.NotificationOverrides: java.lang.Integer priority
co.notix.ik: java.lang.String b
co.notix.no: co.notix.oo b
co.notix.pq: kotlinx.coroutines.sync.Mutex b
co.notix.appopen.NotixAppOpen$Companion: co.notix.appopen.NotixAppOpen $$delegate_0
co.notix.tk: int a
co.notix.hq: co.notix.dk w
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
co.notix.tl: java.lang.Object a
co.notix.b5: co.notix.jh a
co.notix.tn: co.notix.tn[] c
co.notix.R$id: int accessibility_custom_action_24
co.notix.ui: int c
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker$Companion $$INSTANCE
androidx.window.layout.ActivityCompatHelperApi24: androidx.window.layout.ActivityCompatHelperApi24 INSTANCE
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzbd
co.notix.fh: kotlinx.coroutines.sync.Mutex c
co.notix.kq: long g
co.notix.x0: co.notix.jh a
co.notix.tk: java.lang.String d
co.notix.si: java.lang.Object c
co.notix.be: int b
co.notix.go: com.google.common.util.concurrent.ListenableFuture a
co.notix.nj: java.lang.Object c
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
co.notix.de: kotlinx.coroutines.flow.Flow a
co.notix.hb: co.notix.ib c
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzft$zzg: double zzj
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
co.notix.kd: java.lang.String j
androidx.window.R$styleable: int SplitPairRule_clearTop
co.notix.ba: co.notix.ea a
co.notix.mf: co.notix.banner.NotixBannerView b
co.notix.w9: kotlinx.coroutines.CoroutineScope c
co.notix.tg: kotlinx.coroutines.sync.Mutex b
co.notix.w3: co.notix.d4 c
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List lastInfo
co.notix.notix_inapp_flutter.R$id: int none
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTrackerDecorator decorator
co.notix.interstitial.WebViewInterstitialActivity: kotlin.Lazy j
co.notix.mo: co.notix.worker.SelfRestartingWorker c
com.google.firebase.perf.v1.GaugeMetadata: int cpuClockRateKhz_
com.google.firebase.perf.v1.GaugeMetric: com.google.firebase.perf.v1.GaugeMetadata gaugeMetadata_
co.notix.qm: co.notix.gn c
co.notix.sd: co.notix.td a
co.notix.ng: co.notix.pe f
co.notix.vl: java.lang.Object a
co.notix.j5: co.notix.n5 c
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend windowBackend
co.notix.g3: int d
co.notix.nl: java.lang.Object a
co.notix.R$styleable: int[] ColorStateListItem
co.notix.ea: kotlinx.coroutines.flow.StateFlow e
co.notix.si: co.notix.perseverance.worker.PerseveranceWorker a
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_enable_button
com.google.firebase.messaging.EnhancedIntentService: android.os.Binder binder
co.notix.hl: co.notix.il b
androidx.datastore.preferences.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
co.notix.a8: co.notix.yn b
co.notix.R$styleable: int GradientColor_android_startX
co.notix.mg: java.lang.String d
com.google.android.gms.internal.measurement.zzft$zzj: long zzw
com.google.firebase.perf.v1.TraceMetric: int DURATION_US_FIELD_NUMBER
co.notix.um: co.notix.jh a
co.notix.k6: kotlin.Lazy i
co.notix.l3: int b
co.notix.p8: co.notix.p8 c
co.notix.cd: int a
co.notix.ci: java.lang.String a
co.notix.i1: co.notix.jh a
co.notix.kh: co.notix.oh b
co.notix.R$drawable: int notix_ic_notix_close
co.notix.ng: co.notix.vk j
co.notix.r2: co.notix.ta a
co.notix.m4: co.notix.l2 f
co.notix.uq: co.notix.interstitial.WebViewInterstitialActivity a
com.google.firebase.perf.v1.GaugeMetric: int CPU_METRIC_READINGS_FIELD_NUMBER
co.notix.l2: co.notix.pq d
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.PreferencesProto$Value DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.la: java.lang.Object a
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_text_dark_normal
com.google.firebase.perf.v1.ApplicationInfo: int CUSTOM_ATTRIBUTES_FIELD_NUMBER
co.notix.h2: co.notix.l2 c
co.notix.nh: int f
co.notix.w5: kotlin.Lazy a
co.notix.zh: co.notix.pi c
co.notix.ne: int g
co.notix.notix_inapp_flutter.R$styleable: int[] SplitPairFilter
com.google.firebase.perf.v1.GaugeMetadata: int maxEncouragedAppJavaHeapMemoryKb_
co.notix.vg: kotlin.jvm.functions.Function1 b
co.notix.R$drawable: int common_google_signin_btn_icon_dark_normal_background
co.notix.notix_inapp_flutter.R$id: int tag_accessibility_actions
androidx.window.R$styleable: int ActivityFilter_activityAction
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_dark_focused
co.notix.R$id: int tag_accessibility_actions
co.notix.x9: co.notix.z9 c
co.notix.af: int a
co.notix.ip: co.notix.xp b
co.notix.rk: int c
androidx.window.embedding.SplitRule$Api30Impl: androidx.window.embedding.SplitRule$Api30Impl INSTANCE
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified blockingDispatcher
co.notix.o: int g
androidx.window.R$attr: int clearTop
co.notix.r4: long c
com.google.android.gms.internal.measurement.zzfh$zzd: boolean zzg
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
co.notix.m4: co.notix.iq d
co.notix.dg: co.notix.iq a
co.notix.ic: co.notix.pc c
co.notix.k5: java.lang.String a
co.notix.hj: co.notix.og a
co.notix.xp: co.notix.pq e
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
co.notix.eb: co.notix.cb e
co.notix.a7: co.notix.appopen.AppOpenActivity a
co.notix.notix_inapp_flutter.R$styleable: int ColorStateListItem_android_lStar
androidx.window.layout.FoldingFeature$OcclusionType: androidx.window.layout.FoldingFeature$OcclusionType$Companion Companion
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
com.google.firebase.perf.v1.NetworkRequestMetric: int httpResponseCode_
co.notix.m9: java.lang.String d
com.google.android.gms.internal.measurement.zzfn$zzb: boolean zzh
co.notix.q3: int b
co.notix.ac: co.notix.lsi.LockScreenInterstitialActivity c
co.notix.R$id: int tag_screen_reader_focusable
co.notix.yj: co.notix.jh a
com.google.android.gms.internal.measurement.zzfn$zzf: com.google.android.gms.internal.measurement.zzfn$zzf zzc
co.notix.fb: co.notix.fb a
co.notix.te: kotlinx.coroutines.CoroutineScope d
co.notix.R$color: int notix_primary_color
co.notix.R$attr: int fontProviderSystemFontFamily
co.notix.notix_inapp_flutter.R$id: int async
co.notix.notix_inapp_flutter.R$dimen: int compat_notification_large_icon_max_width
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
co.notix.R$id: int tag_on_receive_content_mime_types
co.notix.bf: int a
co.notix.ca: co.notix.ca a
co.notix.oj: co.notix.dk c
co.notix.s1: co.notix.pq b
co.notix.le: co.notix.xf b
co.notix.oe: co.notix.we g
co.notix.R$style: int TextAppearance_Compat_Notification_Time
co.notix.ml: co.notix.wl c
co.notix.R$id: int tv_button
co.notix.R$id: int light
co.notix.hq: co.notix.wl e
co.notix.ni: co.notix.pi d
co.notix.m: java.lang.String c
com.google.firebase.perf.FirebasePerfRegistrar: java.lang.String EARLY_LIBRARY_NAME
co.notix.notix_inapp_flutter.R$drawable: int common_full_open_on_phone
co.notix.R$id: int iv_appopen_app_icon
co.notix.callback.NotixCallback$GeneralMetrics: co.notix.callback.NotixCallbackStatus status
co.notix.interstitial.WebViewInterstitialActivity: android.widget.FrameLayout g
co.notix.vk: co.notix.nq b
co.notix.vq: java.lang.Object f
co.notix.qe: int e
co.notix.notix_inapp_flutter.R$id: int ll_appopen_root
co.notix.R$id: int notification_background
com.google.android.gms.internal.measurement.zzft$zzj: int zzs
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_6
co.notix.xq: co.notix.xq a
co.notix.ec: co.notix.lsi.LockScreenInterstitialCallback a
co.notix.gc: co.notix.pc b
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified backgroundDispatcher
co.notix.notix_inapp_flutter.R$style: int Notix_Theme_Transparent
com.google.android.gms.internal.measurement.zzft$zze: com.google.android.gms.internal.measurement.zzkc zzf
co.notix.R$id: int icon_only
co.notix.bl: co.notix.bl[] f
co.notix.kk: co.notix.dk b
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_25
co.notix.d7: co.notix.i a
co.notix.r8: co.notix.xc[] b
androidx.window.layout.WindowLayoutInfo: java.util.List displayFeatures
androidx.datastore.preferences.PreferencesProto$Value: java.lang.Object value_
com.google.firebase.perf.v1.PerfMetric: int TRANSPORT_INFO_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgb$zzd: com.google.android.gms.internal.measurement.zzgb$zzd zzc
co.notix.notix_inapp_flutter.R$color: int notix_primary_color_disabled
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
co.notix.wj: int a
co.notix.jp: co.notix.jh a
com.google.android.gms.internal.measurement.zzfh$zze: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.jf: int a
co.notix.d8: kotlinx.coroutines.sync.Mutex d
co.notix.callback.NotixCallback$Unsubscription: java.lang.String data
kotlin.jvm.internal.FunctionReference: int flags
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: java.util.concurrent.Executor executor
com.google.android.gms.internal.measurement.zzft$zza: com.google.android.gms.internal.measurement.zzft$zza zzc
co.notix.notix_inapp_flutter.R$styleable: int FontFamily_fontProviderSystemFontFamily
androidx.window.R$styleable: int[] SplitPairRule
co.notix.so: co.notix.qo e
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
co.notix.R$id: int dialog_button
co.notix.qd: java.lang.Object b
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarCompat$Companion Companion
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
co.notix.m9: java.lang.String a
co.notix.k6: kotlin.Lazy r
co.notix.l: java.lang.String g
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzfn$zzd zzc
co.notix.R$attr: int fontProviderQuery
co.notix.k5: co.notix.n5 c
co.notix.lg: int a
com.google.android.gms.internal.measurement.zzft$zzk: com.google.android.gms.internal.measurement.zzlp zzd
kotlinx.coroutines.channels.BufferedChannel: long receivers
co.notix.R$id: int accessibility_action_clickable_span
co.notix.si: co.notix.yh b
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzal
co.notix.notix_inapp_flutter.R$id: int notification_background
co.notix.nm: co.notix.ta a
com.google.android.gms.internal.measurement.zzgb$zzb: com.google.android.gms.internal.measurement.zzgb$zzb zzc
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_notification_channel_name
co.notix.notix_inapp_flutter.R$attr: int nestedScrollViewStyle
co.notix.lp: long a
co.notix.R$id: int tv_appopen_appname
co.notix.on: boolean b
co.notix.lk: int d
com.google.android.gms.internal.measurement.zzft$zzn: java.lang.String zzg
co.notix.vl: co.notix.wl g
co.notix.w: co.notix.l2 a
co.notix.xf: kotlinx.coroutines.CoroutineScope b
co.notix.sc: int d
com.google.firebase.perf.config.RemoteConfigManager: long appStartConfigFetchDelayInMs
kotlinx.coroutines.InvokeOnCancelling: int _invoked
co.notix.R$id: int blocking
co.notix.y5: co.notix.k6 a
com.google.firebase.perf.v1.NetworkRequestMetric: int CLIENT_START_TIME_US_FIELD_NUMBER
co.notix.Notix$Companion: co.notix.Notix$Companion $$INSTANCE
co.notix.R$color: int common_google_signin_btn_text_dark_focused
co.notix.notix_inapp_flutter.R$style: int Widget_Compat_NotificationActionContainer
co.notix.v2: co.notix.v2 a
co.notix.R$styleable: int FontFamilyFont_android_ttcIndex
co.notix.ni: int e
co.notix.x4: java.lang.Object a
co.notix.ml: co.notix.bl a
co.notix.yo: java.lang.Integer b
co.notix.if: kotlinx.coroutines.CoroutineScope c
com.google.firebase.perf.session.gauges.GaugeManager: long APPROX_NUMBER_OF_DATA_POINTS_PER_GAUGE_METRIC
com.google.android.gms.internal.measurement.zzfn$zzb: int zze
co.notix.notix_inapp_flutter.R$styleable: int ActivityFilter_activityName
co.notix.R$dimen: int compat_notification_large_icon_max_width
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
co.notix.notix_inapp_flutter.R$attr: int fontProviderFetchTimeout
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_icon_dark
co.notix.ze: kotlin.jvm.functions.Function1 d
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
co.notix.vp: int c
co.notix.notix_inapp_flutter.R$id: int ll_banner_container
co.notix.notix_inapp_flutter.R$styleable: int[] ActivityFilter
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzq
co.notix.a8: java.lang.String g
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzft$zzj zzc
co.notix.vb: kotlin.jvm.functions.Function1 d
co.notix.periodicworker.PeriodicWorker: co.notix.d8 f
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_update_button
co.notix.na: co.notix.s8 a
co.notix.o3: java.lang.Object a
co.notix.ng: co.notix.iq b
com.google.android.gms.internal.measurement.zzfh$zza: com.google.android.gms.internal.measurement.zzfh$zza zzc
co.notix.d4: co.notix.u7 g
co.notix.vl: kotlin.jvm.internal.Ref$IntRef c
co.notix.p1: co.notix.pq b
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzap
co.notix.hq: co.notix.oe r
co.notix.notix_inapp_flutter.R$drawable: int notix_ic_chevron_right_24
co.notix.bp: java.lang.Long a
co.notix.pc: co.notix.pq b
co.notix.n9: int a
co.notix.fg: co.notix.hg b
co.notix.b4: co.notix.d4 c
co.notix.if: boolean b
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzkc zzo
co.notix.jg: co.notix.ng b
com.google.android.gms.internal.measurement.zzft$zzj: boolean zzbj
co.notix.o: int b
co.notix.p8: co.notix.p8 b
co.notix.vq: kotlin.jvm.functions.Function1 c
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
co.notix.notix_inapp_flutter.R$id: int text
co.notix.im: co.notix.gn b
co.notix.ch: co.notix.gh e
co.notix.k0: java.lang.String c
co.notix.in: java.lang.String b
co.notix.R$id: int accessibility_custom_action_21
co.notix.notix_inapp_flutter.R$dimen: int notification_right_side_padding_top
co.notix.u3: java.lang.Object a
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzfn$zze zzs
com.google.android.gms.internal.measurement.zzft$zza: java.lang.String zzg
com.google.android.gms.internal.measurement.zzgb$zzb: com.google.android.gms.internal.measurement.zzkc zzg
co.notix.R$style: int Notix_Banner_Text_H1
co.notix.eg: co.notix.d b
co.notix.notix_inapp_flutter.R$bool: int workmanager_test_configuration
co.notix.notix_inapp_flutter.R$style: int Notix_Theme_NoStatusBar
co.notix.pg: java.io.Serializable d
co.notix.i2: co.notix.l2 a
com.google.firebase.perf.v1.NetworkRequestMetric: int URL_FIELD_NUMBER
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.Internal$ProtobufList perfSessions_
com.google.android.gms.internal.measurement.zzfn$zzb: com.google.android.gms.internal.measurement.zzfn$zzb zzc
co.notix.qe: co.notix.te a
co.notix.li: java.lang.Object a
co.notix.mg: co.notix.ng c
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_icon_light_normal
co.notix.ci: int d
co.notix.R$string: int common_google_play_services_enable_text
co.notix.x7: java.lang.String a
co.notix.pl: int j
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_font
co.notix.di: java.lang.String a
co.notix.yc: co.notix.yc a
co.notix.R$styleable: int FontFamilyFont_android_font
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_update_title
co.notix.R$id: int text2
co.notix.om: co.notix.jh a
co.notix.w5: kotlin.Lazy d
co.notix.notix_inapp_flutter.R$layout: int notification_action_tombstone
com.google.android.gms.internal.measurement.zzft$zzj: boolean zzz
co.notix.m5: int a
com.google.firebase.perf.v1.CpuMetricReading: int SYSTEM_TIME_US_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzft$zzj: int zzbo
co.notix.ij: co.notix.dk a
co.notix.notix_inapp_flutter.R$styleable: int[] GradientColor
co.notix.fl: co.notix.jl b
co.notix.interstitial.NotixInterstitial: co.notix.interstitial.NotixInterstitial$Companion Companion
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_unknown_issue
co.notix.cl: int a
co.notix.k7: java.lang.Integer d
co.notix.j2: co.notix.l2 a
co.notix.interstitial.WebViewInterstitialActivity: co.notix.d f
co.notix.notix_inapp_flutter.R$styleable: int[] SplitPairRule
androidx.window.embedding.EmbeddingCompat: androidx.window.embedding.EmbeddingAdapter adapter
androidx.window.embedding.SplitController: java.util.Set staticSplitRules
com.google.firebase.perf.v1.GaugeMetadata: int CPU_PROCESSOR_COUNT_FIELD_NUMBER
co.notix.ok: java.lang.Object b
co.notix.push.data.NotificationOverrides: java.lang.String text
com.google.firebase.perf.v1.TransportInfo: int dispatchDestination_
androidx.datastore.preferences.PreferencesProto$PreferenceMap: int PREFERENCES_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$id: int dark
com.google.firebase.perf.v1.GaugeMetadata: com.google.firebase.perf.v1.GaugeMetadata DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfh$zza: boolean zzi
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.layout.SidecarAdapter sidecarAdapter
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
co.notix.pl: long f
co.notix.notix_inapp_flutter.R$dimen: int notification_right_icon_size
co.notix.R$id: int fl_title_container
com.google.android.gms.internal.measurement.zzfh$zzf: boolean zzh
co.notix.R$color: int androidx_core_secondary_text_default_material_light
co.notix.R$drawable: int notix_ic_chevron_right_24
co.notix.R$color: int common_google_signin_btn_text_light_disabled
co.notix.m6: android.view.animation.AlphaAnimation b
com.google.android.gms.internal.measurement.zzft$zzi: int zze
co.notix.R$drawable: int notix_ic_circle_chevron_right_40
androidx.datastore.preferences.PreferencesProto$Value: int DOUBLE_FIELD_NUMBER
co.notix.R$id: int accessibility_custom_action_5
co.notix.k2: int d
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
co.notix.fj: co.notix.hj a
co.notix.te: co.notix.s8 a
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.Parser PARSER
androidx.window.embedding.EmbeddingTranslatingCallback: androidx.window.embedding.EmbeddingAdapter adapter
com.google.firebase.storage.StorageRegistrar: com.google.firebase.components.Qualified blockingExecutor
com.google.android.gms.internal.measurement.zzft$zzc: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.bp: java.lang.Long c
co.notix.R$string: int common_google_play_services_enable_title
co.notix.periodicworker.PeriodicWorker: co.notix.ph g
com.google.firebase.perf.v1.CpuMetricReading: long systemTimeUs_
co.notix.R$styleable: int Capability_queryPatterns
co.notix.ok: int a
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList windowLayoutChangeCallbacks
com.google.firebase.perf.v1.NetworkRequestMetric: int TIME_TO_RESPONSE_INITIATED_US_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzft$zzm: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.dg: co.notix.ra g
co.notix.vf: co.notix.banner.NotixBannerView a
co.notix.R$attr: int font
co.notix.ik: long e
co.notix.bi: java.lang.Object a
co.notix.notix_inapp_flutter.R$attr: int fontProviderSystemFontFamily
co.notix.ik: co.notix.kk j
co.notix.ki: co.notix.pi b
co.notix.g3: co.notix.i3 a
com.google.android.gms.internal.measurement.zzfn$zza$zzf: int zze
co.notix.in: int e
co.notix.notix_inapp_flutter.R$layout: int notix_activity_appopen
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface sidecar
co.notix.fa: java.lang.Throwable b
com.google.android.gms.internal.measurement.zzft$zzi: int zzi
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_16
co.notix.banner.BannerRequest: java.lang.Integer experiment
com.google.android.gms.internal.measurement.zzgb$zzc: int zze
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowMetricsCalculator windowMetricsCalculator
com.google.android.gms.internal.measurement.zzfn$zzc: java.lang.String zzf
co.notix.z6: int a
com.google.android.gms.internal.measurement.zzfn$zza$zzc: int zzg
co.notix.notix_inapp_flutter.R$styleable: int SplitPairRule_clearTop
co.notix.tl: co.notix.wl d
co.notix.oq: co.notix.pq d
co.notix.tc: co.notix.lsi.LockScreenInterstitialWorker c
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage
co.notix.bk: co.notix.jh a
com.google.android.gms.cloudmessaging.zze: android.os.Parcelable$Creator CREATOR
co.notix.oi: kotlin.jvm.functions.Function1 b
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key key
co.notix.g4: java.lang.Object a
co.notix.ya: int a
co.notix.y3: co.notix.d4 b
co.notix.notix_inapp_flutter.R$styleable: int FontFamily_fontProviderAuthority
co.notix.i: java.lang.String g
co.notix.c4: java.lang.Object c
com.google.firebase.perf.session.gauges.GaugeManager: java.util.concurrent.ScheduledFuture gaugeManagerDataCollectionJob
co.notix.m9: org.json.JSONObject e
co.notix.ng: co.notix.gb h
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzba
co.notix.k6: int s
co.notix.me: java.lang.Object c
co.notix.yk: co.notix.ta a
co.notix.notix_inapp_flutter.R$styleable: int SplitPairFilter_primaryActivityName
co.notix.tg: co.notix.jh e
co.notix.interstitial.WebViewInterstitialActivity: co.notix.w9 e
co.notix.wf: kotlin.jvm.functions.Function0 a
co.notix.he: java.lang.Boolean l
co.notix.notix_inapp_flutter.R$id: int pb_appopen_continue
co.notix.n7: java.lang.Object b
co.notix.xj: co.notix.jh a
co.notix.bl: co.notix.bl c
co.notix.banner.BannerRequest: java.lang.String placement
androidx.window.R$attr: int splitMinSmallestWidth
co.notix.pg: kotlin.jvm.functions.Function1 p
com.google.android.gms.internal.measurement.zzfh$zze: int zzf
co.notix.mk: java.lang.Object b
co.notix.d4: kotlinx.coroutines.flow.MutableSharedFlow k
co.notix.notix_inapp_flutter.R$id: int icon_only
com.google.android.gms.internal.measurement.zzfn$zze: int zzg
com.google.android.gms.internal.measurement.zzfh$zzd: java.lang.String zzh
co.notix.s: co.notix.l2 b
co.notix.R$layout: int notix_layout_banner_webview
co.notix.aj: java.lang.String c
co.notix.u2: co.notix.wb b
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.gauges.GaugeManager gaugeManager
co.notix.uk: co.notix.vk c
co.notix.R$drawable: int notify_panel_notification_icon_bg
androidx.window.layout.WindowInfoTracker$Companion: boolean DEBUG
co.notix.notix_inapp_flutter.R$id: int right_side
co.notix.ii: co.notix.ta a
co.notix.R$drawable: int notification_bg
co.notix.sk: co.notix.vk a
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
co.notix.bh: co.notix.gh d
co.notix.fn: co.notix.gn c
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzfn$zzh zzt
co.notix.R$dimen: int compat_control_corner_material
co.notix.qq: co.notix.iq a
androidx.window.embedding.SplitController: boolean sDebug
co.notix.sl: java.lang.Object c
co.notix.ae: boolean c
co.notix.cf: co.notix.d b
co.notix.x9: int a
co.notix.sg: java.lang.Object c
co.notix.lf: co.notix.mf c
com.google.android.gms.internal.measurement.zzfh$zzf: int zze
co.notix.eq: co.notix.cq d
co.notix.sj: co.notix.jh a
co.notix.oe: co.notix.u7 f
co.notix.sc: java.lang.Object b
co.notix.x7: co.notix.yn e
co.notix.qd: co.notix.td a
com.google.android.gms.internal.measurement.zzfn$zzh: int zzi
co.notix.he: java.lang.String d
co.notix.ik: java.lang.Integer a
com.google.firebase.perf.v1.GaugeMetadata: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzft$zzg: com.google.android.gms.internal.measurement.zzft$zzg zzc
co.notix.R$id: int tag_on_receive_content_listener
com.google.android.gms.internal.measurement.zzgb$zzd: double zzk
co.notix.d4: kotlinx.coroutines.CoroutineScope c
co.notix.g4: java.lang.Object h
co.notix.banner.NotixBannerView: kotlinx.coroutines.Job contentLoadJob
co.notix.o1: co.notix.jh a
co.notix.qg: java.lang.Object c
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzao
co.notix.notix_inapp_flutter.R$color: int androidx_core_ripple_material_light
co.notix.notix_inapp_flutter.R$styleable: int Capability_queryPatterns
co.notix.R$string: int common_signin_button_text
co.notix.p9: java.lang.Object a
co.notix.R$dimen: int compat_button_inset_horizontal_material
co.notix.u: int i
co.notix.gb: kotlinx.coroutines.flow.MutableStateFlow a
com.google.android.gms.internal.measurement.zzfn$zza$zzb: int zze
com.google.firebase.messaging.FirebaseMessagingService: int RECENTLY_RECEIVED_MESSAGE_IDS_MAX_SIZE
co.notix.R$id: int adjust_height
co.notix.t1: co.notix.jh a
com.google.android.gms.internal.measurement.zzfn$zzc: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.m7: java.lang.Object c
co.notix.kd: long m
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_centerColor
co.notix.kl: int c
co.notix.wl: kotlinx.coroutines.sync.Mutex e
com.google.firebase.perf.v1.PerfMetric: int NETWORK_REQUEST_METRIC_FIELD_NUMBER
co.notix.banner.NotixBannerView: kotlinx.coroutines.flow.MutableStateFlow layoutF
co.notix.in: java.lang.String c
co.notix.R$layout: int notification_action
co.notix.notix_inapp_flutter.R$dimen: int compat_button_inset_horizontal_material
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified sessionsSettings
co.notix.callback.NotixCallback$FcmTokenReceived: co.notix.callback.NotixCallbackStatus status
co.notix.gf: co.notix.w9 d
co.notix.op: java.lang.Object a
co.notix.dc: co.notix.lsi.LockScreenInterstitialActivity a
co.notix.l9: co.notix.og a
co.notix.me: co.notix.oe d
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzy
co.notix.p9: int c
com.google.android.gms.internal.measurement.zzfn$zzh: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.R$attr: int fontProviderAuthority
co.notix.le: int a
co.notix.t8: co.notix.u8 c
co.notix.w3: int a
com.google.android.gms.internal.measurement.zzfn$zze: int zzf
co.notix.R$dimen: int notification_action_icon_size
co.notix.f: co.notix.f[] e
co.notix.R$id: int title
androidx.window.R$styleable: int ActivityFilter_activityName
co.notix.callback.NotixCallback$RefreshData: java.lang.String data
co.notix.pf: boolean b
co.notix.banner.NotixBannerView: co.notix.banner.NotixBannerLoader loader
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.FirebaseSessionsRegistrar$Companion Companion
co.notix.id: java.lang.String b
com.google.firebase.perf.v1.GaugeMetric: int SESSION_ID_FIELD_NUMBER
co.notix.R$string: int common_google_play_services_unknown_issue
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_2
co.notix.R$drawable: int notification_bg_normal_pressed
androidx.window.embedding.SplitRule: int minWidth
co.notix.y0: co.notix.pq b
androidx.window.layout.SidecarCompat: java.lang.String TAG
co.notix.R$layout: int notification_template_part_chronometer
co.notix.f6: co.notix.k6 a
co.notix.jf: co.notix.banner.NotixBannerView c
androidx.window.R$attr: int splitRatio
co.notix.al: java.util.Map f
co.notix.R$id: int accessibility_custom_action_2
co.notix.g2: java.lang.Object b
co.notix.gg: long c
co.notix.push.data.NotificationOverrides: java.lang.String title
com.google.firebase.perf.v1.TraceMetric: int PERF_SESSIONS_FIELD_NUMBER
co.notix.kq: co.notix.nq b
co.notix.id: long a
co.notix.ph: java.lang.Class b
co.notix.hq: co.notix.xp d
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_11
co.notix.notix_inapp_flutter.R$id: int adjust_width
co.notix.notix_inapp_flutter.R$layout: int notix_layout_banner_vertical
co.notix.ea: co.notix.xp c
co.notix.R$id: int tv_appopen_description
co.notix.R$styleable: int[] FontFamily
co.notix.nj: int e
co.notix.t4: co.notix.rq a
com.google.android.gms.measurement.internal.zzmv: android.os.Parcelable$Creator CREATOR
co.notix.gn: co.notix.pq b
co.notix.notix_inapp_flutter.R$styleable: int LoadingImageView_circleCrop
co.notix.m3: kotlinx.coroutines.flow.FlowCollector a
co.notix.k2: java.lang.Object b
co.notix.pl: co.notix.bl e
co.notix.pq: kotlin.jvm.functions.Function1 a
co.notix.i2: int d
androidx.datastore.preferences.protobuf.GeneratedMessageLite$ExtendableMessage: androidx.datastore.preferences.protobuf.FieldSet extensions
co.notix.r3: co.notix.d4 d
co.notix.callback.NotixCallbackStatus: co.notix.callback.NotixCallbackStatus SUCCESS
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzfn$zzf zzu
co.notix.g3: co.notix.i3 c
co.notix.s9: java.lang.String c
com.google.android.gms.internal.measurement.zzfn$zza$zzc: int zze
co.notix.R$color: int secondary_text_default_material_light
com.google.firebase.perf.config.RemoteConfigManager: long TIME_AFTER_WHICH_A_FETCH_IS_CONSIDERED_STALE_MS
co.notix.wj: java.lang.String c
co.notix.wm: int a
androidx.work.CoroutineWorker: androidx.work.impl.utils.futures.SettableFuture future
co.notix.kk: co.notix.aa f
com.google.firebase.perf.v1.AndroidApplicationInfo: int SDK_VERSION_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$string: int notix_public_project_id
co.notix.af: co.notix.cf c
com.google.android.gms.internal.measurement.zzft$zza: java.lang.String zzj
com.google.android.gms.internal.measurement.zzfn$zza: com.google.android.gms.internal.measurement.zzkc zzf
co.notix.hj: co.notix.wb b
com.google.android.gms.internal.measurement.zzft$zzl: com.google.android.gms.internal.measurement.zzft$zzl zzc
co.notix.nh: kotlinx.coroutines.sync.Mutex c
co.notix.rg: co.notix.nn d
com.google.android.gms.internal.measurement.zzfn$zza$zzf: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.ik: co.notix.ka h
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.String TAG
co.notix.notix_inapp_flutter.R$id: int forever
co.notix.lf: java.lang.Object a
co.notix.j5: int d
co.notix.qk: co.notix.vk g
com.google.firebase.perf.v1.PerfSession: com.google.protobuf.Parser PARSER
co.notix.mj: int c
co.notix.notix_inapp_flutter.R$id: int blocking
co.notix.gp: co.notix.zp c
androidx.window.layout.EmptyDecorator: androidx.window.layout.EmptyDecorator INSTANCE
co.notix.R$id: int accessibility_custom_action_22
co.notix.tg: java.lang.Object d
com.google.android.gms.internal.measurement.zzgb$zzd: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.m7: kotlinx.coroutines.sync.Mutex b
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
co.notix.ih: co.notix.jh a
com.google.android.gms.internal.measurement.zzft$zzk: int zze
co.notix.ml: int d
co.notix.R$bool: int workmanager_test_configuration
co.notix.vj: co.notix.jh a
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_dark_default
co.notix.R$id: int accessibility_custom_action_6
co.notix.native.NotixNative$Companion: co.notix.native.NotixNative$Companion $$INSTANCE
co.notix.p1: java.lang.String c
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.google.firebase.perf.config.RemoteConfigManager: long firebaseRemoteConfigLastFetchTimestampMs
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
co.notix.kd: java.lang.String i
co.notix.xo: java.lang.Long a
com.google.firebase.perf.v1.CpuMetricReading: com.google.firebase.perf.v1.CpuMetricReading DEFAULT_INSTANCE
co.notix.notix_inapp_flutter.R$color: int notification_action_color_filter
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom
co.notix.eo: co.notix.lo b
com.google.android.gms.internal.measurement.zzft$zzb: com.google.android.gms.internal.measurement.zzft$zzb zzc
com.google.android.gms.internal.measurement.zzft$zzj: int zzac
com.google.android.gms.internal.measurement.zzft$zza: java.lang.String zzl
co.notix.dk: co.notix.pq b
co.notix.u: long b
co.notix.i3: java.lang.String c
com.google.android.gms.internal.measurement.zzfn$zza$zzb: com.google.android.gms.internal.measurement.zzfn$zza$zzb zzc
com.google.android.gms.internal.measurement.zzfn$zzc: boolean zzg
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type HINGE
com.google.firebase.perf.v1.GaugeMetadata: int DEVICE_RAM_SIZE_KB_FIELD_NUMBER
co.notix.nf: int a
co.notix.banner.NotixBannerView: kotlinx.coroutines.flow.MutableStateFlow contentLoadedF
co.notix.notix_inapp_flutter.R$id: int right_icon
co.notix.R$drawable: int notification_action_background
co.notix.R$styleable: int FontFamily_fontProviderQuery
co.notix.dl: co.notix.fl c
co.notix.kd: long a
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.android.gms.internal.measurement.zzft$zzg: long zzh
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified firebaseApp
co.notix.notix_inapp_flutter.R$id: int fl_spacer
co.notix.R$drawable: int notification_bg_low
co.notix.w5: kotlin.Lazy c
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
com.google.android.gms.internal.measurement.zzfh$zzd: java.lang.String zzi
com.google.firebase.perf.v1.TransportInfo: int DISPATCH_DESTINATION_FIELD_NUMBER
co.notix.R$string: int ad_label_text
co.notix.oh: co.notix.s8 a
com.google.android.gms.internal.measurement.zzfn$zzd: java.lang.String zzl
co.notix.mq: java.lang.String d
com.google.firebase.perf.v1.AndroidMemoryReading: int USED_APP_JAVA_HEAP_MEMORY_KB_FIELD_NUMBER
com.google.firebase.perf.session.SessionManager: java.util.concurrent.Future syncInitFuture
co.notix.R$id: int tag_state_description
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_29
co.notix.appopen.AppOpenActivity: co.notix.d a
co.notix.notix_inapp_flutter.R$attr: int buttonSize
co.notix.yn: co.notix.yn c
co.notix.b0: co.notix.ta a
co.notix.qf: boolean a
co.notix.o: int f
co.notix.d8: co.notix.sa f
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.Object lock
co.notix.R$drawable: int notification_template_icon_low_bg
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
co.notix.push.data.NotificationOverrides: java.lang.Boolean showOnlyLastNotification
co.notix.appopen.AppOpenActivity: kotlin.Lazy n
co.notix.x8: kotlinx.coroutines.flow.MutableStateFlow b
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: android.app.Activity activity
co.notix.banner.NotixBannerView: co.notix.banner.BannerRequest request
co.notix.za: int c
com.google.firebase.sessions.FirebaseSessionsRegistrar: java.lang.String LIBRARY_NAME
co.notix.vi: co.notix.perseverance.worker.PerseveranceWorker a
co.notix.oq: co.notix.pq a
co.notix.op: int c
co.notix.m6: co.notix.appopen.AppOpenActivity a
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
co.notix.j0: co.notix.jh a
co.notix.b2: int a
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
co.notix.wb: java.util.LinkedHashMap b
co.notix.td: co.notix.s8 b
co.notix.l5: java.lang.String a
co.notix.gn: co.notix.oh a
co.notix.tq: kotlin.Lazy a
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
com.google.android.gms.internal.measurement.zzft$zzg: com.google.android.gms.internal.measurement.zzkc zzk
co.notix.hq: co.notix.m4 t
co.notix.hg: co.notix.s8 a
co.notix.yn: co.notix.xn b
co.notix.ij: java.lang.Object c
co.notix.notix_inapp_flutter.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
co.notix.qq: co.notix.push.NotixTargetEventHandler b
co.notix.sq: co.notix.tq a
co.notix.zm: co.notix.rq a
co.notix.v7: co.notix.d8 a
co.notix.t3: java.util.List a
com.google.firebase.perf.session.PerfSession: android.os.Parcelable$Creator CREATOR
co.notix.a8: kotlinx.coroutines.sync.Mutex c
co.notix.notix_inapp_flutter.R$styleable: int ColorStateListItem_lStar
co.notix.rm: java.util.Set a
co.notix.mo: int d
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.FieldSet extensions
co.notix.R$id: int ll_content_container
co.notix.s7: kotlin.jvm.functions.Function1 d
co.notix.e2: java.lang.String c
co.notix.q6: co.notix.appopen.AppOpenActivity a
co.notix.push.data.NotificationOverrides: java.lang.Integer color
com.google.android.gms.internal.measurement.zzft$zzd: long zzg
androidx.window.embedding.ActivityStack: java.util.List activities
co.notix.rf: co.notix.g b
co.notix.nn: co.notix.iq b
co.notix.rd: co.notix.td b
co.notix.t: co.notix.t a
com.google.android.gms.internal.measurement.zzft$zzj: int zzay
co.notix.r0: int a
co.notix.jh: java.lang.String d
co.notix.R$layout: int notix_activity_interstitial
co.notix.d1: co.notix.ta a
co.notix.sh: co.notix.periodicworker.PeriodicWorker b
co.notix.notix_inapp_flutter.R$styleable: int FontFamily_fontProviderCerts
co.notix.lb: java.lang.ref.WeakReference a
co.notix.d4: co.notix.gb d
co.notix.fk: co.notix.gk j
co.notix.z2: co.notix.z2 a
co.notix.e1: co.notix.jh a
co.notix.R$styleable: int LoadingImageView_imageAspectRatioAdjust
co.notix.oh: kotlinx.coroutines.sync.Mutex e
co.notix.he: java.lang.Integer a
co.notix.a6: co.notix.k6 a
co.notix.kq: int a
co.notix.r6: co.notix.appopen.AppOpenActivity a
co.notix.jf: java.lang.Object b
co.notix.se: java.lang.String b
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
co.notix.p: co.notix.l2 d
co.notix.qc: co.notix.rc d
co.notix.periodicworker.PeriodicWorker: co.notix.uo a
co.notix.c4: java.lang.Object a
co.notix.ub: kotlin.jvm.functions.Function0 d
co.notix.R$id: int tag_unhandled_key_listeners
co.notix.kd: java.lang.String b
co.notix.notix_inapp_flutter.R$id: int action_divider
co.notix.hq: co.notix.cf H
co.notix.R$styleable: int SignInButton_buttonSize
co.notix.k4: co.notix.m4 b
co.notix.rk: java.lang.Object a
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
co.notix.gj: int a
co.notix.ph: java.lang.String c
co.notix.notix_inapp_flutter.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
co.notix.banner.NotixBannerView: kotlinx.coroutines.flow.MutableStateFlow isVisibleF
co.notix.j6: co.notix.k6 a
co.notix.kd: int g
co.notix.bh: co.notix.gh a
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.MapFieldLite preferences_
co.notix.le: co.notix.he e
androidx.window.core.Version: androidx.window.core.Version VERSION_0_1
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_3
co.notix.ml: java.lang.Object b
co.notix.sh: int a
co.notix.eh: kotlinx.coroutines.sync.Mutex c
co.notix.n5: co.notix.oh a
co.notix.g5: co.notix.h5 c
co.notix.le: co.notix.oe d
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
co.notix.domain.RequestVars: java.lang.String var5
com.google.firebase.perf.v1.TraceMetric: int SUBTRACES_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$id: int light
co.notix.k6: co.notix.xf e
co.notix.banner.BannerRequest: co.notix.banner.BannerSize size
co.notix.notix_inapp_flutter.R$id: int wide
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: androidx.core.util.Consumer $consumer$inlined
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
co.notix.y1: co.notix.pq b
co.notix.lk: int e
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: androidx.window.layout.WindowInfoTrackerImpl this$0
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_text_dark_focused
co.notix.f9: java.lang.String b
co.notix.cg: co.notix.dg b
co.notix.u: int e
co.notix.ma: java.lang.Object d
co.notix.appopen.AppOpenActivity: kotlin.Lazy m
co.notix.notix_inapp_flutter.BuildConfig: java.lang.String BUILD_TYPE
co.notix.t8: java.lang.Object a
co.notix.ap: co.notix.zo b
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.PreferencesProto$StringSet DEFAULT_INSTANCE
co.notix.o: int k
co.notix.fk: java.lang.String e
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State FLAT
co.notix.n7: co.notix.c9 c
co.notix.notix_inapp_flutter.R$styleable: int[] SplitPlaceholderRule
com.google.firebase.perf.v1.TraceMetric: int IS_AUTO_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$string: int status_bar_notification_info_overflow
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.Parser PARSER
co.notix.notix_inapp_flutter.R$attr: int secondaryActivityAction
co.notix.R$color: int ripple_material_light
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: androidx.window.layout.WindowInfoTracker tracker
com.google.android.gms.internal.measurement.zzft$zzg: java.lang.String zzg
co.notix.notix_inapp_flutter.R$attr: int alpha
co.notix.notix_inapp_flutter.R$style: int TextAppearance_Compat_Notification_Info
com.google.firebase.perf.v1.AndroidMemoryReading: int usedAppJavaHeapMemoryKb_
co.notix.notix_inapp_flutter.R$attr: int imageAspectRatio
co.notix.dk: long d
co.notix.sg: co.notix.vg d
co.notix.ze: kotlin.jvm.internal.Ref$LongRef a
co.notix.R$dimen: int notification_big_circle_margin
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: android.content.Context context
androidx.window.R$attr: int finishSecondaryWithPrimary
co.notix.R$id: int accessibility_custom_action_26
co.notix.tl: int e
co.notix.bc: co.notix.lsi.LockScreenInterstitialActivity e
co.notix.notix_inapp_flutter.R$id: int title
co.notix.dg: co.notix.y8 b
androidx.window.R$attr: int alwaysExpand
co.notix.notix_inapp_flutter.R$attr: int fontWeight
co.notix.he: java.lang.String o
co.notix.j8: co.notix.j8 c
co.notix.cd: co.notix.dd d
androidx.window.core.Version: java.lang.String description
kotlin.jvm.internal.CallableReference: java.lang.Class owner
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
co.notix.hb: int b
co.notix.callback.NotixCallback$Click: co.notix.callback.NotixCallbackStatus status
co.notix.eb: co.notix.eb c
co.notix.sm: int d
co.notix.R$id: int async
co.notix.s7: kotlinx.coroutines.sync.Mutex e
co.notix.notix_inapp_flutter.R$attr: int fontProviderQuery
co.notix.r4: co.notix.o e
co.notix.p: co.notix.l2 a
co.notix.R$id: int action_text
co.notix.appopen.AppOpenActivity: kotlin.Lazy k
co.notix.R$color: int notix_interstitial_text_color
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.concurrent.locks.ReentrantLock extensionWindowBackendLock
co.notix.q3: co.notix.d4 d
co.notix.a5: co.notix.rq a
co.notix.R$styleable: int[] Capability
co.notix.hq: co.notix.qq h
com.google.android.gms.internal.measurement.zzfn$zzd: int zzh
co.notix.R$attr: int queryPatterns
co.notix.eh: int f
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_text_light_focused
co.notix.xf: kotlinx.coroutines.CoroutineScope a
com.google.android.gms.internal.measurement.zzfh$zzb: boolean zzm
co.notix.ag: co.notix.push.firebase.NotixFirebaseMessagingService c
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_icon_light_normal_background
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzbi
co.notix.hq: co.notix.eg J
co.notix.so: co.notix.ro d
co.notix.j7: kotlinx.coroutines.CoroutineScope b
co.notix.R$id: int none
co.notix.ij: long b
co.notix.rl: long b
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
co.notix.sm: long a
co.notix.notix_inapp_flutter.R$dimen: int notification_large_icon_width
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_18
co.notix.jh: co.notix.s8 a
co.notix.bo: long a
co.notix.f1: co.notix.pq b
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_update_text
co.notix.r0: java.lang.String c
co.notix.callback.NotixCallback$Impression: java.lang.String data
com.google.android.gms.internal.measurement.zzfh$zzc: com.google.android.gms.internal.measurement.zzlp zzd
com.google.firebase.perf.v1.PerfMetric: int TRACE_METRIC_FIELD_NUMBER
co.notix.lk: co.notix.push.pull.PullWorker a
com.google.android.gms.internal.measurement.zzft$zze: com.google.android.gms.internal.measurement.zzft$zze zzc
co.notix.periodicworker.PeriodicWorker: co.notix.iq c
co.notix.notix_inapp_flutter.R$drawable: int notix_ic_circle_chevron_right_40
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$3: co.notix.notix_inapp_flutter.NotixInappFlutterPlugin this$0
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean createNewReader
co.notix.m4: int i
co.notix.log.LogLevel: co.notix.log.LogLevel ERROR
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_tileMode
com.google.firebase.perf.config.RemoteConfigManager: int RANDOM_APP_START_CONFIG_FETCH_DELAY_MS
co.notix.periodicworker.PeriodicWorker: co.notix.wl b
co.notix.R$attr: int fontProviderFetchTimeout
co.notix.ai: co.notix.yh a
co.notix.bq: co.notix.he a
co.notix.kl: co.notix.wl b
co.notix.d4: boolean j
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_text_dark
co.notix.notix_inapp_flutter.R$styleable: int[] LoadingImageView
co.notix.si: int e
androidx.window.embedding.SplitPairFilter: java.lang.String secondaryActivityIntentAction
co.notix.sm: java.lang.Object b
co.notix.nq: co.notix.og a
co.notix.co: kotlinx.coroutines.CancellableContinuation a
com.google.android.gms.internal.measurement.zzfn$zza$zzb: int zzg
com.google.android.gms.internal.measurement.zzft$zzj: boolean zzaz
kotlin.jvm.internal.CallableReference: java.lang.Object receiver
com.google.android.gms.internal.measurement.zzfn$zzc: com.google.android.gms.internal.measurement.zzfn$zzc zzc
co.notix.sc: co.notix.lsi.LockScreenInterstitialWorker c
co.notix.k0: int a
co.notix.l2: co.notix.pq k
co.notix.w9: co.notix.wb e
co.notix.hb: java.lang.Object a
co.notix.R$styleable: int GradientColor_android_endY
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified firebaseInstallationsApi
com.google.firebase.perf.v1.TraceMetric: java.lang.String name_
co.notix.R$drawable: int notification_bg_low_normal
androidx.work.ListenableWorker: androidx.work.WorkerParameters mWorkerParams
co.notix.cd: java.lang.String c
co.notix.mg: int a
co.notix.hq: co.notix.td p
co.notix.d0: java.lang.String c
com.google.android.gms.internal.measurement.zzfh$zze: boolean zzi
co.notix.lj: int c
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_wear_update_text
co.notix.notix_inapp_flutter.R$id: int ll_appopen_header
co.notix.ne: java.lang.Object e
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_light_default
co.notix.notix_inapp_flutter.R$id: int text2
com.google.firebase.perf.v1.CpuMetricReading: int USER_TIME_US_FIELD_NUMBER
co.notix.i5: kotlinx.coroutines.flow.Flow a
com.google.firebase.abt.component.AbtRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.internal.measurement.zzfn$zzf: java.lang.String zzg
co.notix.kd: java.lang.String h
co.notix.ug: co.notix.vg a
co.notix.vq: int g
co.notix.xe: java.lang.Object a
co.notix.ng: kotlinx.coroutines.CoroutineScope a
androidx.window.core.Version: androidx.window.core.Version$Companion Companion
co.notix.zo: java.lang.Long a
co.notix.xg: co.notix.gh a
co.notix.x2: co.notix.x2 a
co.notix.callback.NotixCallback$Unsubscription: co.notix.callback.NotixCallbackStatus status
co.notix.ek: co.notix.gk b
co.notix.R$string: int common_google_play_services_notification_ticker
co.notix.R$drawable: int common_google_signin_btn_icon_light_normal
com.google.android.gms.internal.measurement.zzft$zzj: boolean zzbh
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_5
co.notix.pj: int d
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_type
co.notix.oj: int a
co.notix.ef: co.notix.gf b
androidx.window.embedding.SplitPairFilter: android.content.ComponentName primaryActivityName
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzax
co.notix.b4: int a
com.google.android.gms.internal.measurement.zzft$zza: int zze
co.notix.i3: co.notix.j3 a
co.notix.wd: boolean a
co.notix.eq: co.notix.eq c
co.notix.notix_inapp_flutter.R$styleable: int FontFamily_fontProviderPackage
com.google.android.gms.internal.measurement.zzfh$zzd: int zze
co.notix.R$color: int androidx_core_ripple_material_light
co.notix.x7: java.lang.String d
co.notix.notix_inapp_flutter.R$id: int tag_transition_group
co.notix.i5: co.notix.p4 b
co.notix.hf: boolean c
com.google.firebase.perf.v1.AndroidMemoryReading: com.google.firebase.perf.v1.AndroidMemoryReading DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfn$zzg: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.u3: co.notix.v3 b
co.notix.mn: co.notix.nn c
co.notix.ol: java.lang.Object a
androidx.window.R$id: int ltr
co.notix.wg: int e
co.notix.zg: co.notix.gh d
com.google.android.gms.internal.measurement.zzft$zzm: int zze
com.google.android.gms.internal.measurement.zzft$zzb: int zze
co.notix.R$dimen: int notification_content_margin_start
co.notix.ne: int j
co.notix.notix_inapp_flutter.R$drawable: int notification_template_icon_low_bg
co.notix.jh: kotlinx.coroutines.sync.Mutex g
co.notix.bc: java.lang.String b
co.notix.rc: co.notix.xp d
co.notix.hq: co.notix.ig I
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidth
co.notix.hf: boolean a
co.notix.notix_inapp_flutter.R$id: int icon
co.notix.l6: co.notix.appopen.AppOpenActivity a
co.notix.banner.BannerSize$Fixed: int width
co.notix.o: int h
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
co.notix.notix_inapp_flutter.R$id: int tag_on_receive_content_listener
co.notix.q3: kotlin.jvm.functions.Function1 c
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
co.notix.uf: int a
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: int label
com.google.android.gms.internal.measurement.zzgb$zza: com.google.android.gms.internal.measurement.zzgb$zza zzc
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_android_ttcIndex
com.google.android.gms.measurement.internal.zzac: android.os.Parcelable$Creator CREATOR
co.notix.f8: co.notix.z9 a
co.notix.R$attr: int fontStyle
co.notix.v1: co.notix.pq b
co.notix.ne: java.lang.String d
com.google.firebase.perf.v1.ApplicationInfo: int applicationProcessState_
co.notix.el: java.lang.String b
co.notix.notix_inapp_flutter.R$dimen: int notification_action_icon_size
co.notix.w7: co.notix.d8 a
co.notix.u: int d
co.notix.R$drawable: int common_google_signin_btn_text_light_focused
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
co.notix.vk: co.notix.wb g
co.notix.pi: co.notix.pq c
co.notix.hq: co.notix.d8 k
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
co.notix.c6: co.notix.k6 a
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_android_fontStyle
com.google.firebase.perf.v1.GaugeMetric: java.lang.String sessionId_
com.google.firebase.perf.v1.NetworkRequestMetric: long requestPayloadBytes_
co.notix.k6: kotlin.Lazy n
com.google.firebase.perf.config.RemoteConfigManager: long MIN_APP_START_CONFIG_FETCH_DELAY_MS
co.notix.R$id: int ll_desc_button_container
co.notix.rg: kotlin.jvm.functions.Function1 e
co.notix.m4: co.notix.u7 e
co.notix.np: java.lang.Object a
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_notification_ticker
co.notix.notix_inapp_flutter.R$id: int info
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
co.notix.kq: java.lang.String e
co.notix.notix_inapp_flutter.R$drawable: int notix_sh_left_rounded
co.notix.f4: co.notix.m4 d
co.notix.k9: java.lang.String c
co.notix.q8: long a
com.google.firebase.perf.v1.TraceMetric: int COUNTERS_FIELD_NUMBER
co.notix.y4: co.notix.y4 a
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
co.notix.ci: java.lang.Object b
androidx.window.R$styleable: int SplitPairRule_splitLayoutDirection
co.notix.k0: co.notix.pq b
co.notix.notix_inapp_flutter.R$styleable: int[] GradientColorItem
co.notix.push.pull.PullWorker: co.notix.dk c
co.notix.nh: java.lang.String b
co.notix.ma: long c
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
com.google.firebase.perf.v1.TransportInfo: int bitField0_
com.google.android.gms.internal.measurement.zzfn$zzh: com.google.android.gms.internal.measurement.zzfn$zzh zzc
androidx.window.layout.WindowInfoTracker: androidx.window.layout.WindowInfoTracker$Companion Companion
co.notix.qc: int b
co.notix.ub: co.notix.interstitial.InterstitialButton c
com.google.protobuf.GeneratedMessageLite: int MUTABLE_FLAG_MASK
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_endX
co.notix.mk: int d
com.google.firebase.perf.v1.PerfSession: com.google.firebase.perf.v1.PerfSession DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfn$zzg: int zze
co.notix.l2: co.notix.pq i
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialLoaderNext$1: io.flutter.plugin.common.MethodChannel$Result $result
kotlin.jvm.internal.CallableReference: java.lang.String signature
co.notix.xp: co.notix.iq c
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.logging.AndroidLogger logger
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
co.notix.m1: java.lang.String c
co.notix.R$id: int ll_appopen_continue_container
co.notix.y9: int a
com.google.android.gms.internal.measurement.zzfn$zza: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.ap: co.notix.yo a
co.notix.lsi.NotixLockScreenInterstitialAd$Companion: co.notix.lsi.NotixLockScreenInterstitialAd$Companion $$INSTANCE
co.notix.q5: co.notix.q5 a
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext _context
co.notix.ke: co.notix.he c
androidx.datastore.preferences.PreferencesProto$Value: int BOOLEAN_FIELD_NUMBER
co.notix.te: co.notix.pi b
co.notix.ja: co.notix.ja b
co.notix.ol: co.notix.wl b
co.notix.R$layout: int notix_activity_appopen
co.notix.pl: java.lang.Object a
com.google.android.gms.internal.measurement.zzft$zzc: com.google.android.gms.internal.measurement.zzft$zzl zzg
co.notix.bl: co.notix.bl d
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
co.notix.notix_inapp_flutter.R$styleable: int SignInButton_scopeUris
co.notix.he: java.lang.String n
co.notix.R$styleable: int GradientColor_android_endColor
co.notix.R$styleable: int FontFamily_fontProviderFetchTimeout
co.notix.d: java.util.LinkedHashMap b
co.notix.sg: kotlinx.coroutines.sync.Mutex a
co.notix.R$id: int accessibility_custom_action_30
co.notix.g3: java.lang.Object b
co.notix.jh: kotlin.Lazy e
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastDequeueTime
co.notix.fo: com.google.common.util.concurrent.ListenableFuture b
com.google.android.gms.internal.measurement.zzft$zzn: double zzk
co.notix.f: co.notix.f c
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController$Companion Companion
co.notix.oi: java.lang.String a
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted
co.notix.notix_inapp_flutter.R$attr: int font
co.notix.R$id: int accessibility_custom_action_19
co.notix.tk: java.lang.Object b
co.notix.notix_inapp_flutter.R$attr: int splitMinSmallestWidth
co.notix.rh: int a
co.notix.qd: co.notix.td c
co.notix.wj: co.notix.pq b
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean VERBOSE_LOGS
co.notix.fg: int a
co.notix.kk: co.notix.xp c
co.notix.vl: java.util.List e
co.notix.notix_inapp_flutter.R$styleable: int LoadingImageView_imageAspectRatio
co.notix.ma: co.notix.na e
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
co.notix.g4: co.notix.p4 f
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
co.notix.zf: co.notix.s8 a
co.notix.notix_inapp_flutter.R$dimen: int compat_button_padding_horizontal_material
co.notix.h2: int d
co.notix.g4: co.notix.m4 i
com.google.android.gms.internal.measurement.zzft$zzb: boolean zzk
androidx.work.impl.utils.futures.AbstractFuture: java.lang.Object value
co.notix.yh: int c
co.notix.hq: co.notix.pi i
co.notix.R$id: int accessibility_custom_action_23
co.notix.h3: kotlin.jvm.functions.Function1 a
co.notix.il: co.notix.wb b
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzt
co.notix.notix_inapp_flutter.R$color: int notix_primary_color
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_tint
co.notix.d4: co.notix.e4 b
co.notix.oc: java.lang.String c
co.notix.dp: co.notix.f9 a
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.config.RemoteConfigManager instance
co.notix.bb: co.notix.e3 b
co.notix.notix_inapp_flutter.R$id: int ll_appopen_content_card
co.notix.R$styleable: int ColorStateListItem_android_lStar
co.notix.mk: co.notix.push.pull.PullWorker c
co.notix.k6: co.notix.d f
co.notix.qm: java.lang.Object b
com.google.firebase.perf.v1.PerfMetric: int GAUGE_METRIC_FIELD_NUMBER
co.notix.ih: int h
co.notix.R$dimen: int notification_large_icon_width
co.notix.notix_inapp_flutter.R$string: int common_open_on_phone
co.notix.notix_inapp_flutter.R$id: int tv_description
co.notix.e2: int a
co.notix.o3: int c
co.notix.sd: java.lang.Object b
co.notix.zd: co.notix.ee a
com.google.android.gms.internal.measurement.zzfn$zza$zzf: com.google.android.gms.internal.measurement.zzfn$zza$zzf zzc
com.google.android.gms.measurement.internal.zzno: android.os.Parcelable$Creator CREATOR
co.notix.z5: co.notix.k6 a
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.google.firebase.perf.v1.AndroidMemoryReading: long clientTimeUs_
co.notix.ni: java.lang.Object c
com.google.android.gms.internal.measurement.zzjt: com.google.android.gms.internal.measurement.zzmw zzb
co.notix.yf: co.notix.callback.NotixCallback b
com.google.android.gms.internal.measurement.zzfh$zzf: java.lang.String zzg
co.notix.notix_inapp_flutter.R$attr: int placeholderActivityName
co.notix.xp: co.notix.ep a
co.notix.i: android.graphics.Bitmap c
co.notix.oh: kotlinx.coroutines.CoroutineScope b
kotlin.jvm.internal.CallableReference: boolean isTopLevel
co.notix.l2: co.notix.pq j
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type$Companion Companion
co.notix.R$style: int Widget_Compat_NotificationActionContainer
co.notix.cf: co.notix.s8 c
co.notix.R$id: int accessibility_custom_action_25
co.notix.oa: long b
co.notix.xi: java.lang.Object a
co.notix.ho: int a
co.notix.k6: kotlin.Lazy p
co.notix.R$styleable: int FontFamilyFont_font
co.notix.je: int e
co.notix.kj: co.notix.dk c
co.notix.R$color: int common_google_signin_btn_text_dark_default
co.notix.g0: co.notix.jh a
co.notix.R$drawable: int common_google_signin_btn_icon_disabled
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean trimOnMemoryPressure
com.google.android.gms.internal.measurement.zzfn$zzh: java.lang.String zzf
co.notix.p6: co.notix.appopen.AppOpenActivity a
co.notix.appopen.NotixAppOpen: co.notix.appopen.NotixAppOpen$Companion Companion
co.notix.sk: java.lang.Object d
co.notix.eq: co.notix.dq e
co.notix.la: co.notix.na b
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzkc zzbe
co.notix.R$string: int androidx_startup
co.notix.ub: kotlin.jvm.functions.Function0 e
co.notix.ak: co.notix.jh a
co.notix.bm: int c
co.notix.u8: kotlinx.coroutines.flow.FlowCollector a
co.notix.eb: co.notix.db d
co.notix.j2: co.notix.l2 c
co.notix.ah: int c
co.notix.r4: co.notix.p4 a
co.notix.qg: int e
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: java.util.concurrent.Executor executor
co.notix.notix_inapp_flutter.R$id: int tag_accessibility_clickable_spans
co.notix.hq: co.notix.uo v
androidx.window.embedding.SplitRule: float splitRatio
co.notix.jj: long b
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
co.notix.lq: co.notix.lq a
androidx.window.layout.ActivityCompatHelperApi30: androidx.window.layout.ActivityCompatHelperApi30 INSTANCE
co.notix.yl: long b
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_ttcIndex
androidx.window.embedding.MatcherUtils: androidx.window.embedding.MatcherUtils INSTANCE
co.notix.R$dimen: int notification_media_narrow_margin
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Internal$ProtobufList strings_
co.notix.yn: co.notix.yn e
co.notix.tf: co.notix.banner.NotixBannerView a
co.notix.ul: java.lang.Object c
co.notix.i4: kotlinx.coroutines.flow.FlowCollector a
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.google.firebase.perf.config.RemoteConfigManager: java.util.concurrent.ConcurrentHashMap allRcConfigMap
co.notix.notix_inapp_flutter.R$drawable: int notification_bg_low
co.notix.y9: java.lang.String d
co.notix.vc: co.notix.vc c
co.notix.lsi.LsiInterval$Optimized: co.notix.lsi.LsiInterval$Optimized INSTANCE
co.notix.notix_inapp_flutter.R$styleable: int[] ActivityRule
co.notix.ne: java.lang.Object k
co.notix.notix_inapp_flutter.R$id: int locale
co.notix.a: co.notix.b b
com.google.android.gms.internal.measurement.zzft$zzn: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.ng: co.notix.s8 d
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State$Companion Companion
co.notix.fh: java.lang.Object d
co.notix.gi: co.notix.jh a
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_text_light
co.notix.he: java.lang.Boolean g
com.google.firebase.perf.v1.TransportInfo: com.google.firebase.perf.v1.TransportInfo DEFAULT_INSTANCE
co.notix.pg: co.notix.rg k
co.notix.cf: co.notix.xf e
co.notix.callback.NotixCallback$Impression: co.notix.callback.NotixCallbackStatus status
co.notix.d4: java.util.concurrent.ConcurrentHashMap i
com.google.firebase.perf.v1.GaugeMetric: com.google.protobuf.Parser PARSER
co.notix.cd: java.lang.Object b
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface extensionCallback
co.notix.notix_inapp_flutter.R$attr: int splitMinWidth
com.google.firebase.perf.metrics.Trace: android.os.Parcelable$Creator CREATOR
co.notix.R$styleable: int FontFamilyFont_android_fontStyle
co.notix.kk: java.lang.Class g
co.notix.pp: java.lang.Object a
co.notix.callback.NotixCallback$Click: java.lang.String data
androidx.window.R$id: int locale
co.notix.ee: co.notix.yd c
co.notix.lsi.NotixLockScreenInterstitialAd$Companion: co.notix.hg $$delegate_0
co.notix.notix_inapp_flutter.R$id: int auto
co.notix.gf: co.notix.k3 b
com.google.android.gms.measurement.internal.zzn: android.os.Parcelable$Creator CREATOR
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
co.notix.kq: co.notix.domain.RequestVars j
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
co.notix.aj: java.lang.String b
com.google.android.gms.internal.measurement.zzfn$zzc: int zze
co.notix.notix_inapp_flutter.R$drawable: int notification_bg_low_pressed
co.notix.pm: co.notix.gn b
co.notix.f1: int a
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzu
com.google.firebase.perf.v1.AndroidMemoryReading: int CLIENT_TIME_US_FIELD_NUMBER
co.notix.ip: int a
co.notix.R$string: int common_google_play_services_update_title
co.notix.w: int d
co.notix.u5: co.notix.w5 a
co.notix.wk: long d
co.notix.l: java.lang.String d
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.PerfMetric DEFAULT_INSTANCE
co.notix.o3: co.notix.d4 b
co.notix.R$style: int Notix_Theme_NoStatusBar
co.notix.R$id: int notification_main_column_container
co.notix.ee: kotlinx.coroutines.flow.MutableStateFlow e
io.flutter.embedding.engine.FlutterJNI: float displayWidth
co.notix.bl: java.lang.String a
co.notix.oq: java.lang.Object c
co.notix.qg: kotlin.jvm.functions.Function1 b
com.google.android.gms.internal.measurement.zzfn$zza$zzb: int zzf
co.notix.ug: int d
com.google.firebase.perf.config.RemoteConfigManager: long FETCH_NEVER_HAPPENED_TIMESTAMP_MS
com.google.android.gms.measurement.internal.zzbf: android.os.Parcelable$Creator CREATOR
co.notix.appopen.AppOpenActivity: kotlin.Lazy r
co.notix.dh: co.notix.gh a
co.notix.R$styleable: int GradientColor_android_startColor
co.notix.ck: int a
com.google.firebase.perf.v1.TraceMetric: int CLIENT_START_TIME_US_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzft$zzm: int zzf
co.notix.notix_inapp_flutter.R$drawable: int googleg_disabled_color_18
co.notix.wl: co.notix.xp d
co.notix.notix_inapp_flutter.R$id: int tv_title
co.notix.R$dimen: int notification_small_icon_size_as_large
com.google.firebase.messaging.FirebaseMessagingService: com.google.android.gms.cloudmessaging.Rpc rpc
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzah
com.google.android.gms.internal.measurement.zzft$zzh: int zze
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: android.app.Activity $activity
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
co.notix.notix_inapp_flutter.R$layout: int notification_template_icon_group
com.google.android.gms.internal.measurement.zzfn$zzg: java.lang.String zzg
co.notix.R$id: int dark
com.google.android.gms.measurement.internal.zzba: android.os.Parcelable$Creator CREATOR
co.notix.ic: int d
co.notix.lsi.LsiInterval$Fixed: long intervalMillis
co.notix.z7: co.notix.d8 b
co.notix.p3: co.notix.d4 b
co.notix.u: int f
co.notix.R$styleable: int FontFamily_fontProviderPackage
com.google.android.gms.internal.measurement.zzfn$zzb: java.lang.String zzf
co.notix.al: long e
co.notix.fk: java.lang.String f
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.google.android.gms.internal.measurement.zzft$zzd: int zze
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.components.Lazy memoryGaugeCollector
co.notix.R$string: int status_bar_notification_info_overflow
co.notix.je: java.lang.Object c
co.notix.mb: int a
co.notix.x1: co.notix.jh a
co.notix.push.data.NotificationOverrides: java.lang.String event
co.notix.l2: co.notix.pq f
co.notix.lj: co.notix.dk b
co.notix.notix_inapp_flutter.R$id: int tv_button
co.notix.R$color: int notix_primary_color_disabled
co.notix.R$id: int bottom
co.notix.ad: co.notix.bd b
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.v1.ApplicationProcessState applicationProcessState
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$2: co.notix.notix_inapp_flutter.NotixInappFlutterPlugin this$0
co.notix.R$id: int iv_appopen_continue
co.notix.R$styleable: int FontFamilyFont_fontWeight
co.notix.h5: kotlinx.coroutines.flow.FlowCollector a
co.notix.gd: java.lang.String b
co.notix.hk: java.lang.Object d
co.notix.tp: kotlinx.coroutines.flow.Flow a
co.notix.s3: int a
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.concurrent.locks.ReentrantLock multicastConsumerLock
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack secondaryActivityStack
co.notix.on: java.lang.String a
com.google.android.gms.internal.measurement.zzft$zzj: long zzn
com.google.firebase.perf.v1.AndroidApplicationInfo: java.lang.String versionName_
co.notix.lsi.LockScreenInterstitialActivity: co.notix.d8 v
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend$Companion Companion
co.notix.domain.RequestVars: java.lang.String var1
co.notix.cf: co.notix.k3 a
com.google.firebase.perf.v1.NetworkRequestMetric: int HTTP_RESPONSE_CODE_FIELD_NUMBER
co.notix.t2: co.notix.r4 d
co.notix.p8: co.notix.p8[] d
co.notix.b7: co.notix.appopen.AppOpenActivity a
co.notix.he: java.lang.String j
co.notix.vo: co.notix.ta a
androidx.datastore.preferences.PreferencesProto$Value: int valueCase_
co.notix.wk: java.lang.String c
androidx.window.R$attr: int splitMinWidth
co.notix.uh: co.notix.periodicworker.PeriodicWorker b
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
co.notix.push.data.NotificationOverrides: java.lang.Boolean showBadgeIcon
co.notix.dh: co.notix.gh e
com.google.firebase.perf.v1.NetworkRequestMetric: com.google.firebase.perf.v1.NetworkRequestMetric DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzft$zzn: long zzf
co.notix.notix_inapp_flutter.R$dimen: int compat_control_corner_material
co.notix.gk: co.notix.wb c
co.notix.c4: co.notix.d4 d
co.notix.gg: co.notix.hg b
co.notix.R$styleable: int FontFamilyFont_android_fontWeight
co.notix.m9: org.json.JSONObject b
co.notix.pg: int h
com.google.firebase.perf.v1.PerfSession: java.lang.String sessionId_
co.notix.notix_inapp_flutter.R$id: int iv_appopen_continue
androidx.window.embedding.EmbeddingCompat: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingExtension
co.notix.yq: co.notix.yq a
androidx.window.R$styleable: int SplitPairRule_splitMinWidth
co.notix.callback.NotixCallback$ManageAudience: co.notix.callback.NotixCallbackStatus status
co.notix.R$string: int notix_public_app_id
co.notix.notix_inapp_flutter.R$drawable: int notify_panel_notification_icon_bg
co.notix.notix_inapp_flutter.R$attr: int splitRatio
co.notix.gj: java.lang.String d
co.notix.k7: co.notix.domain.RequestVars b
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
androidx.window.embedding.SplitPlaceholderRule: java.util.Set filters
androidx.window.core.Bounds: int left
co.notix.periodicworker.PeriodicWorker: kotlinx.coroutines.CoroutineScope d
co.notix.uo: co.notix.pd b
com.google.firebase.perf.v1.GaugeMetric: int ANDROID_MEMORY_READINGS_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$id: int rtl
co.notix.fc: co.notix.pc b
co.notix.ki: int a
co.notix.notix_inapp_flutter.R$drawable: int notix_sh_top_rounded
co.notix.ka: java.lang.String a
co.notix.w9: co.notix.qi b
co.notix.notix_inapp_flutter.R$id: int fl_button_container
co.notix.pg: java.util.Set o
co.notix.ae: int a
com.google.android.gms.internal.measurement.zzfh$zza: int zze
co.notix.notix_inapp_flutter.R$id: int fl_title_container
com.google.firebase.perf.v1.AndroidApplicationInfo: com.google.protobuf.Parser PARSER
co.notix.f2: int d
co.notix.notix_inapp_flutter.R$string: int androidx_startup
co.notix.tm: long a
co.notix.hl: co.notix.in c
androidx.window.layout.ExtensionWindowLayoutInfoBackend: java.util.Map activityToListeners
co.notix.hq: co.notix.ec z
co.notix.R$drawable: int common_google_signin_btn_icon_light_focused
co.notix.m4: co.notix.m2 b
co.notix.R$style: int TextAppearance_Compat_Notification_Title
co.notix.notix_inapp_flutter.R$id: int tag_state_description
co.notix.hc: long a
co.notix.vk: co.notix.iq c
co.notix.u4: co.notix.p4 b
co.notix.R$id: int accessibility_custom_action_13
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
co.notix.dd: co.notix.zf e
com.google.android.gms.internal.measurement.zzfh$zzc: boolean zzh
co.notix.R$id: int accessibility_custom_action_27
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
co.notix.ba: co.notix.ea d
co.notix.R$string: int fcm_fallback_notification_channel_label
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
co.notix.la: int c
com.google.android.gms.internal.measurement.zzft$zzi: java.lang.String zzh
co.notix.i: java.lang.String a
co.notix.R$id: int tv_banner_ad_label
com.google.android.gms.internal.measurement.zzfn$zze: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.kq: java.lang.String f
co.notix.l4: java.lang.String c
co.notix.f4: int e
com.google.android.gms.internal.measurement.zzft$zzg: java.lang.String zzf
co.notix.dd: kotlinx.coroutines.CoroutineScope d
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_light
co.notix.v9: int a
co.notix.notix_inapp_flutter.R$styleable: int GradientColorItem_android_offset
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArraySet splitRules
co.notix.i: android.graphics.Bitmap e
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController globalInstance
co.notix.notix_inapp_flutter.R$id: int dialog_button
co.notix.R$id: int ll_appopen_root
co.notix.R$id: int tv_description
co.notix.notix_inapp_flutter.R$dimen: int compat_button_padding_vertical_material
co.notix.push.pull.PullWorker: co.notix.oe a
co.notix.oa: boolean a
co.notix.g4: long g
co.notix.appopen.AppOpenActivity: kotlin.jvm.functions.Function0 g
co.notix.i0: co.notix.ta a
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
co.notix.R$id: int chronometer
co.notix.notix_inapp_flutter.R$id: int iv_appopen_image
co.notix.xl: int e
co.notix.wp: int a
com.google.android.gms.internal.measurement.zzft$zzn: int zze
co.notix.R$styleable: int GradientColorItem_android_color
com.google.android.gms.internal.measurement.zzft$zzd: int zzf
co.notix.yo: java.lang.Long d
co.notix.he: java.lang.Integer e
co.notix.qe: java.lang.Object c
co.notix.lp: long b
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
androidx.window.R$styleable: int SplitPlaceholderRule_splitMinWidth
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_icon_light_focused
co.notix.notix_inapp_flutter.R$attr: int finishSecondaryWithPrimary
co.notix.rc: co.notix.pc c
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
co.notix.d4: co.notix.ee e
co.notix.notix_inapp_flutter.R$id: int wv_banner
co.notix.ee: co.notix.xd d
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String description
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_23
co.notix.notix_inapp_flutter.R$attr: int queryPatterns
co.notix.R$drawable: int notification_template_icon_bg
co.notix.m9: co.notix.w9 g
co.notix.jc: co.notix.jh a
co.notix.il: co.notix.og a
co.notix.a3: co.notix.a3 a
co.notix.fl: kotlinx.coroutines.CoroutineScope c
co.notix.R$id: int ll_appopen_header
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: androidx.window.layout.SidecarCompat this$0
co.notix.gk: co.notix.hj d
co.notix.tk: co.notix.vk c
co.notix.zg: co.notix.gh a
co.notix.mi: int a
co.notix.R$attr: int colorScheme
co.notix.hc: int d
com.google.android.gms.internal.measurement.zzfn$zzd: com.google.android.gms.internal.measurement.zzkc zzk
co.notix.jb: kotlinx.coroutines.flow.Flow a
co.notix.R$dimen: int notification_action_text_size
co.notix.R$color: int common_google_signin_btn_text_light_pressed
co.notix.ba: co.notix.ea b
co.notix.vi: co.notix.perseverance.worker.PerseveranceWorker c
co.notix.l4: int a
kotlin.jvm.internal.CallableReference: java.lang.String name
co.notix.qk: org.json.JSONObject e
co.notix.lc: java.lang.String c
co.notix.do: com.google.common.util.concurrent.ListenableFuture a
co.notix.R$id: int adjust_width
co.notix.R$style: int TextAppearance_Compat_Notification
co.notix.ch: int f
co.notix.ab: co.notix.z9 a
co.notix.perseverance.worker.PerseveranceWorker: kotlinx.coroutines.sync.Mutex d
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
co.notix.g4: java.lang.String d
co.notix.c4: int e
com.google.android.gms.internal.measurement.zzft$zzb: boolean zzg
co.notix.notix_inapp_flutter.R$attr: int secondaryActivityName
co.notix.notix_inapp_flutter.R$id: int ltr
co.notix.R$id: int accessibility_custom_action_0
co.notix.ad: java.lang.String c
co.notix.x4: co.notix.n5 b
co.notix.to: co.notix.uo a
co.notix.yo: java.lang.Boolean a
co.notix.R$attr: int circleCrop
co.notix.hq: co.notix.z9 o
co.notix.notix_inapp_flutter.R$bool: int enable_system_foreground_service_default
co.notix.push.permissions.NotificationsPermissionActivity: co.notix.we a
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_icon_light
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
co.notix.fn: kotlin.jvm.functions.Function1 a
co.notix.p: long b
co.notix.u4: co.notix.l c
com.google.android.gms.internal.measurement.zzft$zzl: com.google.android.gms.internal.measurement.zzkc zzg
co.notix.k6: kotlin.Lazy m
com.google.android.gms.internal.measurement.zzdq: android.os.Parcelable$Creator CREATOR
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: android.app.Activity $activity
co.notix.z9: kotlinx.coroutines.CoroutineScope c
co.notix.R$attr: int fontWeight
co.notix.R$string: int common_google_play_services_notification_channel_name
co.notix.push.NotixPush$Companion: co.notix.push.NotixPush $$delegate_0
co.notix.cd: java.lang.String e
co.notix.vk: co.notix.pk a
co.notix.bp: java.lang.Long d
com.google.android.gms.internal.measurement.zzfh$zzb: boolean zzl
co.notix.appopen.AppOpenActivity: int u
co.notix.dn: co.notix.jh a
co.notix.be: co.notix.ce c
com.google.android.gms.internal.measurement.zzfh$zzf: com.google.android.gms.internal.measurement.zzkc zzi
co.notix.ad: java.lang.String d
co.notix.bb: java.lang.String a
co.notix.R$styleable: int FontFamily_fontProviderFetchStrategy
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: int label
com.google.firebase.perf.v1.NetworkRequestMetric: int RESPONSE_CONTENT_TYPE_FIELD_NUMBER
kotlinx.coroutines.DispatchedCoroutine: int _decision
co.notix.push.pull.PullWorker: long g
co.notix.pj: co.notix.dk c
androidx.window.embedding.MatcherUtils: boolean sDebugMatchers
io.flutter.plugin.platform.SingleViewPresentation: int viewId
co.notix.hf: boolean b
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
co.notix.notix_inapp_flutter.R$attr: int activityAction
co.notix.lc: int a
co.notix.notix_inapp_flutter.R$id: int tv_appopen_title
co.notix.sa: int c
co.notix.cp: co.notix.bl a
co.notix.R$styleable: int ColorStateListItem_alpha
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock globalLock
co.notix.q0: co.notix.jh a
co.notix.push.firebase.NotixFirebaseMessagingService: kotlinx.coroutines.CoroutineScope a
co.notix.x9: java.lang.Object b
co.notix.callback.NotixCallbackStatus: co.notix.callback.NotixCallbackStatus FAILURE
co.notix.notix_inapp_flutter.R$dimen: int notification_content_margin_start
co.notix.si: co.notix.perseverance.worker.PerseveranceWorker d
co.notix.g8: java.lang.String a
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
co.notix.m: java.lang.String a
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.google.firebase.perf.v1.NetworkRequestMetric: long timeToResponseInitiatedUs_
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
co.notix.R$style: int Notix_Theme_Transparent
com.google.android.gms.measurement.internal.zzal: android.os.Parcelable$Creator CREATOR
co.notix.tl: java.lang.Object b
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean CLEANUP_ON_MEMORY_PRESSURE
co.notix.he: java.lang.Integer k
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastScheduleTime
co.notix.kd: java.util.List k
co.notix.d4: co.notix.b f
co.notix.notix_inapp_flutter.R$id: int end
co.notix.R$dimen: int notification_top_pad_large_text
co.notix.dk: co.notix.pq a
co.notix.notix_inapp_flutter.R$integer: int status_bar_notification_info_maxnum
co.notix.jg: int a
co.notix.v9: co.notix.w9 b
co.notix.jh: java.util.LinkedHashMap h
androidx.window.core.Bounds: int bottom
co.notix.oc: int a
co.notix.wl: co.notix.s8 b
co.notix.ej: java.lang.String b
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: android.app.Activity activity
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
co.notix.kc: co.notix.jh a
co.notix.q3: kotlin.jvm.functions.Function1 a
co.notix.u2: co.notix.og a
co.notix.notix_inapp_flutter.R$attr: int finishPrimaryWithSecondary
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: androidx.window.layout.WindowLayoutInfo lastKnownValue
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
co.notix.uk: java.lang.Object b
co.notix.notix_inapp_flutter.R$attr: int clearTop
co.notix.he: java.lang.String m
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.GaugeMetadataManager gaugeMetadataManager
co.notix.s1: java.lang.String c
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
com.google.android.gms.internal.measurement.zzfn$zzd: boolean zzm
co.notix.fp: co.notix.hp a
co.notix.notix_inapp_flutter.R$id: int tv_banner_ad_label
co.notix.to: java.lang.Object b
co.notix.qk: java.lang.String a
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State state
co.notix.l: java.lang.String a
co.notix.k5: java.lang.Object b
com.google.firebase.perf.application.AppStateUpdateHandler: java.lang.ref.WeakReference appStateCallback
co.notix.c0: co.notix.jh a
co.notix.R$drawable: int googleg_disabled_color_18
co.notix.b2: co.notix.pq b
com.google.android.gms.internal.measurement.zzjt: java.util.Map zzc
co.notix.aj: java.lang.String a
co.notix.R$attr: int scopeUris
co.notix.ra: co.notix.iq a
co.notix.io: kotlinx.coroutines.CancellableContinuation a
com.google.android.gms.internal.measurement.zzfh$zza: boolean zzj
co.notix.p7: co.notix.q7 c
co.notix.R$id: int accessibility_custom_action_14
co.notix.pj: java.lang.Object b
androidx.work.ListenableWorker: boolean mUsed
co.notix.callback.NotixCallback$AppInstall: co.notix.callback.NotixCallbackStatus status
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
co.notix.ad: java.lang.String f
co.notix.hq: co.notix.te s
co.notix.zk: co.notix.rq a
co.notix.jj: co.notix.dk a
co.notix.c: kotlin.jvm.functions.Function2 a
co.notix.notix_inapp_flutter.R$id: int iv_appopen_click
com.google.android.gms.internal.measurement.zzfn$zza: com.google.android.gms.internal.measurement.zzkc zzj
co.notix.wg: java.lang.Object c
com.google.android.gms.internal.measurement.zzfn$zzh: int zze
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialLoaderNext$1: co.notix.notix_inapp_flutter.NotixInappFlutterPlugin this$0
co.notix.R$string: int common_google_play_services_install_button
co.notix.qa: java.lang.Object c
co.notix.np: co.notix.xp b
co.notix.qm: java.util.Set a
co.notix.R$id: int line3
com.google.android.gms.internal.measurement.zzfn$zzd: java.lang.String zzg
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer callback
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean ignoringFence
com.google.firebase.perf.v1.PerfSession: int SESSION_ID_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.notix_inapp_flutter.R$color: int secondary_text_default_material_light
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzo
co.notix.oc: co.notix.pq b
co.notix.fk: java.lang.Object b
com.google.firebase.perf.v1.NetworkRequestMetric: int TIME_TO_REQUEST_COMPLETED_US_FIELD_NUMBER
co.notix.R$id: int pb_appopen_continue
co.notix.fh: kotlin.jvm.functions.Function1 b
co.notix.kd: boolean n
co.notix.tg: co.notix.vg f
co.notix.wl: long f
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
co.notix.u: int k
com.google.android.gms.internal.measurement.zzft$zzj: boolean zzaf
kotlinx.coroutines.CompletedExceptionally: int _handled
kotlinx.coroutines.DefaultExecutor: int debugStatus
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_text_dark_normal_background
co.notix.p0: co.notix.ta a
co.notix.fb: co.notix.fb c
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
co.notix.m1: co.notix.pq b
co.notix.pg: int l
co.notix.lk: int h
com.google.firebase.perf.v1.GaugeMetadata: java.lang.String processName_
co.notix.notix_inapp_flutter.R$attr: int fontProviderFetchStrategy
co.notix.pa: co.notix.ra a
co.notix.m4: long h
co.notix.xk: co.notix.ta a
co.notix.gq: int a
co.notix.i3: int b
co.notix.pg: boolean n
co.notix.ko: int c
co.notix.fn: int d
co.notix.c9: long a
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
co.notix.pp: int c
co.notix.R$integer: int google_play_services_version
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_24
co.notix.v: int b
co.notix.pj: long a
co.notix.mq: int g
com.google.android.gms.internal.measurement.zzfn$zzd: int zze
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
co.notix.ig: co.notix.s8 c
co.notix.R$drawable: int common_google_signin_btn_icon_dark_focused
androidx.datastore.preferences.PreferencesProto$Value: int INTEGER_FIELD_NUMBER
co.notix.pi: co.notix.oh a
androidx.window.layout.SidecarCompat: java.util.Map windowListenerRegisteredContexts
co.notix.of: co.notix.banner.NotixBannerView a
co.notix.notix_inapp_flutter.R$styleable: int SignInButton_colorScheme
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
co.notix.R$id: int right_icon
co.notix.R$id: int iv_banner_image
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
co.notix.dh: kotlinx.coroutines.sync.Mutex c
co.notix.tc: java.lang.Object b
com.google.android.gms.internal.measurement.zzft$zze: long zzh
co.notix.R$drawable: int common_google_signin_btn_text_disabled
co.notix.kg: boolean b
co.notix.l2: co.notix.pq h
co.notix.te: co.notix.l2 e
co.notix.xi: int b
co.notix.dd: co.notix.iq b
co.notix.gj: co.notix.hj c
co.notix.sk: java.lang.String f
co.notix.ng: co.notix.aa i
co.notix.cp: co.notix.bp c
co.notix.R$bool: int enable_system_foreground_service_default
co.notix.ul: int e
co.notix.z1: co.notix.jh a
co.notix.pg: java.lang.Object c
co.notix.yf: co.notix.zf a
com.google.android.gms.internal.measurement.zzft$zzd: com.google.android.gms.internal.measurement.zzlp zzd
androidx.window.embedding.SplitPairRule: boolean finishPrimaryWithSecondary
co.notix.rd: java.lang.Object a
co.notix.bo: co.notix.bl b
co.notix.d6: co.notix.k6 a
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
androidx.window.layout.SidecarAdapter: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfn$zzf: com.google.android.gms.internal.measurement.zzlp zzd
com.google.android.gms.internal.measurement.zzft$zza: java.lang.String zzh
co.notix.bl: co.notix.bl e
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
co.notix.qd: int d
co.notix.gj: java.lang.Object b
co.notix.zg: int e
androidx.window.layout.SidecarCompat$DistinctElementCallback: java.util.WeakHashMap activityWindowLayoutInfo
co.notix.oq: kotlinx.coroutines.sync.Mutex b
co.notix.h2: co.notix.l2 a
co.notix.notix_inapp_flutter.R$id: int ll_content_container
co.notix.R$color: int common_google_signin_btn_text_dark
com.google.firebase.messaging.EnhancedIntentService: java.lang.Object lock
co.notix.dp: co.notix.ap c
com.google.android.gms.internal.measurement.zzft$zzj: int zzai
com.google.android.gms.internal.measurement.zzfh$zzc: com.google.android.gms.internal.measurement.zzfh$zzd zzg
co.notix.domain.RequestVars: java.lang.String var4
com.google.firebase.perf.v1.PerfMetric: com.google.firebase.perf.v1.TransportInfo transportInfo_
co.notix.callback.NotixCallback$PushDataLoad: co.notix.callback.NotixCallbackStatus status
co.notix.vl: co.notix.wl d
androidx.window.layout.FoldingFeature$State: java.lang.String description
co.notix.gn: co.notix.pq d
co.notix.interstitial.NotixInterstitial$Companion: co.notix.interstitial.NotixInterstitial $$delegate_0
co.notix.qa: int b
co.notix.p3: kotlinx.coroutines.sync.Mutex a
com.google.firebase.perf.v1.NetworkRequestMetric: java.lang.String url_
co.notix.ni: kotlin.jvm.functions.Function1 b
co.notix.notix_inapp_flutter.R$styleable: int GradientColorItem_android_color
co.notix.push.NotixPush$Companion: co.notix.push.NotixPush$Companion $$INSTANCE
co.notix.R$styleable: int FontFamily_fontProviderCerts
co.notix.R$id: int accessibility_custom_action_4
co.notix.notix_inapp_flutter.R$styleable: int ActivityRule_alwaysExpand
co.notix.R$id: int tv_appopen_title
co.notix.banner.BannerSize$Inline: int width
co.notix.g2: co.notix.l2 a
androidx.window.embedding.ActivityFilter: java.lang.String intentAction
co.notix.R$id: int top
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend globalInstance
co.notix.R$string: int common_google_play_services_enable_button
com.google.android.gms.internal.measurement.zzft$zzh: java.lang.String zzf
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_9
co.notix.ne: java.lang.Integer b
androidx.window.R$styleable: int[] SplitPlaceholderRule
co.notix.m8: kotlin.Lazy b
co.notix.c3: co.notix.c3 a
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_22
co.notix.appopen.AppOpenActivity: kotlin.Lazy h
co.notix.q9: co.notix.pi c
co.notix.v4: int d
com.google.firebase.perf.v1.ApplicationInfo: int ANDROID_APP_INFO_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$drawable: int notification_action_background
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend globalInstance
co.notix.o: int i
co.notix.xl: long b
co.notix.k5: int d
co.notix.x7: co.notix.d8 c
co.notix.ok: co.notix.pk c
co.notix.fi: co.notix.rq a
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
co.notix.r7: kotlinx.coroutines.flow.Flow a
co.notix.g2: co.notix.l2 c
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.HashMap perImageReaders
com.google.firebase.perf.v1.NetworkRequestMetric: int httpMethod_
co.notix.notix_inapp_flutter.R$styleable: int ColorStateListItem_android_alpha
co.notix.hq: co.notix.d G
co.notix.R$integer: int status_bar_notification_info_maxnum
co.notix.R$styleable: int SignInButton_colorScheme
co.notix.z7: int a
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
androidx.work.impl.utils.futures.AbstractFuture$Waiter: androidx.work.impl.utils.futures.AbstractFuture$Waiter next
co.notix.f4: java.lang.Object c
com.google.android.gms.internal.measurement.zzfn$zzh: java.lang.String zzg
co.notix.qi: java.lang.Class b
co.notix.i6: co.notix.k6 a
co.notix.sa: co.notix.sa[] e
com.google.firebase.perf.config.RemoteConfigManager: java.lang.String FIREPERF_FRC_NAMESPACE_NAME
co.notix.native.NotixNative$Companion: co.notix.native.NotixNative $$delegate_0
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.protobuf.Parser PARSER
co.notix.dd: co.notix.s8 c
co.notix.tn: java.util.Set a
co.notix.Notix$Companion: co.notix.Notix $$delegate_0
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
androidx.window.embedding.SplitPairRule: boolean clearTop
co.notix.notix_inapp_flutter.R$style: int Notix_Banner_Text_H1
co.notix.zj: co.notix.pq b
co.notix.r9: int a
co.notix.bl: co.notix.bl b
co.notix.ik: boolean g
com.google.android.gms.internal.measurement.zzfh$zzb: java.lang.String zzg
co.notix.lp: int d
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_text_light_normal_background
co.notix.wl: co.notix.gn c
co.notix.notix_inapp_flutter.R$styleable: int FontFamily_fontProviderFetchStrategy
com.google.android.gms.internal.measurement.zzft$zzj: long zzav
com.google.android.gms.internal.measurement.zzfn$zzd: java.lang.String zzp
com.google.android.gms.internal.measurement.zzft$zzk: com.google.android.gms.internal.measurement.zzkc zzg
co.notix.ho: co.notix.lo c
co.notix.tg: co.notix.vg a
com.google.android.gms.internal.measurement.zzft$zzl: com.google.android.gms.internal.measurement.zzkc zzh
co.notix.pp: co.notix.xp b
co.notix.sl: int e
co.notix.d8: kotlinx.coroutines.CoroutineScope b
co.notix.u: int j
co.notix.n7: int f
co.notix.R$id: int icon_group
com.google.firebase.perf.config.RemoteConfigManager: long appStartTimeInMs
co.notix.notix_inapp_flutter.R$style: int Widget_Compat_NotificationActionText
androidx.window.core.Version: int patch
androidx.window.R$attr: int secondaryActivityAction
co.notix.R$string: int common_signin_button_text_long
co.notix.m4: co.notix.n5 c
co.notix.R$drawable: int notix_sh_left_rounded
co.notix.notix_inapp_flutter.R$attr: int fontProviderAuthority
co.notix.notix_inapp_flutter.R$color: int ripple_material_light
com.google.android.gms.internal.measurement.zzgb$zzd: int zze
co.notix.l3: co.notix.m3 c
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.GaugeManager instance
co.notix.hq: co.notix.qi m
co.notix.n7: java.lang.Object a
androidx.window.embedding.SplitPairFilter: android.content.ComponentName secondaryActivityName
co.notix.q7: kotlinx.coroutines.flow.FlowCollector a
com.google.firebase.remoteconfig.RemoteConfigRegistrar: java.lang.String LIBRARY_NAME
co.notix.i: java.lang.String h
com.google.android.gms.internal.measurement.zzfh$zzd: int zzf
co.notix.banner.NotixBannerView: kotlinx.coroutines.CoroutineScope csDefault
co.notix.s7: co.notix.gh a
co.notix.b6: co.notix.k6 a
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_dark
co.notix.R$id: int ll_banner_container
androidx.window.R$id: int androidx_window_activity_scope
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzar
com.google.android.gms.internal.measurement.zzft$zzj: long zzbg
co.notix.R$drawable: int common_google_signin_btn_text_dark_normal_background
co.notix.nd: int a
co.notix.i9: int a
androidx.window.R$styleable: int SplitPlaceholderRule_placeholderActivityName
androidx.window.R$styleable: int[] SplitPairFilter
co.notix.R$dimen: int compat_button_padding_vertical_material
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
co.notix.qk: java.lang.String d
co.notix.he: java.lang.String p
co.notix.cn: co.notix.ta a
co.notix.R$color: int common_google_signin_btn_text_light
co.notix.notix_inapp_flutter.R$id: int iv_close
co.notix.m9: co.notix.wb c
com.google.firebase.perf.v1.AndroidApplicationInfo: int bitField0_
co.notix.jh: co.notix.wb c
co.notix.yh: java.lang.String b
co.notix.c4: java.lang.Object b
co.notix.mp: int c
co.notix.notix_inapp_flutter.R$styleable: int[] SignInButton
co.notix.dl: java.lang.String b
co.notix.hk: co.notix.kk e
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
com.google.firebase.perf.v1.PerfMetric: int APPLICATION_INFO_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_31
co.notix.o: int j
co.notix.appopen.AppOpenActivity: kotlin.Lazy l
co.notix.R$color: int notification_icon_bg_color
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
androidx.window.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
co.notix.notix_inapp_flutter.R$id: int normal
co.notix.notix_inapp_flutter.R$dimen: int notification_top_pad_large_text
co.notix.R$string: int common_google_play_services_wear_update_text
co.notix.oj: java.lang.Object b
co.notix.R$id: int tag_on_apply_window_listener
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.components.Lazy gaugeManagerExecutor
com.google.firebase.messaging.EnhancedIntentService: int runningTasks
co.notix.f2: co.notix.l2 c
co.notix.i2: java.lang.Object b
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_android_font
co.notix.R$drawable: int notification_tile_bg
co.notix.ri: java.lang.String a
co.notix.q1: co.notix.jh a
co.notix.R$drawable: int common_google_signin_btn_icon_dark_normal
co.notix.R$id: int right_side
co.notix.y9: co.notix.e3 e
co.notix.p1: int a
co.notix.qe: co.notix.he b
co.notix.g4: co.notix.p4 b
co.notix.R$id: int accessibility_custom_action_31
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzkc zzi
co.notix.ih: java.lang.Object e
co.notix.callback.NotixCallback$Subscription: java.lang.String data
co.notix.f4: co.notix.p4 b
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
co.notix.ba: java.lang.Object c
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.google.android.gms.internal.measurement.zzfh$zzb: int zzf
com.google.android.gms.internal.measurement.zzft$zzj: long zzl
co.notix.nh: java.lang.Object d
co.notix.R$id: int time
co.notix.dg: co.notix.kb d
co.notix.R$id: int accessibility_custom_action_1
com.google.firebase.perf.v1.NetworkRequestMetric: long clientStartTimeUs_
co.notix.ng: co.notix.j7 e
co.notix.notix_inapp_flutter.R$styleable: int SignInButton_buttonSize
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
co.notix.R$dimen: int notification_large_icon_height
co.notix.pf: boolean a
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_fontWeight
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_icon_dark_normal_background
kotlinx.coroutines.JobSupport: java.lang.Object _state
co.notix.callback.NotixCallback$PushDataLoad: java.lang.String data
co.notix.kq: java.lang.String c
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzaa
co.notix.notix_inapp_flutter.R$string: int common_signin_button_text_long
co.notix.ug: java.lang.Object h
co.notix.ve: co.notix.we a
co.notix.u9: int a
co.notix.ne: java.lang.String c
com.google.firebase.messaging.FirebaseMessagingService: java.util.Queue recentlyReceivedMessageIds
co.notix.le: co.notix.push.NotixNotificationModifier c
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_19
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_enable_text
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzkc zzag
co.notix.oe: co.notix.xf h
co.notix.ad: java.lang.String g
co.notix.notix_inapp_flutter.R$id: int tv_appopen_description
co.notix.rg: kotlin.jvm.functions.Function1 f
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowInfoTrackerImpl$Companion Companion
co.notix.R$id: int action_image
co.notix.f5: co.notix.n5 b
io.flutter.embedding.engine.FlutterJNI: float displayHeight
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int MAX_IMAGES
co.notix.R$id: int tag_accessibility_pane_title
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_13
co.notix.notix_inapp_flutter.R$attr: int alwaysExpand
co.notix.oe: co.notix.pe e
co.notix.hm: co.notix.jh a
co.notix.ua: java.lang.String a
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.google.firebase.perf.v1.AndroidMemoryReading: int bitField0_
co.notix.nd: java.lang.String c
co.notix.o5: co.notix.s8 a
co.notix.fq: int a
co.notix.nb: kotlin.jvm.functions.Function0 d
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
co.notix.vb: kotlin.jvm.functions.Function0 b
co.notix.appopen.AppOpenActivity: kotlinx.coroutines.CoroutineScope c
co.notix.hq: co.notix.hg B
com.google.android.gms.internal.measurement.zzfh$zzc: java.lang.String zzi
co.notix.R$styleable: int GradientColor_android_tileMode
co.notix.R$styleable: int ColorStateListItem_android_color
co.notix.notix_inapp_flutter.R$integer: int google_play_services_version
co.notix.notix_inapp_flutter.R$layout: int custom_dialog
com.google.firebase.perf.v1.PerfSession: int SESSION_VERBOSITY_FIELD_NUMBER
co.notix.hq: co.notix.pc y
co.notix.u9: java.lang.String c
co.notix.ik: java.lang.Object i
com.google.firebase.perf.session.gauges.GaugeManager: java.lang.String sessionId
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
co.notix.lk: java.lang.Object f
androidx.window.layout.ExtensionWindowLayoutInfoBackend: androidx.window.extensions.layout.WindowLayoutComponent component
co.notix.R$id: int icon
co.notix.vb: co.notix.m a
co.notix.notix_inapp_flutter.R$drawable: int notification_template_icon_bg
co.notix.gg: co.notix.lsi.LsiInterval d
androidx.window.R$attr: int activityAction
com.google.android.gms.internal.measurement.zzfn$zze: int zzh
co.notix.perseverance.worker.PerseveranceWorker: kotlinx.coroutines.CoroutineScope a
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
co.notix.notix_inapp_flutter.R$id: int adjust_height
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
co.notix.bp: java.lang.Long b
com.google.firebase.perf.session.SessionManager: java.util.Set clients
co.notix.f9: java.lang.String c
co.notix.sl: java.util.List b
com.google.firebase.perf.v1.NetworkRequestMetric: com.google.protobuf.Internal$ProtobufList perfSessions_
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock globalLock
co.notix.notix_inapp_flutter.R$style: int TextAppearance_Compat_Notification_Title
androidx.window.core.Bounds: int right
com.google.protobuf.GeneratedMessageLite: int memoizedSerializedSize
co.notix.g6: co.notix.k6 a
androidx.work.CoroutineWorker: kotlinx.coroutines.CoroutineDispatcher coroutineContext
co.notix.io: com.google.common.util.concurrent.ListenableFuture b
co.notix.mc: co.notix.jh a
co.notix.ci: co.notix.pi c
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_28
co.notix.gk: co.notix.zf f
co.notix.banner.BannerSize$Inline: int maxHeight
co.notix.k7: long a
co.notix.ho: java.lang.Object b
com.google.firebase.perf.v1.TraceMetric: com.google.protobuf.MapFieldLite counters_
co.notix.R$styleable: int GradientColor_android_centerX
co.notix.R$drawable: int common_full_open_on_phone
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
co.notix.fh: co.notix.gh a
com.google.android.gms.internal.measurement.zzft$zzh: com.google.android.gms.internal.measurement.zzft$zzh zzc
androidx.window.layout.SidecarCompat$TranslatingCallback: androidx.window.layout.SidecarCompat this$0
co.notix.i: java.lang.String d
co.notix.banner.NotixBannerView: co.notix.xf callbackExecutor
co.notix.p: java.lang.Object c
co.notix.ej: long a
co.notix.notix_inapp_flutter.R$layout: int notification_action
androidx.window.R$attr: int secondaryActivityName
androidx.window.core.Version: androidx.window.core.Version CURRENT
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzft$zze: int zze
co.notix.notix_inapp_flutter.R$id: int tv_appopen_appname
co.notix.kd: java.lang.String c
com.google.firebase.perf.v1.TraceMetric: long durationUs_
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
co.notix.g4: java.lang.Object c
com.google.android.gms.internal.measurement.zzfn$zzc: boolean zzh
androidx.window.R$styleable: int[] ActivityFilter
co.notix.notix_inapp_flutter.R$drawable: int common_google_signin_btn_icon_dark_normal
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_startColor
co.notix.l2: co.notix.pq b
co.notix.ih: java.lang.Object d
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer callback
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
androidx.work.ListenableWorker: boolean mRunInForeground
co.notix.R$string: int notix_public_project_id
co.notix.h1: co.notix.rq a
co.notix.log.LogLevel: co.notix.log.LogLevel IMPORTANT
co.notix.i2: co.notix.l2 c
co.notix.c7: co.notix.appopen.AppOpenActivity a
co.notix.lj: java.lang.Object a
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzr
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.PreferencesProto$PreferenceMap DEFAULT_INSTANCE
co.notix.td: co.notix.zf e
co.notix.m5: co.notix.n5 b
co.notix.notix_inapp_flutter.R$style: int TextAppearance_Compat_Notification
co.notix.notix_inapp_flutter.R$attr: int primaryActivityName
co.notix.R$styleable: int GradientColor_android_centerColor
co.notix.R$styleable: int[] SignInButton
co.notix.lp: co.notix.xp e
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_unsupported_text
co.notix.notix_inapp_flutter.R$styleable: int SplitPairRule_splitRatio
co.notix.jk: int a
co.notix.lsi.LockScreenInterstitialActivity: int x
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzae
co.notix.t9: java.lang.String c
co.notix.qe: co.notix.te d
com.google.firebase.perf.v1.CpuMetricReading: long userTimeUs_
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzbm
com.google.android.gms.internal.measurement.zzft$zzf: com.google.android.gms.internal.measurement.zzft$zzf zzc
co.notix.R$id: int accessibility_custom_action_18
co.notix.R$layout: int notification_template_icon_group
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation VERTICAL
co.notix.z9: co.notix.zf b
androidx.window.embedding.SplitController: androidx.window.embedding.EmbeddingBackend embeddingBackend
co.notix.o7: co.notix.c9 a
com.google.firebase.storage.StorageRegistrar: com.google.firebase.components.Qualified uiExecutor
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzv
co.notix.bc: int d
androidx.datastore.preferences.protobuf.GeneratedMessageLite: androidx.datastore.preferences.protobuf.UnknownFieldSetLite unknownFields
co.notix.R$color: int common_google_signin_btn_text_dark_disabled
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock globalLock
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_startY
co.notix.R$layout: int notix_layout_banner_vertical
co.notix.m7: int e
co.notix.zi: co.notix.rq a
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
co.notix.nd: co.notix.od b
co.notix.b: boolean b
co.notix.fk: java.lang.Object a
co.notix.kd: long l
co.notix.a4: kotlinx.coroutines.flow.Flow b
co.notix.R$styleable: int ColorStateListItem_android_alpha
co.notix.d2: co.notix.jh a
co.notix.r3: kotlinx.coroutines.sync.Mutex a
co.notix.k2: co.notix.l2 a
co.notix.notix_inapp_flutter.R$attr: int fontProviderPackage
co.notix.ln: int c
co.notix.log.LogLevel: co.notix.log.LogLevel NONE
co.notix.ji: co.notix.jh a
com.google.firebase.perf.v1.NetworkRequestMetric: int CUSTOM_ATTRIBUTES_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_12
com.google.android.gms.internal.measurement.zzft$zzk: int zzf
co.notix.R$id: int tv_banner_title
co.notix.notix_inapp_flutter.R$attr: int colorScheme
co.notix.R$id: int info
co.notix.ih: java.lang.String b
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_install_button
co.notix.push.data.NotificationOverrides: java.lang.Boolean showToast
kotlinx.coroutines.CancelledContinuation: int _resumed
co.notix.d4: co.notix.p4 a
co.notix.R$drawable: int common_google_signin_btn_text_dark_focused
co.notix.v1: java.lang.String c
co.notix.no: java.lang.Object a
co.notix.kj: co.notix.dk a
co.notix.ub: co.notix.i a
co.notix.t5: co.notix.w5 a
co.notix.R$id: int forever
co.notix.oh: java.util.LinkedHashMap d
co.notix.notix_inapp_flutter.R$id: int line3
androidx.window.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
co.notix.notix_inapp_flutter.R$id: int iv_appopen_app_icon
co.notix.pg: co.notix.pn j
co.notix.notix_inapp_flutter.R$styleable: int SplitPlaceholderRule_splitMinWidth
co.notix.f9: java.lang.String a
com.google.android.gms.internal.measurement.zzft$zze: java.lang.String zzg
co.notix.pg: java.lang.String e
androidx.window.embedding.EmbeddingCompat: boolean DEBUG
com.google.android.gms.internal.measurement.zzft$zzc: com.google.android.gms.internal.measurement.zzft$zzc zzc
com.google.android.gms.internal.measurement.zzft$zza: java.lang.String zzk
co.notix.d: co.notix.s8 a
co.notix.s4: co.notix.ta b
co.notix.kd: java.lang.String e
co.notix.R$styleable: int GradientColor_android_gradientRadius
co.notix.sl: co.notix.wl a
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified transportFactory
co.notix.sk: co.notix.vk e
co.notix.n9: co.notix.w9 b
com.google.android.gms.internal.measurement.zzgb$zzc: com.google.android.gms.internal.measurement.zzgb$zza zzg
co.notix.R$style: int Widget_Compat_NotificationActionText
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
co.notix.domain.RequestVars: java.lang.String var2
co.notix.ll: co.notix.wl b
co.notix.a8: co.notix.d8 f
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
co.notix.he: java.lang.Boolean f
co.notix.nc: co.notix.jh a
co.notix.R$styleable: int[] LoadingImageView
com.google.android.gms.internal.measurement.zzgb$zzd: com.google.android.gms.internal.measurement.zzkc zzg
co.notix.R$id: int actions
co.notix.vp: java.lang.Object a
co.notix.pl: java.lang.Object b
co.notix.d8: co.notix.s8 a
co.notix.vl: kotlin.jvm.internal.Ref$IntRef b
co.notix.we: kotlin.Lazy b
co.notix.appopen.AppOpenActivity: kotlin.Lazy q
co.notix.notix_inapp_flutter.R$styleable: int FontFamilyFont_fontVariationSettings
androidx.window.core.Bounds: int top
co.notix.notix_inapp_flutter.R$id: int chronometer
co.notix.notix_inapp_flutter.R$string: int common_signin_button_text
co.notix.q8: co.notix.domain.RequestVars b
co.notix.n5: co.notix.pq c
co.notix.em: co.notix.jh a
co.notix.p7: int b
co.notix.hq: co.notix.gf K
co.notix.notix_inapp_flutter.R$styleable: int SplitPairFilter_secondaryActivityName
com.google.firebase.perf.v1.CpuMetricReading: int bitField0_
co.notix.k6: kotlin.Lazy j
androidx.window.R$styleable: int SplitPlaceholderRule_splitRatio
com.google.android.gms.internal.measurement.zzfn$zza$zzf: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfh$zza: int zzf
co.notix.aj: java.lang.String e
co.notix.g2: int d
co.notix.vl: java.lang.Object f
co.notix.notix_inapp_flutter.R$id: int ll_appopen_continue_container
androidx.window.layout.HardwareFoldingFeature: androidx.window.core.Bounds featureBounds
com.google.android.gms.internal.measurement.zzft$zzc: com.google.android.gms.internal.measurement.zzft$zzl zzh
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
co.notix.m0: co.notix.rq a
co.notix.qk: org.json.JSONObject b
com.google.android.gms.internal.measurement.zzgb$zzd: java.lang.String zzi
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_27
com.google.firebase.perf.v1.NetworkRequestMetric: int bitField0_
com.google.firebase.perf.v1.GaugeMetadata: int PROCESS_NAME_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$color: int common_google_signin_btn_text_light_focused
co.notix.h7: co.notix.j7 b
co.notix.ud: co.notix.i a
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.Map consumerToJobMap
co.notix.notix_inapp_flutter.R$styleable: int SplitPairRule_splitMinSmallestWidth
co.notix.a: int a
co.notix.ma: int f
com.google.android.gms.internal.measurement.zzft$zzf: int zze
co.notix.hq: co.notix.dg C
co.notix.ib: kotlinx.coroutines.flow.FlowCollector a
com.google.android.gms.internal.measurement.zzfn$zze: int zze
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_gradientRadius
co.notix.ck: co.notix.pq b
co.notix.k4: int c
co.notix.lk: long b
co.notix.b3: co.notix.b3 a
co.notix.R$id: int iv_background
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
co.notix.t0: co.notix.rq a
co.notix.notix_inapp_flutter.R$string: int notix_public_app_name
co.notix.R$styleable: int GradientColor_android_endX
co.notix.R$styleable: int Capability_shortcutMatchRequired
co.notix.f: co.notix.f d
co.notix.sg: co.notix.jh b
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack primaryActivityStack
co.notix.gh: kotlinx.coroutines.sync.Mutex c
co.notix.wb: java.util.LinkedHashMap a
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: java.util.WeakHashMap mActivityWindowLayoutInfo
co.notix.ne: android.os.Parcelable f
co.notix.s3: co.notix.d4 b
co.notix.notix_inapp_flutter.R$dimen: int notification_action_text_size
co.notix.ub: kotlin.jvm.functions.Function1 f
co.notix.p9: java.lang.String e
com.google.firebase.perf.v1.NetworkRequestMetric: int HTTP_METHOD_FIELD_NUMBER
co.notix.notix_inapp_flutter.R$attr: int fontVariationSettings
com.google.android.gms.internal.measurement.zzft$zzj: long zzan
co.notix.i: java.lang.String b
co.notix.sa: java.lang.String a
co.notix.bf: kotlin.jvm.functions.Function0 f
co.notix.e5: co.notix.jh a
com.google.firebase.messaging.EnhancedIntentService: int lastStartId
co.notix.notix_inapp_flutter.R$drawable: int notification_tile_bg
co.notix.oh: co.notix.wb c
co.notix.kk: java.lang.String h
co.notix.ug: co.notix.jh f
co.notix.pi: co.notix.pq b
com.google.firebase.perf.v1.PerfSession: int bitField0_
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: java.util.Set registeredListeners
co.notix.R$id: int iv_close
co.notix.fb: co.notix.fb[] d
co.notix.he: java.lang.Boolean h
co.notix.sd: co.notix.td c
co.notix.k9: int a
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlinx.coroutines.flow.Flow $flow
co.notix.push.NotificationClickHandlerActivity: co.notix.w9 a
androidx.window.R$attr: int placeholderActivityName
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_centerY
co.notix.appopen.AppOpenActivity: kotlin.Lazy j
co.notix.sg: int e
co.notix.fk: java.lang.String d
co.notix.notix_inapp_flutter.R$dimen: int notification_small_icon_size_as_large
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
co.notix.interstitial.WebViewInterstitialActivity: android.widget.ProgressBar i
co.notix.ae: co.notix.ee b
co.notix.notix_inapp_flutter.R$styleable: int FontFamily_fontProviderFetchTimeout
co.notix.R$drawable: int notix_sh_top_rounded
co.notix.n4: co.notix.ta a
co.notix.ua: co.notix.xa c
co.notix.y0: int a
co.notix.rc: java.lang.String f
co.notix.k3: co.notix.ee d
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
androidx.window.R$attr: int finishPrimaryWithSecondary
co.notix.mf: kotlinx.coroutines.flow.FlowCollector a
co.notix.el: co.notix.fl c
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
co.notix.g5: int b
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList splitChangeCallbacks
co.notix.oq: int e
co.notix.o4: co.notix.rq a
androidx.window.layout.FoldingFeature$State: androidx.window.layout.FoldingFeature$State HALF_OPENED
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean released
co.notix.ic: java.lang.Object b
co.notix.notix_inapp_flutter.R$id: int action_image
co.notix.R$layout: int notification_action_tombstone
co.notix.kg: int a
co.notix.k3: java.util.WeakHashMap g
co.notix.v3: co.notix.d4 a
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
co.notix.notix_inapp_flutter.R$id: int tag_accessibility_pane_title
co.notix.lsi.LockScreenInterstitialWorker: co.notix.pc b
co.notix.ui: java.lang.Object a
co.notix.u: int h
co.notix.q4: co.notix.rq a
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: java.util.concurrent.locks.ReentrantLock lock
com.google.android.gms.internal.measurement.zzft$zzb: boolean zzf
co.notix.R$id: int tag_unhandled_key_event_manager
com.google.firebase.perf.v1.AndroidMemoryReading: com.google.protobuf.Parser PARSER
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedWidth
co.notix.R$styleable: int LoadingImageView_circleCrop
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$0
co.notix.notix_inapp_flutter.R$id: int accessibility_action_clickable_span
co.notix.R$dimen: int compat_notification_large_icon_max_height
co.notix.R$id: int accessibility_custom_action_16
co.notix.u: int g
co.notix.R$attr: int ttcIndex
co.notix.up: int c
androidx.window.embedding.SplitPairRule: boolean finishSecondaryWithPrimary
co.notix.ac: int d
androidx.work.impl.utils.futures.AbstractFuture$Waiter: java.lang.Thread thread
co.notix.R$bool: int enable_system_job_service_default
androidx.window.embedding.ActivityRule: boolean alwaysExpand
co.notix.ug: java.lang.Object e
co.notix.R$id: int text
co.notix.wd: co.notix.ee b
co.notix.fc: java.lang.Object a
co.notix.td: co.notix.od d
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: androidx.window.sidecar.SidecarInterface$SidecarCallback callbackInterface
co.notix.notix_inapp_flutter.R$string: int common_google_play_services_install_title
co.notix.nl: int c
androidx.window.layout.WindowInfoTrackerImpl: int BUFFER_CAPACITY
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator$Companion $$INSTANCE
co.notix.bi: co.notix.pi b
co.notix.l: java.lang.String e
co.notix.fh: int f
co.notix.appopen.AppOpenActivity: co.notix.w9 b
co.notix.vq: java.lang.Throwable e
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object L$1
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.inject.Provider firebaseRemoteConfigProvider
co.notix.vm: co.notix.jh a
co.notix.bh: java.lang.Object c
co.notix.s: int c
androidx.window.core.Version: int minor
co.notix.oe: co.notix.w9 a
co.notix.R$attr: int fontVariationSettings
com.google.firebase.perf.v1.AndroidApplicationInfo: int PACKAGE_NAME_FIELD_NUMBER
co.notix.vq: kotlin.jvm.functions.Function2 b
co.notix.notix_inapp_flutter.R$attr: int fontProviderCerts
co.notix.ik: int f
co.notix.notix_inapp_flutter.R$styleable: int[] Capability
co.notix.notix_inapp_flutter.R$styleable: int LoadingImageView_imageAspectRatioAdjust
co.notix.kq: java.lang.String h
co.notix.gh: co.notix.vg a
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
co.notix.z3: java.lang.Object b
co.notix.af: long b
com.google.android.gms.internal.measurement.zzfn$zzd: java.lang.String zzq
co.notix.notix_inapp_flutter.R$id: int notification_main_column_container
co.notix.notix_inapp_flutter.R$styleable: int SplitPairFilter_secondaryActivityAction
com.google.android.gms.internal.measurement.zzft$zzj: com.google.android.gms.internal.measurement.zzft$zzb zzbn
com.google.android.gms.internal.measurement.zzft$zzj: long zzab
co.notix.hn: co.notix.rq a
co.notix.yn: co.notix.yn f
co.notix.R$id: int tv_banner_description
co.notix.je: co.notix.he b
com.google.android.gms.internal.measurement.zzfh$zzd: java.lang.String zzj
co.notix.notix_inapp_flutter.R$attr: int fontStyle
com.google.firebase.perf.v1.ApplicationInfo: java.lang.String googleAppId_
co.notix.m8: java.lang.String a
androidx.window.layout.FoldingFeature$Orientation: androidx.window.layout.FoldingFeature$Orientation HORIZONTAL
co.notix.notix_inapp_flutter.R$id: int ll_desc_button_container
co.notix.vb: kotlin.jvm.functions.Function0 c
co.notix.s9: co.notix.w9 b
co.notix.j4: kotlinx.coroutines.flow.Flow a
co.notix.notix_inapp_flutter.R$id: int tag_unhandled_key_event_manager
com.google.firebase.perf.v1.GaugeMetadata: int cpuProcessorCount_
co.notix.mp: java.lang.Object a
co.notix.b4: java.lang.Object b
com.google.android.gms.internal.measurement.zzft$zzj: long zzam
co.notix.kk: co.notix.we e
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
co.notix.p5: co.notix.p5 a
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
co.notix.R$styleable: int[] GradientColorItem
co.notix.pa: long b
co.notix.qc: long e
co.notix.notix_inapp_flutter.BuildConfig: boolean DEBUG
co.notix.dg: co.notix.zf c
co.notix.u4: java.lang.String a
co.notix.notix_inapp_flutter.R$styleable: int SplitPlaceholderRule_splitRatio
co.notix.y1: java.lang.String c
co.notix.banner.NotixBannerView: kotlinx.coroutines.flow.MutableStateFlow isAttachedF
com.google.android.gms.internal.measurement.zzgb$zzb: com.google.android.gms.internal.measurement.zzlp zzd
com.google.android.gms.internal.measurement.zzft$zzi: com.google.android.gms.internal.measurement.zzft$zzi zzc
co.notix.fo: kotlinx.coroutines.CancellableContinuation a
co.notix.R$id: int wv_banner
co.notix.kk: kotlinx.coroutines.CoroutineScope d
com.google.android.gms.internal.measurement.zzfh$zzb: int zze
co.notix.lc: co.notix.pq b
co.notix.nb: kotlinx.coroutines.CoroutineScope a
co.notix.p3: int c
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean ignoringFence
co.notix.rl: co.notix.wk a
com.google.firebase.perf.v1.TraceMetric: int CUSTOM_ATTRIBUTES_FIELD_NUMBER
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.logging.AndroidLogger logger
com.google.android.gms.internal.measurement.zzft$zzh: com.google.android.gms.internal.measurement.zzft$zza zzh
co.notix.gp: co.notix.hp b
co.notix.zh: int d
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
co.notix.hq: co.notix.ph u
co.notix.w3: kotlinx.coroutines.flow.Flow b
co.notix.p9: co.notix.j8 b
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.UnknownFieldSetLite unknownFields
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Parser PARSER
co.notix.td: co.notix.we c
co.notix.ff: co.notix.ef a
com.google.firebase.messaging.FirebaseMessagingService: java.lang.String ACTION_DIRECT_BOOT_REMOTE_INTENT
co.notix.vg: kotlin.jvm.functions.Function1 c
co.notix.appopen.AppOpenActivity: kotlin.Lazy p
androidx.window.R$styleable: int ActivityRule_alwaysExpand
com.google.firebase.perf.v1.NetworkRequestMetric: int TIME_TO_RESPONSE_COMPLETED_US_FIELD_NUMBER
co.notix.h5: co.notix.p4 b
co.notix.ko: co.notix.lo b
co.notix.h4: java.lang.Object a
com.google.android.gms.internal.measurement.zzfh$zzf: com.google.android.gms.internal.measurement.zzfh$zzf zzc
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.ExtensionsWindowLayoutInfoAdapter INSTANCE
co.notix.v9: java.lang.String c
co.notix.R$id: int fl_appopen_continue
co.notix.R$id: int accessibility_custom_action_17
co.notix.hh: co.notix.jh a
co.notix.f2: java.lang.Object b
co.notix.nn: co.notix.o5 c
co.notix.R$id: int standard
co.notix.pc: co.notix.pq a
co.notix.notix_inapp_flutter.R$dimen: int compat_notification_large_icon_max_height
com.google.firebase.perf.FirebasePerfRegistrar: java.lang.String LIBRARY_NAME
co.notix.q9: int g
co.notix.lo: co.notix.s8 a
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.google.android.gms.internal.measurement.zzfn$zzb: com.google.android.gms.internal.measurement.zzkc zzg
co.notix.u8: co.notix.x8 b
com.google.android.gms.internal.measurement.zzfh$zzc: int zze
co.notix.R$id: int tag_accessibility_heading
co.notix.ij: int e
co.notix.R$layout: int custom_dialog
co.notix.fk: java.lang.String c
co.notix.zh: java.lang.Object b
co.notix.lf: int b
co.notix.c2: co.notix.jh a
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
co.notix.k6: kotlin.Lazy k
co.notix.wg: java.lang.Object b
co.notix.gg: int a
com.google.firebase.messaging.EnhancedIntentService: long MESSAGE_TIMEOUT_S
co.notix.mn: java.lang.String b
com.google.android.gms.internal.measurement.zzft$zzg: float zzi
co.notix.lk: long c
co.notix.q9: java.lang.Object b
co.notix.ri: co.notix.perseverance.worker.PerseveranceWorker c
co.notix.ya: java.lang.String b
co.notix.f: co.notix.f b
co.notix.R$color: int common_google_signin_btn_text_light_focused
com.google.android.gms.internal.measurement.zzft$zzg: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.hq: co.notix.kk x
co.notix.R$attr: int alpha
co.notix.hg: co.notix.rc d
co.notix.hq: co.notix.dg D
co.notix.ck: java.lang.String c
co.notix.mp: co.notix.xp b
co.notix.notix_inapp_flutter.R$styleable: int[] FontFamilyFont
co.notix.nh: co.notix.oh a
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_0
co.notix.interstitial.WebViewInterstitialActivity: android.webkit.WebView h
co.notix.ln: co.notix.nn b
co.notix.d8: kotlin.Lazy c
co.notix.ne: int m
co.notix.vk: kotlinx.coroutines.CoroutineScope e
kotlin.coroutines.jvm.internal.SuspendLambda: int arity
co.notix.lg: co.notix.ng b
co.notix.yn: int a
co.notix.hk: co.notix.kk a
co.notix.z3: int a
co.notix.x9: java.lang.String d
co.notix.f7: kotlin.jvm.functions.Function0 b
co.notix.cf: boolean f
co.notix.sl: co.notix.wl d
co.notix.s: java.lang.Object a
co.notix.notix_inapp_flutter.R$dimen: int notification_large_icon_height
co.notix.n7: java.lang.Object d
co.notix.hl: int a
co.notix.nl: co.notix.wl b
co.notix.cf: kotlinx.coroutines.CoroutineScope d
co.notix.notix_inapp_flutter.R$dimen: int notification_small_icon_background_padding
co.notix.f7: kotlin.jvm.functions.Function0 c
co.notix.nj: co.notix.dk a
com.google.android.gms.internal.measurement.zzft$zzb: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.ig: co.notix.k3 a
co.notix.ee: co.notix.s8 a
androidx.window.embedding.ActivityRule: java.util.Set filters
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
co.notix.hk: long c
co.notix.ch: kotlin.jvm.functions.Function1 b
co.notix.R$attr: int shortcutMatchRequired
co.notix.re: int a
com.google.android.gms.internal.measurement.zzgb$zza: com.google.android.gms.internal.measurement.zzlp zzd
co.notix.n9: java.lang.String c
co.notix.R$id: int accessibility_custom_action_20
co.notix.z: co.notix.jh a
co.notix.hg: kotlinx.coroutines.CoroutineScope b
androidx.datastore.preferences.protobuf.AbstractMessageLite: int memoizedHashCode
co.notix.c9: boolean c
co.notix.notix_inapp_flutter.R$id: int accessibility_custom_action_4
co.notix.dg: co.notix.ph f
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
co.notix.o: int l
co.notix.c8: java.lang.String b
com.google.firebase.perf.session.gauges.GaugeManager: long INVALID_GAUGE_COLLECTION_FREQUENCY
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.components.Lazy cpuGaugeCollector
co.notix.j9: co.notix.j9 a
com.google.android.gms.internal.measurement.zzgb$zza: com.google.android.gms.internal.measurement.zzkc zze
co.notix.k3: kotlinx.coroutines.CoroutineScope b
co.notix.ll: java.lang.Object a
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation completion
co.notix.uf: co.notix.banner.NotixBannerView b
co.notix.R$id: int action_container
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
co.notix.notix_inapp_flutter.R$styleable: int Capability_shortcutMatchRequired
co.notix.ho: long d
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend$Companion Companion
co.notix.ug: co.notix.vg g
co.notix.fc: int c
com.google.android.gms.internal.measurement.zzft$zzl: com.google.android.gms.internal.measurement.zzlp zzd
com.google.android.gms.internal.measurement.zzft$zzj: java.lang.String zzbk
co.notix.bi: int c
co.notix.w: java.lang.Object c
co.notix.bg: co.notix.push.firebase.NotixFirebaseMessagingService a
co.notix.oe: co.notix.s8 d
com.google.firebase.perf.v1.ApplicationInfo: int APPLICATION_PROCESS_STATE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfh$zzb: boolean zzi
androidx.window.embedding.ActivityFilter: android.content.ComponentName componentName
co.notix.q9: co.notix.eb d
co.notix.zc: co.notix.zc a
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
co.notix.hp: co.notix.og a
co.notix.mn: java.lang.Object a
com.google.firebase.perf.v1.TraceMetric: long clientStartTimeUs_
co.notix.R$attr: int nestedScrollViewStyle
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetricsCalculator$Companion Companion
co.notix.k3: co.notix.e4 a
androidx.window.R$attr: int activityName
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
co.notix.notix_inapp_flutter.R$id: int tag_window_insets_animation_callback
co.notix.ee: kotlinx.coroutines.CoroutineScope b
co.notix.ch: java.lang.Object d
co.notix.h6: co.notix.k6 a
co.notix.t9: int a
co.notix.d4: kotlinx.coroutines.sync.Mutex h
co.notix.cf: kotlinx.coroutines.Job g
co.notix.me: int e
co.notix.x8: android.content.Context a
co.notix.gn: co.notix.pq f
co.notix.wi: co.notix.perseverance.worker.PerseveranceWorker b
co.notix.dd: co.notix.bd a
co.notix.gk: kotlinx.coroutines.CoroutineScope a
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
co.notix.u: co.notix.l2 o
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
co.notix.ri: int d
co.notix.s4: co.notix.ta a
co.notix.yd: co.notix.ee a
co.notix.za: java.lang.Object a
co.notix.ag: com.google.firebase.messaging.RemoteMessage b
co.notix.y: co.notix.rq a
co.notix.R$dimen: int notification_right_icon_size
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator$Companion$reset$1 INSTANCE
co.notix.pm: int a
co.notix.wk: java.lang.String b
co.notix.push.pull.PullWorker: co.notix.kk e
com.google.protobuf.GeneratedMessageLite: int UNINITIALIZED_SERIALIZED_SIZE
co.notix.notix_inapp_flutter.R$dimen: int notification_main_column_padding_top
co.notix.t9: co.notix.w9 b
co.notix.qi: java.lang.String c
co.notix.qc: co.notix.lsi.LsiInterval c
com.google.android.gms.internal.measurement.zzft$zzj: int zzaj
co.notix.kh: int a
com.google.android.gms.internal.measurement.zzjt: int zzd
co.notix.fk: java.lang.String g
com.google.android.gms.internal.measurement.zzft$zzb: boolean zzh
co.notix.k3: co.notix.b e
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent placeholderIntent
co.notix.R$drawable: int common_google_signin_btn_text_light
co.notix.kg: co.notix.ka c
com.google.android.gms.internal.measurement.zzfh$zze: com.google.android.gms.internal.measurement.zzfh$zze zzc
co.notix.R$styleable: int LoadingImageView_imageAspectRatio
co.notix.notix_inapp_flutter.R$styleable: int GradientColor_android_startX
co.notix.sf: co.notix.banner.NotixBannerView a
co.notix.notix_inapp_flutter.R$color: int notix_interstitial_text_background_color
co.notix.R$id: int tv_title
co.notix.zp: java.lang.String a
co.notix.ni: java.lang.String a
co.notix.r4: java.lang.String d
co.notix.hc: co.notix.pc c
co.notix.rp: co.notix.sp c
com.google.firebase.messaging.FirebaseMessagingService: java.lang.String ACTION_REMOTE_INTENT
co.notix.g5: java.lang.Object a
co.notix.R$styleable: int GradientColor_android_startY
co.notix.n5: co.notix.pq b
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
co.notix.jm: jm(co.notix.wb)
co.notix.qf: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setSize(int,int)
co.notix.s1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.yf: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.callback.NotixCallback$Click: co.notix.callback.NotixCallback$Click copy$default(co.notix.callback.NotixCallback$Click,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
co.notix.if: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.yk: yk(co.notix.cj)
com.google.firebase.perf.application.AppStateUpdateHandler: void onUpdateAppState(com.google.firebase.perf.v1.ApplicationProcessState)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzdo)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
co.notix.if: if(kotlinx.coroutines.CoroutineScope,co.notix.banner.NotixBannerView,kotlin.coroutines.Continuation)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_0_1$cp()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
co.notix.o0: java.lang.Object invoke(java.lang.Object)
co.notix.pc: pc(co.notix.oh)
co.notix.callback.NotixCallback$AppInstall: NotixCallback$AppInstall(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.notix_inapp_flutter.Refs: java.lang.Object remove(java.lang.String)
co.notix.x0: java.lang.Object invoke(java.lang.Object)
co.notix.appopen.NotixAppOpen$Companion: void stopAutoShow()
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
androidx.work.WorkManagerInitializer: WorkManagerInitializer()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPlaceholderRule parseSplitPlaceholderRule(android.content.Context,android.content.res.XmlResourceParser)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
com.google.android.datatransport.Event: Event()
co.notix.gd: int hashCode()
co.notix.ck: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
co.notix.fe: java.lang.Object a(java.lang.Object)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus valueOf(java.lang.String)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,kotlin.reflect.KDeclarationContainer,java.lang.String,java.lang.String)
co.notix.wi: wi(co.notix.perseverance.worker.PerseveranceWorker,kotlin.coroutines.Continuation)
co.notix.ip: ip(co.notix.xp,kotlin.coroutines.Continuation)
co.notix.w7: w7(co.notix.d8,java.lang.String,java.lang.String)
com.google.firebase.messaging.EnhancedIntentService: void finishTask(android.content.Intent)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
co.notix.eg: void show(co.notix.interstitial.InterstitialData)
co.notix.cf: co.notix.appopen.AppOpenLoader createLoader(long,java.lang.Integer)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy[] values()
co.notix.dk: java.lang.Object a(int,kotlin.coroutines.Continuation)
co.notix.aj: int hashCode()
co.notix.i: java.lang.String a()
co.notix.k7: java.lang.Integer a()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
co.notix.io: io(kotlinx.coroutines.CancellableContinuationImpl,com.google.common.util.concurrent.ListenableFuture)
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
androidx.window.embedding.EmbeddingAdapter: boolean translateIntentPredicates$lambda-8(java.util.Set,android.content.Intent)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
com.google.firebase.perf.v1.PerfMetric: PerfMetric()
co.notix.b3: b3()
androidx.window.layout.SidecarAdapter: androidx.window.layout.WindowLayoutInfo translate(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarDeviceState)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder createBuilder()
co.notix.ud: android.graphics.Bitmap getIcon()
co.notix.w3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.WindowMetricsCalculator$Companion: androidx.window.layout.WindowMetricsCalculator getOrCreate()
co.notix.pi: pi(co.notix.oh)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
co.notix.c8: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.vk: java.lang.Object a(co.notix.vk,java.lang.String,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
co.notix.q6: q6(co.notix.appopen.AppOpenActivity)
androidx.work.impl.WorkDatabase_Impl: WorkDatabase_Impl()
androidx.datastore.preferences.protobuf.CodedInputStream: CodedInputStream()
co.notix.a7: a7(co.notix.appopen.AppOpenActivity)
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
co.notix.d9: java.lang.Object a(java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannelGroups(android.app.NotificationManager)
co.notix.rf: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.google.android.gms.internal.measurement.zzft$zzd$zza: zzft$zzd$zza()
co.notix.gi: gi(co.notix.jh)
com.google.firebase.appcheck.ktx.FirebaseAppCheckKtxRegistrar: FirebaseAppCheckKtxRegistrar()
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
co.notix.k6: void f()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: SchedulerConfig()
co.notix.fb: co.notix.fb[] values()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
co.notix.v7: java.lang.Object invokeSuspend(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
co.notix.d0: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.startup.NotixInitializer: java.lang.Object create(android.content.Context)
co.notix.s1: java.lang.Object invoke(java.lang.Object)
androidx.work.ListenableWorker$Result$Retry: ListenableWorker$Result$Retry()
co.notix.jp: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.WindowLayoutInfo: java.lang.String toString()
com.google.firebase.perf.network.FirebasePerfUrlConnection: java.io.InputStream openStream(java.net.URL)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
co.notix.hq: co.notix.pc k()
com.google.firebase.perf.session.gauges.GaugeManager: void collectGaugeMetricOnce(com.google.firebase.perf.session.gauges.CpuGaugeCollector,com.google.firebase.perf.session.gauges.MemoryGaugeCollector,com.google.firebase.perf.util.Timer)
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
co.notix.jf: jf(co.notix.banner.NotixBannerView,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.work.impl.diagnostics.DiagnosticsReceiver: DiagnosticsReceiver()
co.notix.ci: ci(co.notix.pi,kotlin.coroutines.Continuation)
co.notix.k1: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
co.notix.ej: java.lang.String toString()
androidx.window.embedding.EmptyEmbeddingComponent: void setEmbeddingRules(java.util.Set)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getSigningCertificateHistory(android.content.pm.SigningInfo)
co.notix.al: boolean equals(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.window.layout.WindowInfoTracker$-CC: void reset()
co.notix.qi: qi(co.notix.x8)
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
androidx.window.embedding.SplitController: void addSplitListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
co.notix.callback.NotixCallback$Impression: boolean equals(java.lang.Object)
com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerTrigger(android.net.Uri,kotlin.coroutines.Continuation)
co.notix.push.data.NotificationOverrides: boolean equals(java.lang.Object)
co.notix.hq: co.notix.w9 g()
io.flutter.plugins.imagepicker.Messages$SourceType: io.flutter.plugins.imagepicker.Messages$SourceType valueOf(java.lang.String)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
co.notix.cq: java.lang.Object a(java.lang.Object)
com.google.firebase.FirebaseCommonKtxRegistrar: java.util.List getComponents()
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection valueOf(java.lang.String)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
co.notix.wj: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
co.notix.w7: java.lang.Object invoke(java.lang.Object)
co.notix.fg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
co.notix.hq: co.notix.pi y()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.core.util.Consumer getCallback()
co.notix.bf: bf(co.notix.appopen.AppOpenLoader,long,kotlin.jvm.functions.Function1,co.notix.cf,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
androidx.work.impl.model.WorkSpec$WorkInfoPojo: WorkSpec$WorkInfoPojo()
co.notix.xl: xl(co.notix.gn,kotlin.coroutines.Continuation)
com.google.firebase.sessions.SessionEvents: SessionEvents()
co.notix.yg: yg(co.notix.gh,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
co.notix.mp: mp(co.notix.xp,kotlin.coroutines.Continuation)
co.notix.k6: void a(co.notix.k6,android.graphics.Bitmap)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$1: java.lang.Object invoke()
co.notix.g5: g5(co.notix.h5,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
co.notix.ud: int hashCode()
co.notix.m9: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
co.notix.in: in(java.util.List,java.lang.String,java.lang.String,int,int)
co.notix.xk: xk(co.notix.ta)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.CopyOnWriteArrayList getWindowLayoutChangeCallbacks()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
co.notix.q0: java.lang.Object invoke(java.lang.Object)
androidx.work.ListenableWorker: ListenableWorker(android.content.Context,androidx.work.WorkerParameters)
co.notix.gg: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.util.ObjectsCompat$Api19Impl: int hash(java.lang.Object[])
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType valueOf(java.lang.String)
co.notix.ln: java.lang.Object invokeSuspend(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
co.notix.ee: boolean a()
androidx.work.impl.utils.ProcessUtils: ProcessUtils()
co.notix.gh: java.lang.Object a(java.lang.Number,kotlin.coroutines.Continuation)
co.notix.y3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.interstitial.InterstitialButton: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
co.notix.fl: void b(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
co.notix.push.NotificationClickHandlerActivity: NotificationClickHandlerActivity()
androidx.window.R$attr: R$attr()
co.notix.e1: e1(co.notix.jh)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
com.google.firebase.perf.v1.ApplicationInfo$Builder: ApplicationInfo$Builder()
androidx.window.embedding.ActivityStack: boolean isEmpty()
androidx.window.layout.WindowLayoutInfo: int hashCode()
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzkr: zzkr()
com.google.firebase.perf.v1.TransportInfo$DispatchDestination: com.google.firebase.perf.v1.TransportInfo$DispatchDestination[] values()
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
kotlin.jvm.internal.Ref$BooleanRef: Ref$BooleanRef()
co.notix.gh: java.lang.Object a(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
co.notix.hi: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.lang.Object)
co.notix.lsi.NotixLockScreenInterstitialAd$Companion: void schedule(long,co.notix.lsi.LsiInterval)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
co.notix.d3: java.lang.String getName()
co.notix.fm: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.ExtensionInterfaceCompat getWindowExtension()
androidx.appcompat.widget.SearchView: void setIconified(boolean)
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
co.notix.l: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
co.notix.zo: java.lang.String toString()
co.notix.q8: co.notix.domain.RequestVars b()
co.notix.appopen.AppOpenActivity: void onDestroy()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KVisibility getVisibility()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
co.notix.l2: java.lang.Object f(kotlin.coroutines.Continuation)
com.google.firebase.perf.metrics.AppStartTrace: void setLauncherActivityOnCreateTime(java.lang.String)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
androidx.window.layout.SidecarCompat: void register(android.os.IBinder,android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
co.notix.banner.NotixBannerView: int onMeasure$makeMs(int)
co.notix.qh: qh(co.notix.periodicworker.PeriodicWorker,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
co.notix.om: java.lang.Object invoke(java.lang.Object)
co.notix.callback.NotixCallback$Subscription: co.notix.callback.NotixCallback$Subscription copy$default(co.notix.callback.NotixCallback$Subscription,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
co.notix.appopen.AppOpenLoader$DefaultImpls: java.lang.Object awaitNext$default(co.notix.appopen.AppOpenLoader,long,kotlin.coroutines.Continuation,int,java.lang.Object)
co.notix.i6: java.lang.Object invoke()
co.notix.r4: boolean equals(java.lang.Object)
co.notix.callback.NotixCallback$FcmTokenReceived: boolean equals(java.lang.Object)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder[] values()
co.notix.ak: java.lang.Object invoke(java.lang.Object)
co.notix.tn: tn(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getHeight()
co.notix.yg: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.banner.NotixBannerLoader: co.notix.banner.BannerData getNext()
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionFirelogPublisher getComponents$lambda-2(com.google.firebase.components.ComponentContainer)
co.notix.d0: d0(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
co.notix.i1: java.lang.Object invoke(java.lang.Object)
co.notix.kp: kp(co.notix.jh)
co.notix.domain.RequestVars: boolean equals(java.lang.Object)
co.notix.push.data.NotificationOverrides: java.lang.String getEvent()
com.google.firebase.storage.ktx.FirebaseStorageKtxRegistrar: java.util.List getComponents()
co.notix.oe: oe(co.notix.w9,co.notix.vk,co.notix.gk,co.notix.x8,co.notix.pe,co.notix.d8,co.notix.we,co.notix.xf)
androidx.datastore.preferences.protobuf.MapFieldLite: MapFieldLite()
androidx.window.layout.WindowMetricsCalculator: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
co.notix.z3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.rb: rb(co.notix.g)
androidx.window.core.Version$Companion: androidx.window.core.Version parse(java.lang.String)
co.notix.vd: vd(co.notix.j3)
co.notix.t5: t5(co.notix.w5)
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
co.notix.hb: hb(co.notix.ib,kotlin.coroutines.Continuation)
co.notix.d4: d4(co.notix.p4,co.notix.e4,kotlinx.coroutines.CoroutineScope,co.notix.gb,co.notix.ee,co.notix.b,co.notix.u7)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification build(android.app.Notification$Builder)
co.notix.vi: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasSigningCertificate(android.content.pm.PackageManager,java.lang.String,byte[],int)
com.google.firebase.sessions.LogEnvironment: com.google.firebase.sessions.LogEnvironment[] values()
co.notix.n9: n9(co.notix.w9,java.lang.String,kotlin.coroutines.Continuation)
co.notix.vg: vg(co.notix.jh,java.lang.String,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1)
androidx.window.embedding.ExtensionEmbeddingBackend: void access$setGlobalInstance$cp(androidx.window.embedding.ExtensionEmbeddingBackend)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
com.google.android.gms.internal.measurement.zzft$zze$zza: zzft$zze$zza()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.window.embedding.ActivityStack: java.util.List getActivities$window_release()
co.notix.gn: java.lang.Object a(co.notix.al,long,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: boolean isOpen()
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.common.base.Optional: Optional()
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: java.util.List getComponents()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty: AnalyticsConnector$ConditionalUserProperty()
co.notix.interstitial.InterstitialLoader: boolean hasNext()
co.notix.push.data.NotificationOverrides: java.lang.Boolean component6()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
co.notix.hq: co.notix.qi z()
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
androidx.core.view.ViewCompat$Api19Impl: boolean isLaidOut(android.view.View)
co.notix.lc: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
co.notix.ll: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.push.permissions.NotificationsPermissionActivity: void onStop()
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
androidx.work.InputMerger: InputMerger()
androidx.core.view.ViewCompat$Api16Impl: void setHasTransientState(android.view.View,boolean)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
co.notix.u2: u2(co.notix.rg,co.notix.wb)
io.flutter.plugins.firebase.performance.FlutterFirebaseAppRegistrar: java.util.List getComponents()
co.notix.R$style: R$style()
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
co.notix.c4: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.w5: void a(co.notix.i,int,int,co.notix.vf)
co.notix.z3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitRule: int getLayoutDirection()
kotlin.Unit: Unit()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
co.notix.he: int hashCode()
androidx.window.core.Version$Companion: androidx.window.core.Version getCURRENT()
co.notix.l2: java.lang.Object b(co.notix.pq,kotlin.coroutines.Continuation)
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend: void setSplitRules(java.util.Set)
androidx.work.ListenableWorker: com.google.common.util.concurrent.ListenableFuture setForegroundAsync(androidx.work.ForegroundInfo)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
io.flutter.view.TextureRegistry$SurfaceProducer: int getWidth()
co.notix.banner.NotixBannerLoader: java.lang.Object awaitNext(long,kotlin.coroutines.Continuation)
co.notix.native.NotixNative$Companion: NotixNative$Companion()
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
co.notix.ni: ni(co.notix.pi,kotlin.coroutines.Continuation)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType valueOf(java.lang.String)
co.notix.s7: s7(co.notix.gh,long,long,kotlin.jvm.functions.Function1)
co.notix.zi: zi(co.notix.n)
co.notix.hq: co.notix.we o()
androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
co.notix.push.data.NotificationOverrides: java.lang.Boolean getShowToast()
co.notix.kl: kl(co.notix.wl,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetRight(android.view.DisplayCutout)
co.notix.push.NotixPush: void deleteAudience(java.lang.String)
co.notix.domain.RequestVars: void setVar5(java.lang.String)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion()
co.notix.f1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$FcmTokenReceived: java.lang.String toString()
co.notix.i2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
co.notix.di: java.lang.Object invoke(java.lang.Object)
co.notix.nk: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
co.notix.cc: java.lang.Object invoke()
androidx.window.layout.SidecarWindowBackend: void getWindowLayoutChangeCallbacks$annotations()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
androidx.work.ListenableWorker: android.content.Context getApplicationContext()
co.notix.w6: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
co.notix.push.data.NotificationOverrides: java.lang.Boolean getShowBadgeIcon()
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryChargingProxy: ConstraintProxy$BatteryChargingProxy()
co.notix.ql: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat(androidx.window.extensions.embedding.ActivityEmbeddingComponent,androidx.window.embedding.EmbeddingAdapter)
io.flutter.plugins.firebase.storage.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
co.notix.sc: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
co.notix.bg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.dk: dk(co.notix.oh)
co.notix.banner.BannerSize$Inline: int getMaxHeight()
co.notix.bl: co.notix.bl[] values()
co.notix.a6: a6(co.notix.k6)
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
co.notix.ok: ok(co.notix.pk,java.lang.String,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
co.notix.i7: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
co.notix.notix_inapp_flutter.Refs: Refs()
co.notix.x9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.v8: v8(kotlinx.coroutines.flow.MutableStateFlow,co.notix.x8)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: PersistedEvent()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Class,java.lang.String,java.lang.String,int)
androidx.window.layout.SidecarCompat: androidx.window.layout.WindowLayoutInfo getWindowLayoutInfo(android.app.Activity)
co.notix.fq: fq(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
co.notix.kd: kd(long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.List,long,long,boolean)
co.notix.interstitial.NotixInterstitial$Companion: void show(co.notix.interstitial.InterstitialData,co.notix.interstitial.InterstitialButton,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
co.notix.i4: i4(kotlinx.coroutines.flow.FlowCollector)
co.notix.r3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.nb: void a(java.lang.String)
com.google.android.gms.internal.measurement.zzft$zzl: zzft$zzl()
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.Set getSplitRules()
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.Bitmap)
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.google.firebase.perf.v1.SessionVerbosity: com.google.firebase.perf.v1.SessionVerbosity[] values()
co.notix.nb: void onBackPressed()
co.notix.m5: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
co.notix.n7: n7(co.notix.s7,kotlin.coroutines.Continuation)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
co.notix.u: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.wk: boolean equals(java.lang.Object)
co.notix.p0: p0(co.notix.ta)
co.notix.bo: bo(long,co.notix.bl)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
co.notix.t8: t8(co.notix.u8,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
co.notix.dl: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.zb: zb(kotlin.coroutines.Continuation)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
androidx.window.embedding.SplitPairRule: int hashCode()
com.google.android.gms.internal.measurement.zzft$zzk$zzb: com.google.android.gms.internal.measurement.zzft$zzk$zzb[] values()
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
co.notix.b4: java.lang.Object invokeSuspend(java.lang.Object)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfn$zzd: zzfn$zzd()
co.notix.t9: t9(co.notix.w9,java.lang.String,kotlin.coroutines.Continuation)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: boolean validBounds(android.app.Activity,androidx.window.core.Bounds)
androidx.window.layout.SidecarCompat: java.util.Map access$getWindowListenerRegisteredContexts$p(androidx.window.layout.SidecarCompat)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.m8: m8(java.lang.String)
co.notix.a5: java.lang.Object invoke(java.lang.Object)
co.notix.native.NativeData: java.lang.String getDescription()
co.notix.l: int hashCode()
co.notix.u4: int hashCode()
co.notix.qc: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
co.notix.eq: co.notix.n8 c()
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
com.google.firebase.database.core.view.QueryParams: QueryParams()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int)
androidx.window.embedding.SplitController: void removeSplitListener(androidx.core.util.Consumer)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
co.notix.t4: t4(co.notix.o4,co.notix.k)
co.notix.callback.NotixCallback$Subscription: co.notix.callback.NotixCallbackStatus component1()
co.notix.native.NotixNative: void click(co.notix.native.NativeData)
androidx.datastore.preferences.protobuf.LazyFieldLite: LazyFieldLite()
androidx.window.embedding.EmbeddingBackend: void setSplitRules(java.util.Set)
com.google.firebase.remoteconfig.FirebaseRemoteConfigException$Code: com.google.firebase.remoteconfig.FirebaseRemoteConfigException$Code[] values()
co.notix.ig: co.notix.vd a(long,co.notix.domain.RequestVars,java.lang.Integer)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy[] values()
co.notix.w5: android.widget.TextView getTvAdLabel()
co.notix.callback.NotixCallback$GeneralMetrics: co.notix.callback.NotixCallback$GeneralMetrics copy$default(co.notix.callback.NotixCallback$GeneralMetrics,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.ko: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] values()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zzft$zzm: zzft$zzm()
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.google.android.gms.internal.measurement.zzfn$zzc: zzfn$zzc()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
co.notix.vl: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.perf.session.gauges.GaugeManager: void stopCollectingGauges()
co.notix.aq: aq(co.notix.oe)
co.notix.r9: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ub: ub(co.notix.i,co.notix.rb,co.notix.interstitial.InterstitialButton,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
co.notix.z1: java.lang.Object invoke(java.lang.Object)
co.notix.x7: x7(co.notix.d8,java.lang.String,co.notix.yn,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: java.lang.Object getBoundReceiver()
co.notix.pl: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.native.NativeLoader: boolean hasNext()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
co.notix.fi: java.lang.Object invoke(java.lang.Object)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerWebTriggerAsync(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level valueOf(java.lang.String)
com.google.firebase.remoteconfig.interop.rollouts.RolloutsState: RolloutsState()
androidx.window.core.Bounds: boolean isEmpty()
co.notix.ib: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.datastore.preferences.PreferencesProto$StringSet$Builder: PreferencesProto$StringSet$Builder()
co.notix.sa: sa(java.lang.String,int,java.lang.String,android.graphics.Bitmap$CompressFormat,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
co.notix.uh: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
co.notix.appopen.NotixAppOpen: co.notix.appopen.AppOpenLoader createLoader(long,co.notix.domain.RequestVars)
co.notix.hq: co.notix.a9 f()
co.notix.n0: java.lang.Object invoke(java.lang.Object)
co.notix.jd: java.lang.Object a(java.lang.Object)
co.notix.ha: ha(java.lang.String,int)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: FirebaseCommonLegacyRegistrar()
androidx.startup.InitializationProvider: InitializationProvider()
co.notix.ih: ih(co.notix.jh,kotlin.coroutines.Continuation)
co.notix.t4: java.lang.Object a(java.lang.Object)
co.notix.c: void onActivityResumed(android.app.Activity)
co.notix.callback.NotixCallback$ManageAudience: java.lang.String getData()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
co.notix.tq: void a()
kotlin.jvm.internal.Ref$ObjectRef: Ref$ObjectRef()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
co.notix.appopen.NotixAppOpen$Companion: void ignoreNextApplicationOpen()
kotlin.sequences.SequenceScope: SequenceScope()
com.google.android.datatransport.cct.internal.LogResponse: LogResponse()
co.notix.interstitial.InterstitialActivity: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.t: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.YieldContext: YieldContext()
androidx.window.layout.SidecarWindowBackend$Companion: void resetInstance()
co.notix.nd: nd(co.notix.od,java.lang.String,kotlin.coroutines.Continuation)
co.notix.id: int hashCode()
co.notix.hq: co.notix.l2 a()
co.notix.z1: z1(co.notix.jh)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
androidx.window.core.Version: int hashCode()
co.notix.c6: void a(co.notix.k6,kotlin.Pair,kotlin.Pair)
co.notix.interstitial.NotixInterstitial$Companion: co.notix.interstitial.InterstitialLoader createLoader(long,java.lang.Integer)
co.notix.bc: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.push.firebase.NotixFirebaseMessagingService: NotixFirebaseMessagingService()
co.notix.nc: nc(co.notix.jh)
co.notix.bp: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
co.notix.ib: ib(kotlinx.coroutines.flow.FlowCollector)
co.notix.g1: g1(co.notix.wb)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection[] values()
androidx.core.app.FrameMetricsAggregator: FrameMetricsAggregator()
androidx.window.layout.WindowInfoTrackerImpl: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
co.notix.e6: e6(co.notix.k6)
co.notix.lb: void onFinish()
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
androidx.window.layout.WindowMetricsCalculator$-CC: androidx.window.layout.WindowMetricsCalculator getOrCreate()
co.notix.qn: qn()
co.notix.xi: xi(kotlin.coroutines.Continuation)
co.notix.pi: java.lang.Object a(java.lang.String,co.notix.ti,kotlin.coroutines.Continuation)
co.notix.pb: java.lang.Object a(java.lang.Object)
androidx.core.widget.TextViewCompat$Api17Impl: int getTextDirection(android.view.View)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
co.notix.bk: bk(co.notix.jh)
co.notix.rn: rn()
co.notix.cf: void doOnApplicationOpen(kotlin.jvm.functions.Function1)
co.notix.j2: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.coroutines.jvm.internal.SuspendLambda: int getArity()
co.notix.p9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType: io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
co.notix.appopen.NotixAppOpen$DefaultImpls: void show$default(co.notix.appopen.NotixAppOpen,co.notix.appopen.AppOpenData,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,int,java.lang.Object)
co.notix.gm: gm(co.notix.ta)
co.notix.interstitial.WebViewInterstitialActivity: androidx.core.view.WindowInsetsCompat a(co.notix.interstitial.WebViewInterstitialActivity,android.view.View,androidx.core.view.WindowInsetsCompat)
co.notix.xm: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateParentMetricsPredicate(androidx.window.embedding.SplitRule)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
co.notix.un: long a(int)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect currentWindowBounds(android.app.Activity)
co.notix.be: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: boolean hasOverlappingRendering(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
co.notix.xi: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.o2: java.lang.String a(java.lang.Class,java.lang.StringBuilder)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void resumeWith(java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
co.notix.native.NotixNative$Companion: void click(co.notix.native.NativeData)
co.notix.kn: int a(int)
co.notix.km: km(co.notix.rq)
com.google.firebase.perf.network.FirebasePerfHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
androidx.window.embedding.SplitController$Companion: SplitController$Companion()
co.notix.push.data.NotificationOverrides: java.lang.Boolean component12()
androidx.fragment.app.FragmentActivity: FragmentActivity()
co.notix.notix_inapp_flutter.R$color: R$color()
co.notix.re: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.v1: v1(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.dh: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.we: void a(android.app.Activity)
co.notix.rp: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.p2: java.lang.StringBuilder a(java.lang.Class,java.lang.StringBuilder,java.lang.String,java.lang.Object,java.lang.String)
co.notix.f9: java.lang.String toString()
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
com.google.android.gms.internal.measurement.zzfh$zzd: zzfh$zzd()
co.notix.k1: k1(co.notix.ta)
co.notix.fl: void setLogLevel(co.notix.log.LogLevel)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
co.notix.domain.RequestVars: java.lang.String getVar1()
co.notix.q1: q1(co.notix.jh)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
co.notix.ma: ma(co.notix.na,kotlin.coroutines.Continuation)
androidx.window.embedding.MatcherUtils: boolean areActivityOrIntentComponentsMatching$window_release(android.app.Activity,android.content.ComponentName)
co.notix.domain.RequestVars: co.notix.domain.RequestVars copy(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
co.notix.d4: java.lang.Object a(co.notix.d4,co.notix.l,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
com.google.android.gms.internal.measurement.zzap: zzap()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
co.notix.rb: boolean equals(java.lang.Object)
co.notix.banner.NotixBannerView: co.notix.banner.BannerRequest access$getRequest$p(co.notix.banner.NotixBannerView)
co.notix.w1: w1(co.notix.jh)
co.notix.R$bool: R$bool()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
co.notix.f6: java.lang.Object invoke()
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
co.notix.fd: java.lang.Object a(java.lang.Object)
co.notix.worker.SelfRestartingWorker: java.lang.Object b(kotlin.coroutines.Continuation)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: SchedulerConfig$ConfigValue()
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
co.notix.a1: java.lang.Object invoke(java.lang.Object)
co.notix.nm: nm(co.notix.ta)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
com.google.firebase.perf.v1.NetworkRequestMetric$HttpMethod: com.google.firebase.perf.v1.NetworkRequestMetric$HttpMethod valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.jvm.internal.PropertyReference: PropertyReference()
co.notix.i9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
co.notix.zd: zd(co.notix.ee)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
co.notix.oq: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.callback.NotixCallback$Impression: co.notix.callback.NotixCallback$Impression copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.appopen.AppOpenActivity: void a(android.view.View)
com.google.firebase.sessions.SessionsActivityLifecycleCallbacks: SessionsActivityLifecycleCallbacks()
androidx.window.layout.SidecarCompat: SidecarCompat(androidx.window.sidecar.SidecarInterface,androidx.window.layout.SidecarAdapter)
co.notix.banner.NotixBannerView: kotlinx.coroutines.flow.MutableStateFlow access$isVisibleF$p(co.notix.banner.NotixBannerView)
co.notix.w5: android.widget.TextView getTvDescription()
co.notix.appopen.NotixAppOpen: void doOnApplicationOpen(kotlin.jvm.functions.Function1)
androidx.window.layout.FoldingFeature$Orientation: FoldingFeature$Orientation(java.lang.String)
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation,kotlin.coroutines.CoroutineContext)
co.notix.gn: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.r8: void a(java.lang.String)
co.notix.j9: j9()
co.notix.fm: fm(co.notix.wb)
co.notix.pj: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
co.notix.t9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: EventStoreConfig()
co.notix.uh: uh(co.notix.periodicworker.PeriodicWorker,kotlin.coroutines.Continuation)
co.notix.nd: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.lj: lj(co.notix.dk,kotlin.coroutines.Continuation)
co.notix.nf: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.k2: k2(co.notix.l2,kotlin.coroutines.Continuation)
co.notix.h2: h2(co.notix.l2,kotlin.coroutines.Continuation)
co.notix.id: java.lang.String toString()
co.notix.v1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
co.notix.ck: ck(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.push.NotixPush$Companion: void init(android.content.Context,java.lang.String,java.lang.String)
co.notix.pb: pb()
co.notix.z8: z8(kotlinx.coroutines.CoroutineExceptionHandler$Key)
co.notix.j8: co.notix.ed b()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context)
co.notix.interstitial.NotixInterstitial$Companion: co.notix.interstitial.InterstitialLoader createLoader(long,co.notix.domain.RequestVars)
co.notix.rc: java.lang.String a()
co.notix.zm: zm(co.notix.rq)
co.notix.callback.NotixCallbackStatus: co.notix.callback.NotixCallbackStatus[] $values()
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType valueOf(java.lang.String)
com.google.firebase.perf.session.SessionManager: java.util.concurrent.Future getSyncInitFuture()
co.notix.a: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
co.notix.lk: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.rm: java.lang.Object invoke(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
co.notix.np: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.remoteconfig.FirebaseRemoteConfigKtxRegistrar: java.util.List getComponents()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewAttachedToWindow(android.view.View)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginStart(android.view.ViewGroup$MarginLayoutParams)
co.notix.sj: sj(co.notix.jh)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener)
co.notix.zo: zo(java.lang.Long)
co.notix.ml: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.i3: co.notix.f3 a(co.notix.g)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getOrCreatePerImageReader(android.media.ImageReader)
kotlin.jvm.internal.CallableReference: java.lang.String getSignature()
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
co.notix.se: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void onSplitInfoChanged(java.util.List)
co.notix.m2: java.lang.Object a(co.notix.r4,co.notix.g4)
co.notix.callback.NotixCallback$FcmTokenReceived: java.lang.String getData()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
com.google.firebase.remoteconfig.ConfigUpdate: ConfigUpdate()
co.notix.w1: java.lang.Object invoke(java.lang.Object)
co.notix.oe: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.no: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitPlaceholderRule: SplitPlaceholderRule(java.util.Set,android.content.Intent,int,int,float,int)
com.google.android.gms.internal.measurement.zzs: com.google.android.gms.internal.measurement.zzs[] values()
co.notix.vq: vq(kotlin.coroutines.Continuation)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void notixInterstitialLoaderStartLoading(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.widget.TextViewCompat$Api16Impl: boolean getIncludeFontPadding(android.widget.TextView)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
co.notix.hg: hg(co.notix.x8,kotlinx.coroutines.CoroutineScope,co.notix.we,co.notix.rc)
com.google.android.gms.internal.measurement.zzkk: zzkk()
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()
co.notix.uo: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.jk: java.lang.Object invokeSuspend(java.lang.Object)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerTriggerAsync(android.net.Uri)
co.notix.vg: java.lang.Object a(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
androidx.window.embedding.SplitPairFilter: boolean matchesActivityIntentPair(android.app.Activity,android.content.Intent)
co.notix.ea: java.lang.Object a(kotlin.coroutines.Continuation)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Element get(kotlin.coroutines.CoroutineContext$Key)
co.notix.eg: co.notix.interstitial.InterstitialLoader createLoader(long,java.lang.Integer)
co.notix.a2: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController getInstance()
co.notix.e5: e5(co.notix.jh)
androidx.datastore.preferences.protobuf.BooleanArrayList: BooleanArrayList()
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType[] values()
co.notix.xp: java.lang.Object b(kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$AppInstall: java.lang.String component2()
co.notix.tq: void setContent(co.notix.m)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setUsesChronometer(android.app.Notification$Builder,boolean)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.window.layout.WindowMetricsCalculator$Companion: void reset()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.google.android.datatransport.runtime.TransportContext: TransportContext()
androidx.window.layout.FoldingFeature: boolean isSeparating()
co.notix.iq: long b()
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$3: void invoke(java.lang.Exception)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.EmbeddingInterfaceCompat initAndVerifyEmbeddingExtension()
co.notix.x5: x5(co.notix.k6)
co.notix.ua: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.window.embedding.SplitPlaceholderRule: java.util.Set getFilters()
co.notix.pf: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.hg: void schedule(long)
co.notix.h7: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.l2: java.lang.Object e(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
co.notix.interstitial.InterstitialButton: co.notix.interstitial.InterstitialButton copy$default(co.notix.interstitial.InterstitialButton,java.lang.String,int,java.lang.Object)
androidx.window.embedding.SplitController: void clearRegisteredRules()
co.notix.pi: java.lang.Object b(kotlin.coroutines.Continuation)
co.notix.fc: java.lang.Object invokeSuspend(java.lang.Object)
androidx.datastore.preferences.protobuf.ExtensionRegistryLite: ExtensionRegistryLite()
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonFullMetaData: GeneratedAndroidFirebaseStorage$PigeonFullMetaData()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
co.notix.cp: int hashCode()
co.notix.jc: java.lang.Object invoke(java.lang.Object)
co.notix.oc: oc(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.xd: xd(co.notix.ee)
co.notix.aj: aj(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,co.notix.o)
co.notix.x9: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: int getLabelFor(android.view.View)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
co.notix.sh: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: MeasurementManagerFutures()
co.notix.j5: j5(co.notix.n5,kotlin.coroutines.Continuation)
co.notix.go: java.lang.Object invoke(java.lang.Object)
co.notix.callback.NotixCallback$GeneralMetrics: co.notix.callback.NotixCallback$GeneralMetrics copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
com.google.firebase.messaging.EnhancedIntentService: com.google.android.gms.tasks.Task processIntent(android.content.Intent)
co.notix.th: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.zn: zn()
com.google.firebase.perf.util.Constants$TraceNames: com.google.firebase.perf.util.Constants$TraceNames[] values()
com.google.android.gms.internal.measurement.zzji: zzji()
co.notix.notix_inapp_flutter.R$id: R$id()
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getChild(android.graphics.drawable.DrawableContainer$DrawableContainerState,int)
com.google.firebase.messaging.FirebaseMessagingService: void setRpcForTesting(com.google.android.gms.cloudmessaging.Rpc)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzdi)
co.notix.callback.NotixCallback$AppInstall: java.lang.String getData()
com.google.firebase.appcheck.FirebaseAppCheckRegistrar: FirebaseAppCheckRegistrar()
co.notix.cn: java.lang.Object invoke(java.lang.Object)
androidx.window.core.Version$bigInteger$2: java.lang.Object invoke()
co.notix.r3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.p: p(co.notix.l2,kotlin.coroutines.Continuation)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionGenerator getComponents$lambda-1(com.google.firebase.components.ComponentContainer)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom[] values()
co.notix.v: java.lang.Object invokeSuspend(java.lang.Object)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase valueOf(java.lang.String)
co.notix.native.NotixNative$Companion: co.notix.native.NativeLoader createLoader(long,java.lang.Integer)
co.notix.callback.NotixCallback$ManageAudience: java.lang.String component2()
io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType: io.flutter.plugins.firebase.storage.FlutterFirebaseStorageTask$FlutterFirebaseStorageTaskType[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzdj)
co.notix.R$string: R$string()
co.notix.native.NativeData: java.lang.String getTitle()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
co.notix.af: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
co.notix.m6: void onAnimationEnd(android.view.animation.Animation)
com.google.firebase.appcheck.AppCheckTokenResult: AppCheckTokenResult()
co.notix.td: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.t9: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.perf.v1.GaugeMetric: GaugeMetric()
co.notix.p1: java.lang.Object invoke(java.lang.Object)
co.notix.callback.NotixCallback$Subscription: co.notix.callback.NotixCallback$Subscription copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.sa: co.notix.sa[] values()
co.notix.fp: fp(co.notix.hp)
co.notix.l2: java.lang.Object g(kotlin.coroutines.Continuation)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
co.notix.vn: long a(int)
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
co.notix.ug: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.hq: co.notix.hg u()
co.notix.appopen.AppOpenLoader: boolean hasNext()
co.notix.l7: int hashCode()
co.notix.eg: void a(co.notix.interstitial.InterstitialData,co.notix.interstitial.InterstitialButton,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api15Impl: boolean hasOnClickListeners(android.view.View)
co.notix.hq: co.notix.rc l()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzdi)
com.google.firebase.perf.v1.TransportInfo$DispatchDestination: com.google.firebase.perf.v1.TransportInfo$DispatchDestination valueOf(java.lang.String)
co.notix.hh: hh(co.notix.jh)
androidx.window.layout.SidecarCompat$TranslatingCallback: SidecarCompat$TranslatingCallback(androidx.window.layout.SidecarCompat)
co.notix.callback.NotixCallback$Click: int hashCode()
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
co.notix.push.pull.PullWorker: java.lang.Object b(kotlin.coroutines.Continuation)
com.google.firebase.perf.config.RemoteConfigManager: boolean hasAppStartConfigFetchDelayElapsed(long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object)
co.notix.banner.BannerRequest: boolean equals(java.lang.Object)
androidx.window.layout.WindowLayoutInfo: boolean equals(java.lang.Object)
kotlin.jvm.internal.CallableReference: boolean isAbstract()
co.notix.b7: java.lang.Object invoke()
co.notix.pg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: double deltaMillis(long)
co.notix.c: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
co.notix.hq: co.notix.ph x()
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
co.notix.no: no(co.notix.oo,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component2(android.util.Pair)
co.notix.dg: void setLogLevel(co.notix.log.LogLevel)
co.notix.wl: java.lang.Object c(co.notix.wk,kotlin.coroutines.Continuation)
co.notix.fl: void a(java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
co.notix.callback.NotixCallback$ManageAudience: java.lang.String toString()
co.notix.appopen.NotixAppOpen: void ignoreNextApplicationOpen()
co.notix.lg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.Notix$Companion: void setCallbackHandler(co.notix.callback.NotixCallbackHandler)
co.notix.wl: java.lang.Object a(co.notix.wk,kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$Click: co.notix.callback.NotixCallbackStatus component1()
co.notix.wk: wk(co.notix.bl,java.lang.String,java.lang.String,long,boolean)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.p8: co.notix.p8 valueOf(java.lang.String)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void notixNotificationInit(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result,android.content.Context)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
androidx.core.view.ViewCompat$Api16Impl: boolean hasTransientState(android.view.View)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
androidx.work.impl.model.WorkSpec$IdAndState: WorkSpec$IdAndState()
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerSourceAsync(android.net.Uri,android.view.InputEvent)
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.ExtensionInterfaceCompat initAndVerifyExtension(android.content.Context)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.google.firebase.messaging.FirebaseMessagingService: android.content.Intent getStartCommandIntent(android.content.Intent)
androidx.core.graphics.drawable.IconCompat: IconCompat()
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
co.notix.d1: d1(co.notix.ta)
co.notix.z7: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.m9: m9(co.notix.w9,kotlin.coroutines.Continuation)
co.notix.p3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.p5: p5()
co.notix.m4: java.lang.Object a(co.notix.p4,kotlin.coroutines.Continuation)
androidx.core.app.NotificationManagerCompat$Api26Impl: android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
co.notix.appopen.NotixAppOpen$Companion: co.notix.appopen.AppOpenLoader createLoader(long,java.lang.Integer)
co.notix.mb: mb(co.notix.nb,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.window.core.Version: int compareTo(java.lang.Object)
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.PerfSession perfSession()
com.google.android.gms.internal.measurement.zzft$zzb: zzft$zzb()
co.notix.lp: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
androidx.window.embedding.EmbeddingCompat: EmbeddingCompat()
com.google.android.gms.common.api.internal.zzd: zzd()
co.notix.periodicworker.PeriodicWorker: co.notix.lo a()
androidx.window.layout.SidecarWindowBackend: void callbackRemovedForActivity(android.app.Activity)
co.notix.xe: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzbv: com.google.android.gms.internal.measurement.zzbv[] values()
co.notix.mj: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
co.notix.k7: long c()
co.notix.domain.RequestVars: java.lang.String getVar4()
com.google.firebase.perf.FirebasePerfKtxRegistrar: java.util.List getComponents()
co.notix.native.NativeLoader: java.lang.Object awaitNext(long,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle setBigContentTitle(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
kotlin.jvm.internal.Lambda: int getArity()
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source[] values()
androidx.window.layout.DisplayCompatHelperApi17: DisplayCompatHelperApi17()
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
co.notix.o0: o0(co.notix.wb)
co.notix.tp: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
co.notix.interstitial.NotixInterstitial: void show(co.notix.interstitial.InterstitialData)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getPrimaryActivityStack()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
co.notix.p4: p4(int)
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
co.notix.pq: pq(kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
co.notix.ar: ar(int)
co.notix.h3: h3(kotlin.jvm.functions.Function1,co.notix.i3)
co.notix.interstitial.InterstitialButton: java.lang.String toString()
co.notix.qk: qk(co.notix.vk,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.work.ListenableWorker: androidx.work.Data getInputData()
co.notix.m3: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzhr: zzhr()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
co.notix.interstitial.NotixInterstitial$Companion: co.notix.interstitial.InterstitialLoader createLoader(long)
co.notix.km: java.lang.Object invoke(java.lang.Object)
co.notix.o3: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.h0: h0(co.notix.wb)
androidx.window.embedding.EmbeddingBackend: boolean isSplitSupported()
co.notix.callback.NotixCallback$AppInstall: co.notix.callback.NotixCallbackStatus component1()
kotlinx.coroutines.CancelHandler: CancelHandler()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
co.notix.k3: co.notix.j3 a(co.notix.p4)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
co.notix.hk: hk(co.notix.kk,kotlin.coroutines.Continuation)
com.google.common.collect.BaseImmutableMultimap: BaseImmutableMultimap()
com.google.firebase.database.ktx.FirebaseDatabaseKtxRegistrar: java.util.List getComponents()
com.google.android.gms.internal.measurement.zzfn$zzb: zzfn$zzb()
co.notix.ze: ze(kotlin.jvm.internal.Ref$LongRef,co.notix.cf,long,kotlin.jvm.functions.Function1)
co.notix.wg: wg(co.notix.xg,kotlin.coroutines.Continuation)
androidx.window.layout.SidecarWindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
co.notix.perseverance.worker.PerseveranceWorker: co.notix.lo a()
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
co.notix.rd: rd(co.notix.td,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitController: void access$setStaticSplitRules(androidx.window.embedding.SplitController,java.util.Set)
co.notix.kj: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.gj: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase[] values()
co.notix.v1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.ah: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.pi: java.lang.Object a(kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet)
com.google.firebase.perf.session.gauges.GaugeManager: boolean logGaugeMetadata(java.lang.String,com.google.firebase.perf.v1.ApplicationProcessState)
co.notix.interstitial.InterstitialLoader: co.notix.interstitial.InterstitialData getNext()
co.notix.push.NotixPush: void init(android.content.Context,java.lang.String,java.lang.String)
com.google.firebase.storage.StorageRegistrar: StorageRegistrar()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
co.notix.uq: java.lang.Object invoke()
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View)
co.notix.callback.NotixCallback$Click: java.lang.String toString()
androidx.window.embedding.EmbeddingCompat$Companion: java.lang.Integer getExtensionApiLevel()
co.notix.d7: int hashCode()
com.google.firebase.perf.session.gauges.GaugeManager: void startCollectingGauges(com.google.firebase.perf.session.PerfSession,com.google.firebase.perf.v1.ApplicationProcessState)
androidx.window.core.Version$bigInteger$2: Version$bigInteger$2(androidx.window.core.Version)
com.google.protobuf.AbstractMessageLite: AbstractMessageLite()
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.firebase.perf.application.AppStateUpdateHandler: java.lang.ref.WeakReference getAppStateCallback()
androidx.window.layout.DisplayCompatHelperApi28: DisplayCompatHelperApi28()
co.notix.ij: ij(co.notix.dk,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: ExtensionEmbeddingBackend$SplitListenerWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
co.notix.p6: java.lang.Object invoke()
co.notix.u1: java.lang.Object invoke(java.lang.Object)
co.notix.push.permissions.NotificationsPermissionActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
co.notix.appopen.NotixAppOpen: co.notix.appopen.AppOpenLoader createLoader(long,java.lang.Integer)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$1: void invoke()
co.notix.mn: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzbx: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
co.notix.u4: java.lang.String toString()
co.notix.rc: java.lang.Class b()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
co.notix.cb: java.lang.Object a(java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
co.notix.xh: xh()
co.notix.callback.NotixCallback: NotixCallback()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
co.notix.a9: kotlinx.coroutines.CoroutineScope a()
co.notix.interstitial.NotixInterstitial$DefaultImpls: void show$default(co.notix.interstitial.NotixInterstitial,co.notix.interstitial.InterstitialData,co.notix.interstitial.InterstitialButton,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,int,java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
androidx.datastore.preferences.PreferencesProto$Value$Builder: PreferencesProto$Value$Builder()
androidx.window.embedding.SplitRule$Api30Impl: android.graphics.Rect getBounds(android.view.WindowMetrics)
co.notix.r3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
co.notix.cq: cq()
co.notix.q5: q5()
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
co.notix.p3: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.domain.RequestVars: int hashCode()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State[] values()
co.notix.c5: c5(co.notix.wb)
co.notix.Notix$Companion: Notix$Companion()
co.notix.interstitial.InterstitialButton: InterstitialButton()
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion()
co.notix.x1: x1(co.notix.jh)
co.notix.p8: co.notix.p8[] values()
co.notix.z6: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int)
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
co.notix.v4: v4(co.notix.n5,kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
co.notix.R$color: R$color()
com.google.protobuf.UnsafeUtil: UnsafeUtil()
co.notix.sp: sp(kotlinx.coroutines.flow.FlowCollector)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addListener(java.util.concurrent.Executor,androidx.core.util.Consumer,kotlinx.coroutines.flow.Flow)
androidx.window.embedding.ActivityRule: int hashCode()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
co.notix.uc: void a(java.lang.String)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$1: NotixInappFlutterPlugin$notixInterstitialShow$1$1(co.notix.notix_inapp_flutter.NotixInappFlutterPlugin)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
androidx.window.layout.WindowInfoTracker$Companion: WindowInfoTracker$Companion()
androidx.window.layout.EmptyDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
co.notix.bc: bc(co.notix.lsi.LockScreenInterstitialActivity,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
co.notix.r7: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
co.notix.notix_inapp_flutter.BuildConfig: BuildConfig()
androidx.work.CoroutineWorker: java.lang.Object doWork(kotlin.coroutines.Continuation)
co.notix.domain.RequestVars: java.lang.String component1()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
co.notix.callback.NotixCallback$RefreshData: java.lang.String component2()
co.notix.dn: dn(co.notix.jh)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
co.notix.mg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: java.util.List getLastInfo()
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
co.notix.xb: java.lang.Long c(org.json.JSONObject,java.lang.String)
co.notix.a2: a2(co.notix.jh)
co.notix.vj: java.lang.Object invoke(java.lang.Object)
com.google.firebase.storage.FirebaseStorageKtxRegistrar: FirebaseStorageKtxRegistrar()
com.google.firebase.perf.session.SessionManager: void setPerfSession(com.google.firebase.perf.session.PerfSession)
co.notix.cp: cp(co.notix.bl,java.lang.Long,co.notix.bp)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
io.flutter.plugins.firebase.storage.FlutterFirebaseAppRegistrar: java.util.List getComponents()
co.notix.domain.RequestVars: java.lang.String component5()
co.notix.callback.NotixCallback$Unsubscription: co.notix.callback.NotixCallback$Unsubscription copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
androidx.work.CoroutineWorker: java.lang.Object setProgress(androidx.work.Data,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
co.notix.push.data.NotificationOverrides: java.lang.Boolean component7()
co.notix.ej: ej(long,java.lang.String)
co.notix.z6: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
co.notix.l2: java.lang.Object d(kotlin.coroutines.Continuation)
androidx.arch.core.internal.SafeIterableMap$SupportRemove: SafeIterableMap$SupportRemove()
co.notix.banner.NotixBannerView: void access$setContent(co.notix.banner.NotixBannerView,co.notix.g)
co.notix.x9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.sp: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
co.notix.push.permissions.NotificationsPermissionActivity: NotificationsPermissionActivity()
co.notix.n5: java.lang.Object a(java.lang.String,kotlin.coroutines.Continuation)
co.notix.d9: d9()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzdi)
co.notix.notix_inapp_flutter.Refs: void set(java.lang.String,java.lang.Object)
androidx.appcompat.widget.Toolbar: void setTitle(int)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
kotlin.collections.LongIterator: LongIterator()
co.notix.o: boolean equals(java.lang.Object)
co.notix.c9: int hashCode()
co.notix.push.data.NotificationOverrides: java.lang.Integer component1()
co.notix.appopen.NotixAppOpen$Companion: void doOnApplicationOpen(kotlin.jvm.functions.Function1)
co.notix.le: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitRules$window_release(android.content.Context,int)
co.notix.interstitial.InterstitialLoader: void doOnNextAvailable(kotlin.jvm.functions.Function1)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
co.notix.rh: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.measurement.zzgz: zzgz()
co.notix.rf: rf(co.notix.banner.NotixBannerView,co.notix.g,kotlin.coroutines.Continuation)
co.notix.oa: int hashCode()
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageReference: GeneratedAndroidFirebaseStorage$PigeonStorageReference()
co.notix.ap: ap(co.notix.yo,co.notix.zo)
androidx.window.embedding.EmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
co.notix.fn: fn(co.notix.gn,kotlin.coroutines.Continuation)
co.notix.kh: java.lang.Object invoke(java.lang.Object)
co.notix.w5: android.widget.ImageView getIvImage()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
co.notix.bn: bn(co.notix.wb)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
co.notix.aj: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: int getCompoundPaddingLeft()
co.notix.v6: v6(co.notix.appopen.AppOpenActivity)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
androidx.work.ListenableWorker: boolean isStopped()
co.notix.o9: o9(co.notix.w9,java.lang.String,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax valueOf(java.lang.String)
co.notix.im: java.lang.Object invoke(java.lang.Object)
co.notix.lg: lg(co.notix.ng,kotlin.coroutines.Continuation)
co.notix.dm: java.lang.Object invoke(java.lang.Object)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture deleteRegistrationsAsync(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)
co.notix.pa: java.lang.Object invokeSuspend(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
com.google.firebase.installations.remote.InstallationResponse: InstallationResponse()
androidx.window.layout.WindowInfoTrackerDecorator: androidx.window.layout.WindowInfoTracker decorate(androidx.window.layout.WindowInfoTracker)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
androidx.window.embedding.EmbeddingCompat$Companion: androidx.window.extensions.embedding.ActivityEmbeddingComponent embeddingComponent()
co.notix.xb: java.lang.String d(org.json.JSONObject,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
co.notix.callback.NotixCallback$FcmTokenReceived: co.notix.callback.NotixCallbackStatus component1()
co.notix.tg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.FoldingFeature$OcclusionType: FoldingFeature$OcclusionType(java.lang.String)
androidx.work.ListenableWorker: com.google.common.util.concurrent.ListenableFuture getForegroundInfoAsync()
co.notix.x3: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.gc: gc(co.notix.pc,kotlin.coroutines.Continuation)
com.google.firebase.perf.config.RemoteConfigManager: boolean isFirebaseRemoteConfigAvailable()
co.notix.tg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.b4: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsP$window_release(android.app.Activity)
co.notix.vb: java.lang.String toString()
co.notix.aj: java.lang.String toString()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
co.notix.oe: android.content.Context a()
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
co.notix.c6: c6(co.notix.k6)
co.notix.ck: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.nb: void onCreate(android.os.Bundle)
kotlin.jvm.internal.FunctionReference: boolean isExternal()
co.notix.ip: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.zi: java.lang.Object a(java.lang.Object)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_0_1()
co.notix.m5: m5(co.notix.n5,kotlin.coroutines.Continuation)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: RBTreeSortedMap$Builder$BooleanChunk()
co.notix.nq: nq(co.notix.rg,co.notix.wb)
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
co.notix.fi: fi(co.notix.rq)
co.notix.l4: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.vd: co.notix.f3 a(co.notix.g)
androidx.core.app.NotificationCompatBuilder$Api19Impl: android.app.Notification$Builder setExtras(android.app.Notification$Builder,android.os.Bundle)
co.notix.m0: m0(co.notix.rq)
co.notix.g8: boolean equals(java.lang.Object)
co.notix.f7: java.lang.String toString()
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
co.notix.kf: kf(co.notix.banner.NotixBannerView)
co.notix.po: po()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
co.notix.jm: java.lang.Object invoke(java.lang.Object)
co.notix.domain.RequestVars: void setVar3(java.lang.String)
com.google.protobuf.JavaType: com.google.protobuf.JavaType valueOf(java.lang.String)
co.notix.hl: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ic: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
co.notix.hq: co.notix.dg p()
co.notix.hq: co.notix.qq G()
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.window.embedding.SplitPairRule: boolean getFinishPrimaryWithSecondary()
co.notix.a0: a0(co.notix.wb)
co.notix.y6: void getOutline(android.view.View,android.graphics.Outline)
co.notix.kc: java.lang.Object invoke(java.lang.Object)
co.notix.n5: n5(co.notix.oh)
co.notix.callback.NotixCallback$AppInstall: boolean equals(java.lang.Object)
co.notix.callback.NotixCallback$FcmTokenReceived: co.notix.callback.NotixCallbackStatus getStatus()
androidx.collection.ArraySet: ArraySet()
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
androidx.core.view.ViewCompat$Api17Impl: void setPaddingRelative(android.view.View,int,int,int,int)
com.google.protobuf.FloatArrayList: FloatArrayList()
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionLifecycleServiceBinder getComponents$lambda-5(com.google.firebase.components.ComponentContainer)
co.notix.u3: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
co.notix.hq: co.notix.te n()
co.notix.m8: co.notix.ed a()
co.notix.p7: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: boolean isEmpty()
androidx.window.embedding.EmptyEmbeddingComponent: EmptyEmbeddingComponent()
com.google.android.gms.internal.measurement.zzfn$zza$zzc: zzfn$zza$zzc()
kotlin.jvm.internal.FunctionReference: int getArity()
co.notix.wf: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.hg: void schedule(long,co.notix.lsi.LsiInterval)
co.notix.qf: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.qh: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.sl: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.he: boolean equals(java.lang.Object)
androidx.window.embedding.SplitRule: SplitRule(int,int,float,int)
androidx.core.net.ConnectivityManagerCompat$Api16Impl: boolean isActiveNetworkMetered(android.net.ConnectivityManager)
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
co.notix.lg: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
co.notix.n3: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.protobuf.ExtensionRegistryLite: ExtensionRegistryLite()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
co.notix.banner.NotixBannerLoader: boolean hasNext()
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: WindowInfoTrackerImpl$windowLayoutInfo$1(androidx.window.layout.WindowInfoTrackerImpl,android.app.Activity,kotlin.coroutines.Continuation)
co.notix.ce: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
co.notix.R$id: R$id()
co.notix.m5: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.google.firebase.database.FirebaseDatabaseKtxRegistrar: java.util.List getComponents()
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
kotlin.jvm.internal.CallableReference: java.util.List getTypeParameters()
co.notix.bo: int hashCode()
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
co.notix.appopen.NotixAppOpen: void show(co.notix.appopen.AppOpenData)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType valueOf(java.lang.String)
co.notix.on: boolean equals(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
co.notix.native.NotixNative$Companion: co.notix.native.NativeLoader createLoader(long,co.notix.domain.RequestVars,java.lang.Integer)
co.notix.push.data.NotificationOverrides: java.lang.String getIconUrl()
com.google.android.datatransport.runtime.backends.BackendResponse: BackendResponse()
co.notix.wf: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.uk: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
co.notix.u9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
co.notix.callback.NotixCallback: co.notix.callback.NotixCallbackStatus getStatus()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
co.notix.c: void onActivityStarted(android.app.Activity)
com.google.firebase.perf.session.SessionManager: void lambda$setApplicationContext$0(android.content.Context,com.google.firebase.perf.session.PerfSession)
co.notix.domain.RequestVars: java.lang.String component4()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: androidx.window.layout.WindowLayoutInfo getLastInfo()
kotlin.coroutines.jvm.internal.SuspendLambda: SuspendLambda(int,kotlin.coroutines.Continuation)
co.notix.ab: java.lang.Object a(co.notix.bb,kotlin.coroutines.Continuation)
co.notix.b5: b5(co.notix.jh)
co.notix.appopen.NotixAppOpen: co.notix.appopen.AppOpenLoader createLoader(long)
co.notix.y9: y9(co.notix.z9,java.lang.String,co.notix.e3,kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$Impression: co.notix.callback.NotixCallbackStatus component1()
co.notix.ye: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
co.notix.qa: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: void setBackground(android.view.View,android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
co.notix.f: co.notix.f valueOf(java.lang.String)
co.notix.hq: co.notix.xf s()
com.google.firebase.messaging.EnhancedIntentService: void lambda$onStartCommand$1(android.content.Intent,com.google.android.gms.tasks.Task)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
co.notix.cf: cf(co.notix.k3,co.notix.d,co.notix.x8,kotlinx.coroutines.CoroutineScope,co.notix.xf)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.window.R$id: R$id()
co.notix.g4: g4(co.notix.m4,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void setInputType(int)
co.notix.hj: hj(co.notix.rg,co.notix.wb)
com.google.firebase.perf.config.RemoteConfigManager: boolean isLastFetchFailed()
co.notix.k5: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.b9: float a(java.lang.Number)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.CoroutineContext getContext()
androidx.window.embedding.SplitController: SplitController(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void scheduleFrame()
co.notix.nb: co.notix.g d()
androidx.window.layout.SidecarWindowBackend: androidx.window.layout.SidecarWindowBackend access$getGlobalInstance$cp()
co.notix.rh: rh(co.notix.periodicworker.PeriodicWorker,kotlin.coroutines.Continuation)
co.notix.me: me(co.notix.oe,kotlin.coroutines.Continuation)
co.notix.dl: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.work.CoroutineWorker: java.lang.Object setForeground(androidx.work.ForegroundInfo,kotlin.coroutines.Continuation)
co.notix.ik: ik(co.notix.kk,kotlin.coroutines.Continuation)
co.notix.bb: bb(java.lang.String,co.notix.e3)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
co.notix.lo: java.lang.Class b()
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
co.notix.q: java.lang.Object invoke(java.lang.Object)
co.notix.jq: jq()
com.google.firebase.perf.v1.ApplicationProcessState: com.google.firebase.perf.v1.ApplicationProcessState[] values()
com.google.android.gms.internal.measurement.zzdg: zzdg()
co.notix.native.NotixNative: co.notix.native.NativeLoader createLoader(long)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void notixInterstitialCreateLoader(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
co.notix.callback.NotixCallback$Unsubscription: int hashCode()
com.google.protobuf.MapFieldLite: MapFieldLite()
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
com.google.firebase.perf.v1.PerfSession: PerfSession()
androidx.window.embedding.SplitRule: boolean equals(java.lang.Object)
co.notix.na: java.lang.Object b(long,kotlin.coroutines.Continuation)
co.notix.pm: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.worker.SelfRestartingWorker: java.lang.Object doWork(kotlin.coroutines.Continuation)
co.notix.d7: java.lang.String toString()
co.notix.f8: java.lang.Object a(co.notix.g8,kotlin.coroutines.Continuation)
co.notix.m5: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.k6: void a(co.notix.k6,java.lang.String,android.view.View)
androidx.core.view.ViewCompat$Api19Impl: void setAccessibilityLiveRegion(android.view.View,int)
co.notix.zk: java.lang.Object a(java.lang.Object)
kotlin.jvm.internal.Lambda: java.lang.String toString()
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason[] values()
co.notix.mj: mj(co.notix.dk,kotlin.coroutines.Continuation)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType[] values()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
co.notix.z3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugins.imagepicker.Messages$SourceCamera: io.flutter.plugins.imagepicker.Messages$SourceCamera valueOf(java.lang.String)
co.notix.interstitial.InterstitialLoader: void stopLoading()
co.notix.lsi.LsiInterval$Fixed: LsiInterval$Fixed(long)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
kotlin.random.Random: Random()
co.notix.p8: p8(java.lang.String,int)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
androidx.lifecycle.Lifecycle: Lifecycle()
co.notix.interstitial.InterstitialButton: InterstitialButton(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
co.notix.so: so()
io.flutter.embedding.android.FlutterView: void setVisibility(int)
androidx.core.view.ViewPropertyAnimatorCompat$Api19Impl: android.view.ViewPropertyAnimator setUpdateListener(android.view.ViewPropertyAnimator,android.animation.ValueAnimator$AnimatorUpdateListener)
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.window.embedding.SplitPairRule: boolean getFinishSecondaryWithPrimary()
co.notix.i0: i0(co.notix.ta)
co.notix.lh: co.notix.pq a(co.notix.oh,java.lang.String)
kotlin.jvm.internal.FunctionReferenceImpl: FunctionReferenceImpl(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
co.notix.il: il(co.notix.rg,co.notix.wb)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void maybeWaitOnFence(android.media.Image)
com.google.firebase.sessions.api.SessionSubscriber$Name: com.google.firebase.sessions.api.SessionSubscriber$Name[] values()
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level[] values()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.settings.SessionsSettings getComponents$lambda-3(com.google.firebase.components.ComponentContainer)
co.notix.banner.NotixBannerView: void load(co.notix.banner.BannerRequest)
co.notix.lsi.LsiInterval$Fixed: co.notix.lsi.LsiInterval$Fixed copy(long)
co.notix.k6: void g()
co.notix.worker.SelfRestartingWorker: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.xa: xa(java.lang.String)
androidx.work.BackoffPolicy: androidx.work.BackoffPolicy[] values()
co.notix.callback.NotixCallback$PushDataLoad: boolean equals(java.lang.Object)
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType[] values()
co.notix.f5: f5(co.notix.n5,kotlin.coroutines.Continuation)
co.notix.p9: p9(co.notix.w9,java.lang.String,kotlin.coroutines.Continuation)
co.notix.mi: mi(co.notix.pi,kotlin.coroutines.Continuation)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
co.notix.appopen.NotixAppOpen$Companion: co.notix.appopen.AppOpenLoader createLoader(long)
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
co.notix.qi: java.lang.Class b()
co.notix.zb: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.core.Bounds: int getTop()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImages()
co.notix.lsi.LockScreenInterstitialActivity: LockScreenInterstitialActivity()
co.notix.l2: java.util.ArrayList a(java.util.List,long)
co.notix.cd: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.perf.application.AppStateUpdateHandler: void unregisterForAppState()
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$2: java.lang.Object invoke()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
co.notix.he: he(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.window.layout.ActivityCompatHelperApi30: android.graphics.Rect maximumWindowBounds(android.app.Activity)
co.notix.ub: java.lang.String toString()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
co.notix.callback.NotixCallback$PushDataLoad: co.notix.callback.NotixCallbackStatus component1()
co.notix.pm: java.lang.Object invoke(java.lang.Object)
androidx.window.embedding.MatcherUtils: boolean wildcardMatch(java.lang.String,java.lang.String)
androidx.window.layout.SidecarAdapter: SidecarAdapter()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
co.notix.cf: void doOnApplicationOpen(kotlin.jvm.functions.Function1,long)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object deleteRegistrations(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest,kotlin.coroutines.Continuation)
co.notix.hq: co.notix.kk B()
co.notix.i9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
co.notix.cf: void ignoreNextApplicationOpen()
co.notix.u6: java.lang.Object invoke()
co.notix.interstitial.NotixInterstitial$Companion: co.notix.interstitial.InterstitialLoader createLoader(long,co.notix.domain.RequestVars,java.lang.Integer)
co.notix.c: void onActivityStopped(android.app.Activity)
co.notix.l2: java.lang.Object a(kotlin.coroutines.Continuation)
com.google.firebase.sessions.FirebaseSessionsRegistrar: FirebaseSessionsRegistrar()
co.notix.ap: java.lang.String toString()
co.notix.yg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.c2: java.lang.Object invoke(java.lang.Object)
co.notix.h7: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.lo: java.lang.Object b(kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
co.notix.af: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.appcheck.internal.StorageHelper$TokenType: com.google.firebase.appcheck.internal.StorageHelper$TokenType[] values()
co.notix.v3: v3(co.notix.d4)
co.notix.ho: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.zl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: boolean isPaddingRelative(android.view.View)
co.notix.m8: co.notix.ed b()
co.notix.m1: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.a9: kotlinx.coroutines.CoroutineScope c()
co.notix.lk: lk(co.notix.push.pull.PullWorker,kotlin.coroutines.Continuation)
co.notix.p3: p3(co.notix.d4,kotlin.coroutines.Continuation)
com.google.firebase.perf.network.FirebasePerfUrlConnection: java.lang.Object getContent(java.net.URL)
co.notix.mb: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.google.android.gms.internal.measurement.zzfh$zzb: zzfh$zzb()
androidx.window.core.Bounds: int getRight()
co.notix.sq: sq(co.notix.tq)
co.notix.ql: ql(co.notix.wk)
com.google.firebase.perf.metrics.Trace: void removeAttribute(java.lang.String)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
androidx.window.layout.WindowMetricsCalculatorDecorator: androidx.window.layout.WindowMetricsCalculator decorate(androidx.window.layout.WindowMetricsCalculator)
com.google.firebase.perf.metrics.AppStartTrace: void onAppEnteredForeground()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: WindowMetricsCalculator$Companion$overrideDecorator$1(java.lang.Object)
com.google.android.gms.common.internal.zzk: zzk()
co.notix.mi: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.work.ListenableWorker: androidx.work.WorkerFactory getWorkerFactory()
co.notix.y3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.kf: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.window.embedding.SplitController: boolean isSplitSupported()
co.notix.l2: java.lang.Object c(kotlin.coroutines.Continuation)
co.notix.gh: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.ar: ar()
co.notix.k4: k4(co.notix.m4,kotlin.coroutines.Continuation)
co.notix.yp: java.lang.Object a(java.lang.Object)
co.notix.d5: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long)
androidx.window.layout.SidecarCompat: SidecarCompat(android.content.Context)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
co.notix.hq: co.notix.xp E()
co.notix.r6: java.lang.Object invoke()
co.notix.l3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
io.flutter.plugins.imagepicker.Messages$MediaSelectionOptions: Messages$MediaSelectionOptions()
co.notix.m8: m8(java.lang.String,int)
co.notix.lsi.NotixLockScreenInterstitialAd$Companion: void setCallbacks(co.notix.lsi.LockScreenInterstitialCallback)
co.notix.native.NativeData: android.graphics.Bitmap getIcon()
androidx.lifecycle.ReportFragment: ReportFragment()
co.notix.qn: java.lang.Object a(java.lang.Object)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
androidx.window.embedding.SplitRuleParser: java.util.Set parseSplitXml(android.content.Context,int)
co.notix.R$raw: R$raw()
com.google.firebase.abt.component.AbtRegistrar: AbtRegistrar()
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void showBigPictureWhenCollapsed(android.app.Notification$BigPictureStyle,boolean)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
co.notix.b1: b1(co.notix.jh)
co.notix.dk: java.lang.Object a(long,kotlin.coroutines.Continuation)
co.notix.dk: java.lang.Object b(kotlin.coroutines.Continuation)
com.google.firebase.messaging.EnhancedIntentService: void handleIntent(android.content.Intent)
co.notix.j: j()
co.notix.callback.NotixCallback$ManageAudience: co.notix.callback.NotixCallbackStatus component1()
co.notix.cp: boolean equals(java.lang.Object)
co.notix.banner.NotixBannerView: co.notix.banner.NotixBannerLoader createLoader(co.notix.banner.BannerRequest)
co.notix.v4: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.l7: boolean equals(java.lang.Object)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion()
co.notix.nb: java.lang.Object a(kotlin.coroutines.Continuation)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion()
androidx.window.core.Version: java.math.BigInteger getBigInteger()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
co.notix.dk: java.lang.Object c(long,kotlin.coroutines.Continuation)
co.notix.g3: g3(co.notix.i3,kotlin.coroutines.Continuation)
co.notix.x4: x4(co.notix.n5,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionReference: boolean isOperator()
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
co.notix.lsi.LockScreenInterstitialCallback: void onAdImpression()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
co.notix.rf: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.messaging.FirebaseMessagingService: com.google.android.gms.cloudmessaging.Rpc getRpc(android.content.Context)
androidx.core.content.ContextCompat$Api16Impl: void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int)
co.notix.el: el(java.lang.String,co.notix.fl,kotlin.coroutines.Continuation)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
co.notix.notix_inapp_flutter.R$attr: R$attr()
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
co.notix.cf: void startAutoShow(co.notix.appopen.AppOpenLoader,long,long,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
com.google.firebase.database.DatabaseRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context)
co.notix.co: void run()
io.flutter.view.TextureRegistry$SurfaceProducer: long id()
co.notix.ej: int hashCode()
com.google.android.gms.internal.measurement.zzmz: zzmz()
co.notix.an: an(co.notix.jh)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
co.notix.k0: k0(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.mh: void a(java.io.File,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.window.core.Bounds: android.graphics.Rect toRect()
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax valueOf(java.lang.String)
co.notix.ng: void setTargetEventHandler(co.notix.push.NotixTargetEventHandler)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
co.notix.dl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityRule: java.util.Set getFilters()
co.notix.fk: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.perf.v1.SessionVerbosity: com.google.firebase.perf.v1.SessionVerbosity valueOf(java.lang.String)
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: co.notix.domain.RequestVars readRequestVars(java.util.HashMap)
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
androidx.window.embedding.ActivityStack: boolean contains(android.app.Activity)
com.google.firebase.perf.v1.CpuMetricReading: CpuMetricReading()
co.notix.gg: gg(co.notix.hg,long,co.notix.lsi.LsiInterval,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
co.notix.domain.RequestVars: void setVar4(java.lang.String)
co.notix.tf: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
co.notix.banner.NotixBannerView: void setContent(co.notix.g)
co.notix.lsi.LsiInterval$Fixed: java.lang.String toString()
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode[] values()
co.notix.m0: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
co.notix.eb: co.notix.ed b()
co.notix.callback.NotixCallback$GeneralMetrics: boolean equals(java.lang.Object)
co.notix.rl: rl(co.notix.wk,long)
co.notix.lsi.LockScreenInterstitialCallback: void onAdDismissed()
co.notix.el: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.lc: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.android.gms.common.api.internal.zzb: zzb()
co.notix.dg: void setUserAgent(java.lang.String)
com.google.firebase.perf.v1.TransportInfo: TransportInfo()
co.notix.on: on(java.lang.String)
co.notix.hc: hc(co.notix.pc,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
co.notix.th: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.perf.util.Constants$CounterNames: com.google.firebase.perf.util.Constants$CounterNames[] values()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
co.notix.td: java.lang.Object b(kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
co.notix.ll: ll(co.notix.wl,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api16Impl: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver,android.view.ViewTreeObserver$OnGlobalLayoutListener)
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
co.notix.bo: java.lang.String toString()
androidx.datastore.core.SingleProcessDataStore$Message: SingleProcessDataStore$Message()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
co.notix.nb: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
co.notix.appopen.AppOpenActivity: void onCreate(android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
co.notix.callback.NotixCallback$GeneralMetrics: co.notix.callback.NotixCallbackStatus component1()
co.notix.h2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.SidecarCompat: androidx.window.sidecar.SidecarInterface getSidecar()
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
co.notix.q0: q0(co.notix.jh)
co.notix.ua: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
co.notix.i3: void doOnNextAvailable(kotlin.jvm.functions.Function1,long)
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
co.notix.callback.NotixCallback$ManageAudience: co.notix.callback.NotixCallback$ManageAudience copy$default(co.notix.callback.NotixCallback$ManageAudience,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
co.notix.em: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.internal.measurement.zzfn$zze: zzfn$zze()
co.notix.cd: cd(java.lang.String,co.notix.dd,java.lang.String,kotlin.coroutines.Continuation)
co.notix.gk: java.lang.Object a(kotlin.coroutines.Continuation)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
co.notix.xb: java.lang.Integer b(org.json.JSONObject,java.lang.String)
co.notix.da: da(com.google.android.gms.tasks.Task)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialLoaderNext$1: void invoke(co.notix.interstitial.InterstitialData)
co.notix.kl: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ia: java.lang.String toString()
androidx.window.embedding.SplitPairRule: boolean equals(java.lang.Object)
co.notix.ln: ln(co.notix.nn,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation getCompletion()
co.notix.banner.BannerRequest: long component5()
co.notix.callback.NotixCallback$PushDataLoad: int hashCode()
co.notix.f: co.notix.f[] values()
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
co.notix.l8: l8()
com.google.firebase.concurrent.FirebaseExecutors$DirectExecutor: com.google.firebase.concurrent.FirebaseExecutors$DirectExecutor[] values()
co.notix.mk: mk(co.notix.push.pull.PullWorker,kotlin.coroutines.Continuation)
co.notix.i3: co.notix.f3 a()
co.notix.nf: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.eq: co.notix.ed b()
com.google.android.datatransport.cct.internal.LogRequest: LogRequest()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void maybeWaitOnFence(android.media.Image)
com.google.android.gms.internal.measurement.zzft$zzk: zzft$zzk()
co.notix.sl: sl(co.notix.wl,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable compute()
co.notix.dc: java.lang.Object invoke()
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()
io.flutter.plugins.imagepicker.Messages$SourceSpecification: Messages$SourceSpecification()
co.notix.qo: java.lang.Object a(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: android.view.ViewParent getParentForAccessibility(android.view.View)
co.notix.g: java.lang.String a()
co.notix.ub: int hashCode()
androidx.work.ListenableWorker: boolean isRunInForeground()
co.notix.ad: java.lang.Object invoke(java.lang.Object,java.lang.Object)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable getReflected()
co.notix.bf: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
co.notix.gh: java.lang.Object a(co.notix.jj,kotlin.coroutines.Continuation)
co.notix.eh: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.work.ListenableWorker: java.util.List getTriggeredContentUris()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.gms.internal.measurement.zzfh$zzd$zzb: com.google.android.gms.internal.measurement.zzfh$zzd$zzb[] values()
co.notix.on: java.lang.String toString()
androidx.work.ContentUriTriggers: ContentUriTriggers()
co.notix.mn: mn(java.lang.String,co.notix.nn,kotlin.coroutines.Continuation)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable computeReflected()
androidx.window.layout.WindowInfoTracker: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
co.notix.jh: jh(co.notix.s8,kotlinx.coroutines.CoroutineScope,co.notix.wb,java.lang.String)
co.notix.kk: java.lang.String a()
co.notix.oi: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.internal.measurement.zzft$zzf: zzft$zzf()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
kotlin.jvm.internal.FunctionReference: boolean isInfix()
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
co.notix.push.NotixPush$Companion: void addAudience(java.lang.String)
androidx.window.core.Version: int getPatch()
androidx.work.Operation$State$SUCCESS: Operation$State$SUCCESS()
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle bigPicture(android.app.Notification$BigPictureStyle,android.graphics.Bitmap)
androidx.datastore.preferences.protobuf.DoubleArrayList: DoubleArrayList()
co.notix.oj: oj(co.notix.dk,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet,int)
co.notix.domain.RequestVars: java.lang.String component2()
co.notix.q8: int hashCode()
co.notix.d5: d5(co.notix.ta)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
co.notix.gp: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.messaging.FirebaseMessagingService: void onNewToken(java.lang.String)
androidx.window.layout.SidecarCompat$Companion: SidecarCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.e7: co.notix.f3 a(co.notix.g)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void removeListener(androidx.core.util.Consumer)
androidx.work.DirectExecutor: androidx.work.DirectExecutor valueOf(java.lang.String)
com.google.protobuf.UnknownFieldSchema: UnknownFieldSchema()
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
kotlin.jvm.internal.PropertyReference2: PropertyReference2()
co.notix.banner.BannerRequest: java.lang.String component3()
co.notix.callback.NotixCallback$Impression: java.lang.String getData()
co.notix.lq: java.lang.Object invoke(java.lang.Object)
co.notix.u8: u8(kotlinx.coroutines.flow.FlowCollector,co.notix.x8)
co.notix.w0: java.lang.Object invoke(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getActiveReader()
co.notix.ui: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.push.data.NotificationOverrides: java.lang.String component10()
co.notix.wl: java.lang.Object c(kotlin.coroutines.Continuation)
co.notix.ig: co.notix.native.NativeLoader createLoader(long,co.notix.domain.RequestVars)
co.notix.cd: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.ag: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.sessions.api.SessionSubscriber$Name: com.google.firebase.sessions.api.SessionSubscriber$Name valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
co.notix.ci: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ip: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$State getState()
co.notix.cl: cl(java.lang.String,java.lang.Throwable,co.notix.fl,kotlin.coroutines.Continuation)
co.notix.ec: ec()
androidx.window.core.Bounds: Bounds(int,int,int,int)
co.notix.wk: java.lang.String toString()
co.notix.f9: int hashCode()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams)
co.notix.h6: java.lang.Object invoke()
co.notix.af: af(long,co.notix.cf,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
co.notix.log.LogLevel: co.notix.log.LogLevel[] values()
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext minusKey(kotlin.coroutines.CoroutineContext$Key)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$3: NotixInappFlutterPlugin$notixInterstitialShow$1$3(co.notix.notix_inapp_flutter.NotixInappFlutterPlugin)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
com.google.android.gms.internal.measurement.zzfh$zza$zza: zzfh$zza$zza()
androidx.window.layout.SidecarCompat$DistinctElementCallback: void onWindowLayoutChanged(android.app.Activity,androidx.window.layout.WindowLayoutInfo)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
com.google.firebase.perf.network.FirebasePerfOkHttpClient: void enqueue(okhttp3.Call,okhttp3.Callback)
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
co.notix.banner.BannerRequest: java.lang.Integer component4()
co.notix.bm: bm(co.notix.gn,kotlin.coroutines.Continuation)
co.notix.ne: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.zf: void a(co.notix.callback.NotixCallback)
co.notix.gn: java.lang.Object a(long,kotlin.coroutines.Continuation)
co.notix.eq: eq()
co.notix.banner.BannerRequest: BannerRequest(long,co.notix.banner.BannerSize,java.lang.String,java.lang.Integer,long)
co.notix.zd: java.lang.Object invoke()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
co.notix.va: va()
co.notix.q3: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.interstitial.InterstitialLoader: void startLoading()
co.notix.uf: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.fk: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
co.notix.in: int hashCode()
androidx.window.embedding.EmbeddingCompat$Companion: boolean isEmbeddingAvailable()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
com.google.android.gms.internal.measurement.zzft$zzf$zza: zzft$zzf$zza()
co.notix.si: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.a4: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
com.google.firebase.sessions.FirebaseSessionsRegistrar: java.util.List getComponents()
androidx.window.layout.EmptyDecorator: EmptyDecorator()
co.notix.sq: java.lang.Object invoke()
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
co.notix.a3: a3()
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: co.notix.notix_inapp_flutter.Refs access$getInterstitialRefs$p(co.notix.notix_inapp_flutter.NotixInappFlutterPlugin)
co.notix.l5: l5(java.lang.String)
co.notix.s6: s6(co.notix.appopen.AppOpenActivity)
co.notix.sd: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
co.notix.wd: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.f6: f6(co.notix.k6)
co.notix.ho: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getMarginEnd(android.view.ViewGroup$MarginLayoutParams)
com.google.firebase.remoteconfig.FirebaseRemoteConfigKtxRegistrar: FirebaseRemoteConfigKtxRegistrar()
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
com.google.firebase.appcheck.internal.StorageHelper$TokenType: com.google.firebase.appcheck.internal.StorageHelper$TokenType valueOf(java.lang.String)
co.notix.lo: lo(co.notix.x8)
kotlin.jvm.internal.CallableReference: java.lang.String getName()
co.notix.callback.NotixCallback$ManageAudience: NotixCallback$ManageAudience(co.notix.callback.NotixCallbackStatus,java.lang.String)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.window.layout.HardwareFoldingFeature$Type: java.lang.String toString()
co.notix.ng: void deleteAudience(java.lang.String)
co.notix.notix_inapp_flutter.R$styleable: R$styleable()
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder valueOf(java.lang.String)
co.notix.od: od(co.notix.rg)
co.notix.el: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.to: to(co.notix.uo,kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean)
co.notix.e5: java.lang.Object invoke(java.lang.Object)
co.notix.hq: co.notix.eg t()
co.notix.v5: v5(co.notix.w5)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
co.notix.xb: java.lang.Boolean a(org.json.JSONObject,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageTaskState: io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageTaskState valueOf(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: int getAlpha(android.graphics.drawable.Drawable)
co.notix.l7: l7(co.notix.g)
co.notix.fq: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
co.notix.i: java.lang.String toString()
co.notix.tm: java.lang.Object invoke(java.lang.Object)
co.notix.banner.NotixBannerView: void setListener(co.notix.banner.NotixBannerListener)
io.flutter.plugins.imagepicker.ImagePickerFileProvider: ImagePickerFileProvider()
co.notix.yo: java.lang.String toString()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzdi)
androidx.window.core.Version$Companion: Version$Companion()
co.notix.lo: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.df: df(co.notix.j3)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.app.NavUtils$Api16Impl: boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent)
co.notix.b0: b0(co.notix.ta)
co.notix.sm: sm(co.notix.gn,kotlin.coroutines.Continuation)
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: androidx.window.layout.WindowMetricsCalculator invoke(androidx.window.layout.WindowMetricsCalculator)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
co.notix.md: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
co.notix.ni: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.h4: h4(co.notix.i4,kotlin.coroutines.Continuation)
co.notix.xn: long a(int)
co.notix.zc: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
co.notix.jj: jj(co.notix.dk,long)
co.notix.y: java.lang.Object invoke(java.lang.Object)
co.notix.log.LogLevel: boolean isGreaterOrEqual$sdk_release(co.notix.log.LogLevel)
androidx.lifecycle.LifecycleCoroutineScope: LifecycleCoroutineScope()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
co.notix.callback.NotixCallback$Unsubscription: co.notix.callback.NotixCallbackStatus getStatus()
com.google.firebase.messaging.FirebaseMessagingService: void onSendError(java.lang.String,java.lang.Exception)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzgb$zzc: zzgb$zzc()
co.notix.o9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.ii: ii(co.notix.ta)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
co.notix.notix_inapp_flutter.R: R()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invoke(kotlinx.coroutines.CoroutineScope,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setPriority(android.app.Notification$Builder,int)
co.notix.q4: java.lang.Object a(java.lang.Object)
com.google.android.gms.stats.zzc: zzc()
co.notix.zf: zf(co.notix.x8,co.notix.xf)
com.google.android.gms.internal.measurement.zzgp: zzgp()
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
com.google.android.gms.internal.measurement.zzfn$zza: zzfn$zza()
co.notix.wi: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.R: R()
co.notix.k7: java.lang.String toString()
co.notix.up: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
androidx.datastore.preferences.protobuf.UnknownFieldSchema: UnknownFieldSchema()
co.notix.y9: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.vn: vn(long,long)
androidx.window.core.Version: androidx.window.core.Version access$getVERSION_1_0$cp()
co.notix.q3: q3(kotlin.jvm.functions.Function1,co.notix.d4,long,kotlin.coroutines.Continuation)
co.notix.f1: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KFunction getReflected()
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
com.google.firebase.messaging.FirebaseMessagingService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)
co.notix.lsi.LsiInterval$Fixed: boolean equals(java.lang.Object)
co.notix.push.pull.PullWorker: PullWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
co.notix.zj: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
co.notix.up: up(co.notix.xp,kotlin.coroutines.Continuation)
co.notix.ig: ig(co.notix.k3,co.notix.x8,co.notix.w9)
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor valueOf(java.lang.String)
co.notix.u3: u3(co.notix.v3,kotlin.coroutines.Continuation)
co.notix.f0: java.lang.Object invoke(java.lang.Object)
co.notix.uj: uj(co.notix.ta)
com.google.android.gms.internal.measurement.zzfh$zze$zza: zzfh$zze$zza()
co.notix.oa: oa(boolean,long)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$2: void invoke()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
co.notix.Notix: void setLogLevel(co.notix.log.LogLevel)
co.notix.wh: java.lang.Object a(java.lang.Object)
androidx.window.core.Version: androidx.window.core.Version access$getCURRENT$cp()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
com.google.firebase.appcheck.AppCheckToken: AppCheckToken()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
co.notix.banner.NotixBannerView: kotlinx.coroutines.CoroutineScope access$getCsMain$p(co.notix.banner.NotixBannerView)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
co.notix.lsi.NotixLockScreenInterstitialAd$Companion: NotixLockScreenInterstitialAd$Companion()
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeMaximumWindowMetrics(android.app.Activity)
co.notix.gn: java.lang.Object a(co.notix.ql,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setBigPicture(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder valueOf(java.lang.String)
com.google.firebase.perf.FirebasePerfRegistrar: FirebasePerfRegistrar()
androidx.window.core.Bounds: boolean equals(java.lang.Object)
co.notix.dq: dq()
androidx.window.embedding.SplitRule$Api30Impl: SplitRule$Api30Impl()
co.notix.ap: int hashCode()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
co.notix.d: d(co.notix.x8)
kotlinx.coroutines.flow.SharedFlowSlot: SharedFlowSlot()
co.notix.hn: java.lang.Object a(java.lang.Object)
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getObbDirs(android.content.Context)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
co.notix.k2: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.banner.NotixBannerView: NotixBannerView(android.content.Context)
co.notix.ca: ca()
co.notix.callback.NotixCallback$ManageAudience: boolean equals(java.lang.Object)
com.google.firebase.perf.metrics.Trace: java.util.Map getAttributes()
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
co.notix.j0: java.lang.Object invoke(java.lang.Object)
com.google.protobuf.GeneratedMessageLite: GeneratedMessageLite()
co.notix.ke: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.a1: a1(co.notix.rq)
co.notix.hq: co.notix.d i()
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
androidx.core.os.BundleApi18ImplKt: void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
co.notix.rl: java.lang.Object invoke(java.lang.Object)
co.notix.sg: sg(co.notix.vg,kotlin.coroutines.Continuation)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
co.notix.gj: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.c1: c1(co.notix.wb)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.google.android.datatransport.runtime.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
co.notix.kh: kh(co.notix.oh,java.lang.String,kotlin.coroutines.Continuation)
com.google.firebase.database.core.SparseSnapshotTree: SparseSnapshotTree()
co.notix.ol: ol(co.notix.wl,kotlin.coroutines.Continuation)
com.google.firebase.storage.StorageRegistrar: java.util.List getComponents()
androidx.window.embedding.ActivityRule: androidx.window.embedding.ActivityRule plus$window_release(androidx.window.embedding.ActivityFilter)
co.notix.jf: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
co.notix.gd: gd(long,java.lang.String,java.lang.String,java.lang.String)
kotlin.jvm.internal.CallableReference: java.lang.Object call(java.lang.Object[])
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
co.notix.hq: co.notix.d c()
co.notix.native.NotixNative: void trackImpression(co.notix.native.NativeData)
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
co.notix.na: na(co.notix.x8)
co.notix.callback.NotixCallback$AppInstall: co.notix.callback.NotixCallbackStatus getStatus()
co.notix.ae: ae(co.notix.ee,boolean,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
co.notix.b6: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
com.google.android.datatransport.cct.internal.NetworkConnectionInfo: NetworkConnectionInfo()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
co.notix.k6: k6()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.String toString()
co.notix.sh: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.measurement.zzb: zzb()
co.notix.v: v(kotlin.coroutines.Continuation)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.FirebaseSessions getComponents$lambda-0(com.google.firebase.components.ComponentContainer)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
androidx.window.embedding.ActivityFilter: java.lang.String getIntentAction()
co.notix.l8: java.lang.Object invoke()
co.notix.l1: java.lang.Object invoke(java.lang.Object)
co.notix.y0: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int)
co.notix.nd: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
kotlinx.coroutines.internal.CtorCache: CtorCache()
com.google.firebase.messaging.EnhancedIntentService: int onStartCommand(android.content.Intent,int,int)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannel(android.app.NotificationManager,java.lang.String)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
co.notix.push.NotixPush$Companion: NotixPush$Companion()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
co.notix.nd: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
com.google.firebase.perf.session.gauges.GaugeManager: void lambda$startCollectingGauges$2(java.lang.String,com.google.firebase.perf.v1.ApplicationProcessState)
co.notix.ph: java.lang.String a()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void finalize()
co.notix.hl: hl(co.notix.il,co.notix.in,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzfn$zzc$zza: zzfn$zzc$zza()
androidx.window.embedding.ActivityFilter: android.content.ComponentName getComponentName()
co.notix.ea: ea(co.notix.na,co.notix.zf,co.notix.xp)
co.notix.a8: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.jf: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.s3: s3(co.notix.d4,kotlin.coroutines.Continuation)
co.notix.tf: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzft$zzi$zzb: zzft$zzi$zzb()
androidx.window.layout.FoldingFeature$State: java.lang.String toString()
co.notix.ho: ho(co.notix.lo,long,kotlin.coroutines.Continuation)
co.notix.lp: java.lang.Object invoke(java.lang.Object)
co.notix.xl: java.lang.Object invokeSuspend(java.lang.Object)
androidx.datastore.preferences.PreferencesProto$PreferenceMap$Builder: PreferencesProto$PreferenceMap$Builder()
co.notix.notix_inapp_flutter.R$drawable: R$drawable()
androidx.window.layout.WindowMetricsCalculator$Companion$overrideDecorator$1: java.lang.Object invoke(java.lang.Object)
co.notix.qm: qm(co.notix.gn,kotlin.coroutines.Continuation)
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int)
co.notix.callback.NotixCallback$AppInstall: co.notix.callback.NotixCallback$AppInstall copy$default(co.notix.callback.NotixCallback$AppInstall,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
co.notix.banner.NotixBannerView: java.util.concurrent.atomic.AtomicBoolean access$getLoadCalled$p(co.notix.banner.NotixBannerView)
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onConfigurationChanged(android.content.res.Configuration)
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
co.notix.oe: java.lang.Object b(co.notix.he,kotlin.coroutines.Continuation)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void notixSetLogLevel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
co.notix.so: co.notix.ed a()
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
co.notix.dp: java.lang.String toString()
androidx.datastore.preferences.protobuf.ByteString: ByteString()
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State valueOf(java.lang.String)
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
co.notix.uc: void setLogLevel(co.notix.log.LogLevel)
co.notix.domain.RequestVars: void setVar1(java.lang.String)
co.notix.i7: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
co.notix.ul: ul(co.notix.wl,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
co.notix.banner.BannerRequest: java.lang.Integer getExperiment()
com.google.firebase.remoteconfig.RemoteConfigRegistrar: com.google.firebase.remoteconfig.RemoteConfigComponent lambda$getComponents$0(com.google.firebase.components.Qualified,com.google.firebase.components.ComponentContainer)
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.gms.internal.measurement.zzjf: zzjf()
co.notix.f8: java.lang.Object a(co.notix.o8,co.notix.xi)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
co.notix.zo: int hashCode()
androidx.core.app.NotificationCompatBuilder$Api16Impl: android.app.Notification$Builder setSubText(android.app.Notification$Builder,java.lang.CharSequence)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
androidx.datastore.preferences.protobuf.GeneratedMessageLite$ExtendableMessage: GeneratedMessageLite$ExtendableMessage()
co.notix.k6: void a(co.notix.k6,co.notix.interstitial.InterstitialButton,kotlin.Pair)
co.notix.worker.SelfRestartingWorker: java.lang.Object a(co.notix.worker.SelfRestartingWorker,kotlin.coroutines.Continuation)
com.google.firebase.perf.application.AppStateUpdateHandler: AppStateUpdateHandler(com.google.firebase.perf.application.AppStateMonitor)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.widget.PopupWindowCompat$Api19Impl: void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int)
androidx.work.CoroutineWorker: com.google.common.util.concurrent.ListenableFuture startWork()
com.google.firebase.perf.session.SessionManager: SessionManager(com.google.firebase.perf.session.gauges.GaugeManager,com.google.firebase.perf.session.PerfSession,com.google.firebase.perf.application.AppStateMonitor)
co.notix.qq: qq(co.notix.iq)
androidx.window.embedding.ActivityRule: ActivityRule(java.util.Set,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.work.NetworkType: androidx.work.NetworkType[] values()
co.notix.pg: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.banner.NotixBannerView: void access$setResponseSize$p(co.notix.banner.NotixBannerView,co.notix.banner.BannerSize)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
co.notix.l4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.work.ListenableWorker: java.util.UUID getId()
co.notix.j8: co.notix.ed a()
androidx.work.impl.utils.futures.DirectExecutor: androidx.work.impl.utils.futures.DirectExecutor[] values()
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
co.notix.bf: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
co.notix.appopen.NotixAppOpen$Companion: NotixAppOpen$Companion()
co.notix.t3: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
co.notix.gq: gq(kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityFilter: int hashCode()
co.notix.banner.NotixBannerView: void access$loadOnce(co.notix.banner.NotixBannerView)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
com.google.firebase.database.connection.Connection$DisconnectReason: com.google.firebase.database.connection.Connection$DisconnectReason valueOf(java.lang.String)
co.notix.c0: c0(co.notix.jh)
co.notix.tg: tg(co.notix.jh,co.notix.vg,kotlin.coroutines.Continuation)
co.notix.vi: vi(co.notix.perseverance.worker.PerseveranceWorker,kotlin.coroutines.Continuation)
androidx.window.layout.WindowMetricsCalculatorCompat: androidx.window.layout.WindowMetrics computeCurrentWindowMetrics(android.app.Activity)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
co.notix.banner.BannerRequest: long component1()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
kotlin.coroutines.AbstractCoroutineContextElement: java.lang.Object fold(java.lang.Object,kotlin.jvm.functions.Function2)
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.lifecycle.LifecycleService: LifecycleService()
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
co.notix.ng: void addAudience(java.lang.String)
com.google.protobuf.CodedInputStream: CodedInputStream()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
co.notix.ym: java.lang.Object invoke(java.lang.Object)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
co.notix.dj: java.lang.Object a(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader access$500(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
co.notix.qa: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$502(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims()
co.notix.gd: java.lang.String toString()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
androidx.window.layout.HardwareFoldingFeature: boolean isSeparating()
co.notix.interstitial.NotixInterstitial$Companion: NotixInterstitial$Companion()
co.notix.w3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.banner.NotixBannerView: void onDetachedFromWindow()
androidx.window.layout.SidecarCompat: void registerConfigurationChangeListener(android.app.Activity)
co.notix.k9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.embedding.ActivityStack: ActivityStack(java.util.List,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.window.embedding.EmbeddingTranslatingCallback: EmbeddingTranslatingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface,androidx.window.embedding.EmbeddingAdapter)
co.notix.op: op(co.notix.xp,kotlin.coroutines.Continuation)
co.notix.l: l(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.window.layout.WindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.firebase.installations.InstallationTokenResult: InstallationTokenResult()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
co.notix.vc: void a(java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader29()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
co.notix.banner.NotixBannerListener: void onAdLoaded()
co.notix.rn: java.lang.Object a(java.lang.Object)
co.notix.s9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairFilter parseSplitPairFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.work.CoroutineWorker: void onStopped()
co.notix.c6: java.lang.Object invoke(java.lang.Object)
co.notix.nf: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
co.notix.e9: java.lang.Object a(java.lang.Object)
co.notix.xc: void a(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept$lambda-1(androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper,java.util.List)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
co.notix.b6: b6(co.notix.k6,kotlin.coroutines.Continuation)
co.notix.push.data.NotificationOverrides: java.lang.String getText()
co.notix.interstitial.WebViewInterstitialActivity: void a(android.view.View)
co.notix.jq: java.lang.Object invoke(java.lang.Object)
co.notix.banner.NotixBannerView: void onVisibilityAggregated(boolean)
co.notix.callback.NotixCallback$GeneralMetrics: int hashCode()
androidx.window.layout.SidecarWindowBackend$Companion: androidx.window.layout.SidecarWindowBackend getInstance(android.content.Context)
co.notix.R$layout: R$layout()
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
co.notix.yh: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: void setLayoutDirection(android.view.View,int)
co.notix.rp: rp(co.notix.sp,kotlin.coroutines.Continuation)
co.notix.z2: z2()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
io.flutter.plugins.firebase.storage.FlutterFirebaseStoragePlugin: FlutterFirebaseStoragePlugin()
kotlinx.coroutines.EventLoop: EventLoop()
co.notix.callback.NotixCallback$Unsubscription: co.notix.callback.NotixCallbackStatus component1()
co.notix.ue: java.lang.Object invoke()
com.google.android.gms.internal.measurement.zzfh$zzb$zza: zzfh$zzb$zza()
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
co.notix.gd: boolean equals(java.lang.Object)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
co.notix.hq: co.notix.ng w()
androidx.window.embedding.SplitInfo: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
co.notix.ao: java.lang.Object a(java.lang.Object)
co.notix.lsi.NotixLockScreenInterstitialAd: void schedule(long,co.notix.lsi.LsiInterval)
co.notix.push.NotixPush: void addAudience(java.lang.String)
co.notix.g1: java.lang.Object invoke(java.lang.Object)
co.notix.le: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPlaceholderRule: boolean equals(java.lang.Object)
co.notix.lsi.LockScreenInterstitialWorker: co.notix.lo a()
co.notix.wh: wh()
co.notix.u9: u9(co.notix.w9,java.lang.String,kotlin.coroutines.Continuation)
co.notix.z6: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonListOptions: GeneratedAndroidFirebaseStorage$PigeonListOptions()
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
com.google.android.gms.internal.measurement.zznq: com.google.android.gms.internal.measurement.zznq[] values()
co.notix.gn: java.lang.Object a(co.notix.rl,kotlin.coroutines.Continuation)
co.notix.hq: co.notix.ig v()
androidx.window.embedding.EmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
co.notix.mg: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.fg: fg(co.notix.hg,kotlin.coroutines.Continuation)
co.notix.interstitial.NotixInterstitial: co.notix.interstitial.InterstitialLoader createLoader(long)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
androidx.window.core.Bounds: java.lang.String toString()
co.notix.of: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
co.notix.a3: java.lang.String getName()
co.notix.callback.NotixCallback$GeneralMetrics: co.notix.callback.NotixCallbackStatus getStatus()
co.notix.kq: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.yl: yl(co.notix.al,long)
co.notix.ji: java.lang.Object invoke(java.lang.Object)
co.notix.lsi.LsiInterval$Fixed: long component1()
co.notix.p4: p4()
co.notix.rg: java.lang.Object a(int,java.lang.String,boolean,co.notix.on,kotlin.jvm.functions.Function1,co.notix.yn,java.util.Set,kotlin.coroutines.Continuation)
co.notix.ig: co.notix.native.NativeLoader createLoader(long)
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
co.notix.ng: void init(android.content.Context,java.lang.String,java.lang.String)
androidx.work.ListenableWorker: java.util.Set getTags()
co.notix.se: se(android.content.Context,java.lang.String,kotlin.coroutines.Continuation)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzdi)
co.notix.j1: j1(co.notix.wb)
co.notix.om: om(co.notix.jh)
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.push.NotixTargetEventHandler: void handle(android.content.Context,java.lang.String)
kotlin.jvm.internal.FunctionReference: boolean equals(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.google.firebase.sessions.settings.SessionsSettings$Companion: SessionsSettings$Companion()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
co.notix.callback.NotixCallback$PushDataLoad: java.lang.String toString()
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle setBigContentTitle(android.app.Notification$BigTextStyle,java.lang.CharSequence)
androidx.core.view.ViewCompat$Api16Impl: int getImportantForAccessibility(android.view.View)
co.notix.v7: v7(co.notix.d8,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
io.flutter.view.TextureRegistry$ImageConsumer: android.media.Image acquireLatestImage()
co.notix.sa: co.notix.sa valueOf(java.lang.String)
co.notix.j6: j6(co.notix.k6)
androidx.window.core.Version$Companion: Version$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.xp: java.lang.Object c(kotlin.coroutines.Continuation)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
co.notix.push.pull.PullWorker: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.n: java.lang.Object a(java.lang.Object)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeatures(java.util.List,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.firebase.perf.util.Timer: Timer()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
co.notix.b4: b4(co.notix.d4,kotlin.coroutines.Continuation)
co.notix.zh: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.u0: java.lang.Object invoke(java.lang.Object)
co.notix.j8: j8()
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
co.notix.o5: o5(co.notix.x8)
co.notix.jo: java.lang.Object invoke(java.lang.Object)
androidx.work.ListenableWorker: com.google.common.util.concurrent.ListenableFuture startWork()
androidx.window.layout.SidecarCompat: boolean validateExtensionInterface()
kotlin.coroutines.AbstractCoroutineContextElement: AbstractCoroutineContextElement(kotlin.coroutines.CoroutineContext$Key)
androidx.window.layout.SidecarCompat$FirstAttachAdapter: SidecarCompat$FirstAttachAdapter(androidx.window.layout.SidecarCompat,android.app.Activity)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.client.ResponseHandler)
com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchType: com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchType valueOf(java.lang.String)
co.notix.mf: mf(kotlinx.coroutines.flow.FlowCollector,co.notix.banner.NotixBannerView)
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
androidx.window.embedding.SplitController: java.util.Set getSplitRules()
com.google.firebase.messaging.EnhancedIntentService: boolean stopSelfResultHook(int)
co.notix.ya: java.lang.String toString()
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialLoaderNext$1: NotixInappFlutterPlugin$notixInterstitialLoaderNext$1(io.flutter.plugin.common.MethodChannel$Result,co.notix.notix_inapp_flutter.NotixInappFlutterPlugin)
androidx.core.view.ViewCompat$Api16Impl: void requestFitSystemWindows(android.view.View)
co.notix.fj: fj(kotlinx.coroutines.CoroutineScope,co.notix.hj)
androidx.window.layout.SidecarAdapter$Companion: int getSidecarDevicePosture$window_release(androidx.window.sidecar.SidecarDeviceState)
co.notix.push.data.NotificationOverrides: java.lang.String getTitle()
androidx.core.view.ViewCompat$Api16Impl: int getWindowSystemUiVisibility(android.view.View)
co.notix.banner.BannerRequest: long getRefreshIntervalMillis()
co.notix.m1: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
com.google.protobuf.ExtensionSchema: ExtensionSchema()
co.notix.ye: ye(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.work.Constraints: Constraints()
co.notix.callback.NotixCallback$Impression: java.lang.String component2()
co.notix.zq: zq()
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
co.notix.zp: int hashCode()
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.view.DisplayCutout getCutoutForDisplay(android.view.Display)
co.notix.nh: nh(co.notix.oh,kotlin.coroutines.Continuation)
co.notix.p9: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugins.imagepicker.Messages$CacheRetrievalError: Messages$CacheRetrievalError()
co.notix.kc: kc(co.notix.jh)
co.notix.wp: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.uc: uc()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
co.notix.qd: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
co.notix.ro: ro()
com.google.firebase.perf.session.SessionManager: SessionManager()
co.notix.lg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getWidth()
co.notix.jj: java.lang.Object invoke(java.lang.Object)
co.notix.sm: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitPairRule: SplitPairRule(java.util.Set,boolean,boolean,boolean,int,int,float,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.push.data.NotificationOverrides: java.lang.Integer getPriority()
co.notix.h0: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
co.notix.j4: j4(kotlinx.coroutines.flow.Flow)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: FlutterRenderer$ImageReaderSurfaceProducer(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
co.notix.fh: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener)
co.notix.callback.NotixCallback$Unsubscription: java.lang.String component2()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
co.notix.oc: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
co.notix.aq: java.lang.Object a(co.notix.o8,co.notix.xi)
com.google.firebase.installations.local.PersistedInstallationEntry: PersistedInstallationEntry()
com.google.firebase.perf.session.SessionManager: void onUpdateAppState(com.google.firebase.perf.v1.ApplicationProcessState)
androidx.core.view.ViewCompat$Api19Impl: void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int)
co.notix.i3: co.notix.banner.BannerData getNext()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
co.notix.lsi.LockScreenInterstitialWorker: java.lang.Object b(kotlin.coroutines.Continuation)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.datastore.preferences.protobuf.IntArrayList: IntArrayList()
co.notix.R$attr: R$attr()
co.notix.banner.BannerSize$Fixed: int getWidth()
co.notix.s3: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.gm: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
co.notix.ij: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
co.notix.jn: void a(co.notix.vc,java.lang.String,java.lang.Throwable)
androidx.core.app.ActivityCompat$Api16Impl: void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle)
com.google.android.gms.internal.measurement.zzft$zzb$zza: zzft$zzb$zza()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
co.notix.domain.RequestVars: co.notix.domain.RequestVars copy$default(co.notix.domain.RequestVars,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,java.lang.Object)
co.notix.q1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollY(android.view.accessibility.AccessibilityRecord)
co.notix.pg: pg(co.notix.pn,co.notix.rg,int,java.lang.String,boolean,java.util.Set,kotlin.jvm.functions.Function1,co.notix.yn,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
androidx.window.layout.SidecarAdapter$Companion: SidecarAdapter$Companion()
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
com.google.firebase.messaging.FirebaseMessagingService: void onDeletedMessages()
co.notix.c: void onActivityPaused(android.app.Activity)
co.notix.banner.BannerSize$Sticky: BannerSize$Sticky(int)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
co.notix.xo: java.lang.String toString()
androidx.window.embedding.EmbeddingTranslatingCallback: void accept(java.util.List)
androidx.window.layout.SidecarAdapter$Companion: java.util.List getSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo)
com.google.firebase.perf.network.FirebasePerfOkHttpClient: okhttp3.Response execute(okhttp3.Call)
co.notix.kg: kg(co.notix.ng,kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityStack: int hashCode()
co.notix.dp: boolean equals(java.lang.Object)
co.notix.domain.RequestVars: RequestVars(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
co.notix.m4: m4(kotlinx.coroutines.CoroutineScope,co.notix.u2,co.notix.n5,co.notix.iq,co.notix.d8,co.notix.l2)
co.notix.s7: java.lang.Object b(kotlin.coroutines.Continuation)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
co.notix.bp: bp(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
kotlin.jvm.internal.CallableReference: CallableReference()
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.window.layout.SidecarAdapter$Companion: int getRawSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState)
co.notix.v9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
co.notix.lsi.NotixLockScreenInterstitialAd$Companion: void cancel()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
co.notix.a9: a9()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDisplayFeatures(androidx.window.sidecar.SidecarWindowLayoutInfo,java.util.List)
co.notix.zb: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.ActivityFilter: java.lang.String toString()
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar: java.util.List getComponents()
co.notix.k7: co.notix.domain.RequestVars b()
co.notix.n6: java.lang.Object invoke()
co.notix.dp: int hashCode()
co.notix.appopen.AppOpenActivity: androidx.core.view.WindowInsetsCompat a(co.notix.appopen.AppOpenActivity,android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.window.core.Version: java.lang.String toString()
co.notix.ui: ui(co.notix.perseverance.worker.PerseveranceWorker,kotlin.coroutines.Continuation)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.FoldingFeature translate$window_release(android.app.Activity,androidx.window.extensions.layout.FoldingFeature)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetTop(android.view.DisplayCutout)
co.notix.s4: java.lang.Object a(java.lang.Object)
androidx.core.widget.TextViewCompat$Api17Impl: int getLayoutDirection(android.view.View)
co.notix.a8: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.ad: ad(co.notix.bd,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,kotlin.coroutines.Continuation)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: MeasurementManager()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
co.notix.R$integer: R$integer()
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$3: java.lang.Object invoke(java.lang.Object)
co.notix.wj: wj(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsN$window_release(android.app.Activity)
co.notix.qi: java.lang.String a()
co.notix.k7: k7(long,co.notix.domain.RequestVars,java.lang.Integer,java.lang.Integer,java.lang.Integer)
co.notix.uj: java.lang.Object invoke(java.lang.Object)
co.notix.wd: wd(co.notix.ee,kotlin.coroutines.Continuation)
co.notix.un: un()
co.notix.b2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
co.notix.l2: l2(co.notix.oh)
co.notix.k0: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
co.notix.l6: void a(co.notix.appopen.AppOpenActivity,android.view.View)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
co.notix.interstitial.NotixInterstitial$Companion: void show(co.notix.interstitial.InterstitialData,co.notix.interstitial.InterstitialButton)
androidx.window.layout.ActivityCompatHelperApi24: ActivityCompatHelperApi24()
androidx.work.ListenableWorker: void setUsed()
co.notix.callback.NotixCallback$Unsubscription: co.notix.callback.NotixCallback$Unsubscription copy$default(co.notix.callback.NotixCallback$Unsubscription,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
co.notix.o: o(int,int,int,int,int,int,int,int,int,int,int,int)
co.notix.ph: java.lang.Class b()
com.google.android.gms.internal.measurement.zzfn$zza$zzb: zzfn$zza$zzb()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
com.google.firebase.database.core.utilities.TreeNode: TreeNode()
co.notix.do: do(com.google.common.util.concurrent.ListenableFuture)
co.notix.if: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.cj: java.lang.Object a(java.lang.Object)
co.notix.x5: java.lang.Object invoke()
com.google.firebase.perf.network.FirebasePerfHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.HttpClient,org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
co.notix.qc: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.perf.session.gauges.GaugeManager: GaugeManager(com.google.firebase.components.Lazy,com.google.firebase.perf.transport.TransportManager,com.google.firebase.perf.config.ConfigResolver,com.google.firebase.perf.session.gauges.GaugeMetadataManager,com.google.firebase.components.Lazy,com.google.firebase.components.Lazy)
co.notix.o7: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
kotlin.jvm.internal.CallableReference: java.lang.Object callBy(java.util.Map)
co.notix.to: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.internal.measurement.zzft$zzn: zzft$zzn()
co.notix.vo: java.lang.Object a(java.lang.Object)
kotlin.internal.jdk7.JDK7PlatformImplementations: JDK7PlatformImplementations()
co.notix.op: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzdi)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
co.notix.g0: g0(co.notix.jh)
co.notix.interstitial.NotixInterstitial: co.notix.interstitial.InterstitialLoader createLoader(long,java.lang.Integer)
co.notix.callback.NotixCallback$RefreshData: co.notix.callback.NotixCallbackStatus component1()
co.notix.k: k()
co.notix.mc: java.lang.Object invoke(java.lang.Object)
co.notix.en: java.lang.Object invoke(java.lang.Object)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetLeft(android.view.DisplayCutout)
co.notix.qg: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean shouldUpdate()
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle setSummaryText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
co.notix.vb: int hashCode()
co.notix.periodicworker.PeriodicWorker: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.k0: java.lang.Object invoke(java.lang.Object)
co.notix.fb: fb(java.lang.String,int)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
co.notix.ji: ji(co.notix.jh)
co.notix.i: int hashCode()
co.notix.hl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
androidx.work.ListenableWorker: void stop()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.window.layout.FoldingFeature$Orientation$Companion: FoldingFeature$Orientation$Companion()
co.notix.callback.NotixCallback$PushDataLoad: co.notix.callback.NotixCallback$PushDataLoad copy$default(co.notix.callback.NotixCallback$PushDataLoad,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
co.notix.banner.NotixBannerView: NotixBannerView(android.content.Context,android.util.AttributeSet,int)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
co.notix.t6: t6(co.notix.appopen.AppOpenActivity)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
co.notix.cg: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
co.notix.ud: java.lang.String toString()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
co.notix.pa: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.work.impl.WorkDatabase: WorkDatabase()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
kotlin.jvm.internal.Lambda: Lambda(int)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
co.notix.co: co(kotlinx.coroutines.CancellableContinuationImpl,com.google.common.util.concurrent.ListenableFuture)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
co.notix.g0: java.lang.Object invoke(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: ExtensionWindowLayoutInfoBackend$MulticastConsumer(android.app.Activity)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
co.notix.n5: java.lang.Object a(co.notix.p4,kotlin.coroutines.Continuation)
co.notix.zj: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
co.notix.d2: d2(co.notix.jh)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
co.notix.md: md()
co.notix.lsi.LockScreenInterstitialActivity: void onStart()
com.google.firebase.perf.network.FirebasePerfHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.protocol.HttpContext)
com.google.firebase.storage.ktx.FirebaseStorageKtxRegistrar: FirebaseStorageKtxRegistrar()
co.notix.cb: cb()
co.notix.kj: kj(co.notix.dk,kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$GeneralMetrics: java.lang.String getData()
co.notix.bc: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.hq: co.notix.dk A()
co.notix.wn: wn(long)
co.notix.ia: ia(java.lang.String)
co.notix.banner.BannerRequest: java.lang.String getPlacement()
co.notix.callback.NotixCallback$Impression: co.notix.callback.NotixCallback$Impression copy$default(co.notix.callback.NotixCallback$Impression,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
androidx.window.layout.HardwareFoldingFeature$Companion: void validateFeatureBounds$window_release(androidx.window.core.Bounds)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.firebase.perf.application.AppStateUpdateHandler: com.google.firebase.perf.v1.ApplicationProcessState getAppState()
co.notix.appopen.AppOpenLoader: void startLoading()
io.flutter.view.TextureRegistry$SurfaceProducer: void scheduleFrame()
com.google.firebase.perf.metrics.validator.PerfMetricValidator: PerfMetricValidator()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
co.notix.y9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
co.notix.i9: i9(co.notix.l9,java.lang.String,kotlin.coroutines.Continuation)
co.notix.q9: q9(co.notix.w9,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzay: zzay()
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
co.notix.c: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
co.notix.interstitial.WebViewInterstitialActivity: void g()
co.notix.g4: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.p7: p7(co.notix.q7,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
co.notix.zp: zp(java.lang.String,java.lang.String)
co.notix.cl: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.f9: boolean equals(java.lang.Object)
io.flutter.plugins.imagepicker.Messages$GeneralOptions: Messages$GeneralOptions()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
co.notix.eh: eh(co.notix.gh,kotlin.coroutines.Continuation)
co.notix.x2: java.lang.String getName()
co.notix.z5: z5(co.notix.k6)
androidx.window.java.R: R()
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
co.notix.uk: uk(co.notix.vk,kotlin.coroutines.Continuation)
androidx.window.core.Bounds: Bounds(android.graphics.Rect)
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion[] values()
co.notix.gg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.embedding.EmptyEmbeddingComponent: void setSplitInfoCallback(java.util.function.Consumer)
co.notix.k9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.HardwareFoldingFeature: android.graphics.Rect getBounds()
co.notix.y4: java.lang.Object invoke(java.lang.Object)
co.notix.xf: xf()
co.notix.callback.NotixCallbackStatus: co.notix.callback.NotixCallbackStatus[] values()
co.notix.d7: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState valueOf(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
co.notix.push.NotixPush: void setTargetEventHandler(co.notix.push.NotixTargetEventHandler)
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
androidx.work.impl.workers.ConstraintTrackingWorker: ConstraintTrackingWorker(android.content.Context,androidx.work.WorkerParameters)
co.notix.iq: void d()
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
co.notix.eg: co.notix.interstitial.InterstitialLoader createLoader(long,co.notix.domain.RequestVars,java.lang.Integer)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
com.google.firebase.appcheck.FirebaseAppCheck: FirebaseAppCheck()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
co.notix.t1: t1(co.notix.jh)
com.google.firebase.perf.metrics.AppStartTrace: void setLauncherActivityOnResumeTime(java.lang.String)
co.notix.mo: mo(co.notix.worker.SelfRestartingWorker,kotlin.coroutines.Continuation)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType[] values()
androidx.work.ListenableWorker: com.google.common.util.concurrent.ListenableFuture setProgressAsync(androidx.work.Data)
co.notix.h: int a(java.lang.String,int,int)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
co.notix.push.permissions.NotificationsPermissionActivity: void onDestroy()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
co.notix.mm: mm(co.notix.wb)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: io.flutter.plugin.common.MethodChannel access$getChannel$p(co.notix.notix_inapp_flutter.NotixInappFlutterPlugin)
co.notix.banner.NotixBannerLoader: void stopLoading()
co.notix.tf: tf(co.notix.banner.NotixBannerView,kotlin.coroutines.Continuation)
co.notix.fk: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.hq: co.notix.ea h()
co.notix.appopen.NotixAppOpen$Companion: void startAutoShow(co.notix.appopen.AppOpenLoader,long,long,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
co.notix.mq: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.wn: long a(int)
co.notix.ih: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.wd: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.b7: b7(co.notix.appopen.AppOpenActivity)
co.notix.kg: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
co.notix.c8: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.r2: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.internal.measurement.zzla: zzla()
com.google.android.gms.internal.measurement.zzjj: zzjj()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void markDirty()
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.CpuGaugeCollector lambda$new$0()
co.notix.rj: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
com.google.android.gms.internal.measurement.zzfh$zzf: zzfh$zzf()
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
androidx.window.embedding.SplitPlaceholderRule: int hashCode()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerWebTrigger(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest,kotlin.coroutines.Continuation)
com.google.firebase.FirebaseException: FirebaseException()
com.google.firebase.messaging.EnhancedIntentService: com.google.android.gms.tasks.Task access$000(com.google.firebase.messaging.EnhancedIntentService,android.content.Intent)
co.notix.k: java.lang.Object a(java.lang.Object)
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
co.notix.bb: boolean equals(java.lang.Object)
co.notix.so: co.notix.ed b()
androidx.work.ListenableWorker: int getRunAttemptCount()
co.notix.interstitial.InterstitialLoader: void doOnNextAvailable(kotlin.jvm.functions.Function1,long)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.google.firebase.perf.session.SessionManager: void updatePerfSession(com.google.firebase.perf.session.PerfSession)
co.notix.bc: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.perf.metrics.Trace: void start()
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
co.notix.b2: java.lang.Object invoke(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
co.notix.p3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.work.impl.background.systemalarm.RescheduleReceiver: RescheduleReceiver()
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
co.notix.mn: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.cp: java.lang.String toString()
androidx.privacysandbox.ads.adservices.internal.AdServicesInfo$Extensions30Impl: int getAdServicesVersion()
com.google.firebase.storage.StorageMetadata: StorageMetadata()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
com.google.firebase.perf.v1.GaugeMetadata$Builder: GaugeMetadata$Builder()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
co.notix.startup.NotixInitializer: NotixInitializer()
co.notix.pf: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object)
co.notix.yi: java.lang.Object a(co.notix.m8,org.json.JSONObject,kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$GeneralMetrics: java.lang.String toString()
androidx.window.layout.DisplayCompatHelperApi28: int safeInsetBottom(android.view.DisplayCutout)
co.notix.dg: dg(co.notix.iq,co.notix.x8,co.notix.zf,co.notix.gb,kotlinx.coroutines.CoroutineScope,co.notix.ph,co.notix.ra)
androidx.work.ListenableWorker$Result$Success: ListenableWorker$Result$Success()
co.notix.p: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.cc: cc(co.notix.lsi.LockScreenInterstitialActivity)
co.notix.e9: e9()
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
co.notix.zj: java.lang.Object invoke(java.lang.Object)
co.notix.z7: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.s1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumHeight(android.view.View)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
co.notix.cg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
com.google.firebase.database.core.operation.OperationSource$Source: com.google.firebase.database.core.operation.OperationSource$Source valueOf(java.lang.String)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
co.notix.interstitial.InterstitialActivity: InterstitialActivity()
co.notix.l6: void onAnimationEnd(android.view.animation.Animation)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
co.notix.interstitial.WebViewInterstitialActivity: void f()
co.notix.f7: f7(co.notix.d7,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
co.notix.banner.NotixBannerView: void disposeLoader()
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
co.notix.gn: java.lang.Object a(java.util.Set,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPairRule: androidx.window.embedding.SplitPairRule plus$window_release(androidx.window.embedding.SplitPairFilter)
co.notix.mi: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ee: ee(co.notix.x8,kotlinx.coroutines.CoroutineScope)
co.notix.wp: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.window.layout.WindowMetricsCalculator$-CC: void reset()
co.notix.gp: gp(co.notix.hp,co.notix.zp,kotlin.coroutines.Continuation)
co.notix.yn: yn(int,co.notix.xn)
androidx.window.embedding.SplitController: void setStaticSplitRules(java.util.Set)
com.google.protobuf.FieldType: com.google.protobuf.FieldType valueOf(java.lang.String)
co.notix.k6: void a(android.view.View)
androidx.window.core.Bounds: int getHeight()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
co.notix.banner.NotixBannerLoader: void doOnNextAvailable(kotlin.jvm.functions.Function1)
androidx.room.RoomDatabase$JournalMode: androidx.room.RoomDatabase$JournalMode valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
co.notix.hm: java.lang.Object invoke(java.lang.Object)
co.notix.b2: b2(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
kotlin.jvm.internal.FunctionReference: boolean isInline()
com.google.android.gms.internal.measurement.zzgb$zza: zzgb$zza()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType[] values()
androidx.datastore.preferences.protobuf.AbstractMessageLite: AbstractMessageLite()
co.notix.m1: m1(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.pm: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$FcmTokenReceived: NotixCallback$FcmTokenReceived(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.bi: bi(co.notix.pi,kotlin.coroutines.Continuation)
androidx.window.layout.SidecarCompat$Companion: androidx.window.core.Version getSidecarVersion()
co.notix.fe: fe()
androidx.window.embedding.SplitRule: int getMinWidth()
com.google.android.datatransport.runtime.SendRequest: SendRequest()
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
androidx.window.layout.SidecarWindowBackend$ExtensionListenerImpl: SidecarWindowBackend$ExtensionListenerImpl(androidx.window.layout.SidecarWindowBackend)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
co.notix.b: b(co.notix.x8,kotlinx.coroutines.CoroutineScope)
io.flutter.view.TextureRegistry$SurfaceProducer: void setSize(int,int)
co.notix.nn: nn(co.notix.x8,co.notix.iq,co.notix.o5)
androidx.window.core.Version: Version(int,int,int,java.lang.String,kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.pi: java.lang.Object a(java.lang.String,kotlin.coroutines.Continuation)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
co.notix.dq: java.lang.Object a(java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerSplitListenerForActivity(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
co.notix.banner.NotixBannerView: kotlinx.coroutines.flow.MutableStateFlow access$isAttachedF$p(co.notix.banner.NotixBannerView)
com.google.firebase.perf.metrics.Trace: long getLongMetric(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
co.notix.u1: u1(co.notix.jh)
co.notix.d6: java.lang.Object invoke()
co.notix.r0: java.lang.Object invoke(java.lang.Object)
co.notix.w: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.oo: java.lang.Object a(kotlin.coroutines.Continuation)
com.google.firebase.perf.FirebasePerfRegistrar: com.google.firebase.perf.FirebasePerfEarly lambda$getComponents$0(com.google.firebase.components.Qualified,com.google.firebase.components.ComponentContainer)
co.notix.lo: java.lang.String a()
co.notix.re: re(co.notix.te,co.notix.he,kotlin.coroutines.Continuation)
co.notix.yh: yh(java.lang.String,java.lang.String,int,long,org.json.JSONObject)
co.notix.cf: co.notix.appopen.AppOpenLoader createLoader(long,co.notix.domain.RequestVars,java.lang.Integer)
co.notix.push.NotificationClickHandlerActivity: void onCreate(android.os.Bundle)
co.notix.jg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.jd: jd()
co.notix.push.data.NotificationOverrides: co.notix.push.data.NotificationOverrides copy$default(co.notix.push.data.NotificationOverrides,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,int,java.lang.Object)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.google.firebase.messaging.FirebaseMessagingService: void passMessageIntentToSdk(android.content.Intent)
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: long lseek(java.io.FileDescriptor,long,int)
co.notix.q9: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.coroutines.jvm.internal.ContinuationImpl: kotlin.coroutines.Continuation intercepted()
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
co.notix.fb: co.notix.fb valueOf(java.lang.String)
co.notix.gp: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
co.notix.v3: java.lang.Object a(java.util.List,kotlin.coroutines.Continuation)
com.google.firebase.perf.FirebasePerfKtxRegistrar: FirebasePerfKtxRegistrar()
co.notix.sh: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.z7: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.e8: e8(co.notix.f8,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
com.google.firebase.perf.config.RemoteConfigManager: void setFirebaseRemoteConfigProvider(com.google.firebase.inject.Provider)
co.notix.tn: co.notix.tn valueOf(java.lang.String)
co.notix.ap: boolean equals(java.lang.Object)
co.notix.wm: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
co.notix.o: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.google.firebase.messaging.EnhancedIntentService: android.content.Intent getStartCommandIntent(android.content.Intent)
co.notix.z6: z6(co.notix.appopen.AppOpenActivity,kotlin.coroutines.Continuation)
co.notix.ve: java.lang.Object invoke()
co.notix.tg: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.FunctionReference: boolean isSuspend()
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
androidx.window.layout.SidecarWindowBackend$Companion: SidecarWindowBackend$Companion()
io.flutter.view.TextureRegistry$ImageTextureEntry: void release()
co.notix.an: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
co.notix.callback.NotixCallback$RefreshData: NotixCallback$RefreshData(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.gh: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
co.notix.s3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
co.notix.uh: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.internal.measurement.zzft$zzj$zza: zzft$zzj$zza()
co.notix.pa: pa(co.notix.ra,long,kotlin.coroutines.Continuation)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
co.notix.push.data.NotificationOverrides: java.lang.Boolean component8()
co.notix.push.NotixNotificationModifier: co.notix.push.data.NotificationOverrides modify(android.content.Context,co.notix.push.data.NotificationOverrides)
co.notix.oc: java.lang.Object invoke(java.lang.Object)
co.notix.l0: l0(co.notix.wb)
co.notix.sb: sb(co.notix.j3)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
co.notix.ae: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.perf.session.gauges.GaugeManager: void collectGaugeMetricOnce(com.google.firebase.perf.util.Timer)
co.notix.el: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
co.notix.ke: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.ri: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.y5: java.lang.Object invoke()
co.notix.a8: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateIntentPredicates(java.util.Set)
co.notix.vn: vn(long)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setContentDescription(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
com.google.firebase.database.core.EventRegistration: EventRegistration()
co.notix.h8: java.lang.Object a(java.lang.Object)
co.notix.tl: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
co.notix.Notix$Companion: void setLogLevel(co.notix.log.LogLevel)
co.notix.we: boolean b()
co.notix.se: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.k3: k3(co.notix.m4,kotlinx.coroutines.CoroutineScope,co.notix.gb,co.notix.ee,co.notix.b,co.notix.d8)
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
co.notix.Notix$Companion: java.lang.String getVersion()
com.google.common.collect.Ordering: Ordering()
androidx.core.widget.NestedScrollView: int getScrollRange()
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
co.notix.vp: vp(co.notix.xp,kotlin.coroutines.Continuation)
co.notix.e2: e2(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
com.google.firebase.perf.metrics.AppStartTrace: void onAppEnteredBackground()
co.notix.ak: ak(co.notix.jh)
co.notix.interstitial.WebViewInterstitialActivity: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.appopen.AppOpenLoader: java.lang.Object awaitNext(long,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzih: zzih()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
co.notix.banner.NotixBannerView: kotlinx.coroutines.flow.MutableStateFlow access$getContentLoadedF$p(co.notix.banner.NotixBannerView)
androidx.window.embedding.EmbeddingCompat$Companion: EmbeddingCompat$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.wq: java.lang.Object a(co.notix.yn,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
co.notix.interstitial.InterstitialActivity: void a(java.lang.String)
co.notix.p1: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.i3: boolean hasNext()
com.google.protobuf.LongArrayList: LongArrayList()
co.notix.bg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.notix_inapp_flutter.R$string: R$string()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.google.firebase.database.snapshot.LeafNode$LeafType: com.google.firebase.database.snapshot.LeafNode$LeafType[] values()
androidx.window.embedding.SplitController: void unregisterRule(androidx.window.embedding.EmbeddingRule)
androidx.window.embedding.SplitInfo: boolean equals(java.lang.Object)
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
co.notix.w4: java.lang.Object invoke(java.lang.Object)
co.notix.interstitial.InterstitialLoader$DefaultImpls: java.lang.Object awaitNext$default(co.notix.interstitial.InterstitialLoader,long,kotlin.coroutines.Continuation,int,java.lang.Object)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.ExtensionEmbeddingBackend access$getGlobalInstance$cp()
co.notix.x: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzdi)
co.notix.appopen.NotixAppOpen$Companion: void doOnApplicationOpen(kotlin.jvm.functions.Function1,long)
co.notix.mc: mc(co.notix.jh)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: androidx.window.layout.WindowLayoutInfo translate$window_release(android.app.Activity,androidx.window.extensions.layout.WindowLayoutInfo)
androidx.datastore.preferences.PreferencesProto$Value: PreferencesProto$Value()
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
co.notix.r4: r4(co.notix.p4,java.lang.String,long,java.lang.String,co.notix.o)
co.notix.perseverance.worker.PerseveranceWorker: java.lang.Object a(kotlin.coroutines.Continuation)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
co.notix.banner.BannerSize$Inline: BannerSize$Inline(int,int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
co.notix.notix_inapp_flutter.R$integer: R$integer()
co.notix.z: z(co.notix.jh)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzdi)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
co.notix.appopen.NotixAppOpen: void show(co.notix.appopen.AppOpenData,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
co.notix.if: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
co.notix.lsi.NotixLockScreenInterstitialAd: void setCallbacks(co.notix.lsi.LockScreenInterstitialCallback)
androidx.window.layout.FoldingFeature$OcclusionType: java.lang.String toString()
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
co.notix.yk: java.lang.Object a(java.lang.Object)
io.flutter.view.TextureRegistry$SurfaceProducer: int getHeight()
co.notix.u5: u5(co.notix.w5)
androidx.window.core.Bounds: int getBottom()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: void setLastInfo(java.util.List)
co.notix.dp: dp(co.notix.f9,co.notix.cp,co.notix.ap,co.notix.xo)
com.google.android.datatransport.cct.internal.AndroidClientInfo: AndroidClientInfo()
co.notix.ke: ke(kotlin.coroutines.Continuation,co.notix.push.NotixNotificationModifier,co.notix.oe,co.notix.he)
androidx.window.core.Bounds: int hashCode()
co.notix.h5: h5(kotlinx.coroutines.flow.FlowCollector,co.notix.p4)
co.notix.sn: sn()
co.notix.e7: e7(co.notix.j3)
androidx.window.embedding.SplitInfo: boolean contains(android.app.Activity)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
co.notix.notix_inapp_flutter.R$dimen: R$dimen()
co.notix.ge: ge()
co.notix.wo: wo(co.notix.e9)
co.notix.i2: i2(co.notix.l2,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
co.notix.yh: java.lang.String toString()
com.google.firebase.database.core.RepoInfo: RepoInfo()
co.notix.banner.BannerRequest: java.lang.String toString()
co.notix.w5: w5(android.content.Context,android.util.AttributeSet,int)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: java.lang.Object invoke(java.lang.Object)
com.google.firebase.perf.metrics.Trace: void stop()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept$lambda-0(androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper,androidx.window.layout.WindowLayoutInfo)
androidx.window.core.Version$Companion: androidx.window.core.Version getVERSION_1_0()
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
co.notix.banner.NotixBannerView: void onMeasure(int,int)
co.notix.r5: r5(co.notix.w5)
androidx.window.layout.WindowInfoTracker$-CC: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
co.notix.e1: java.lang.Object invoke(java.lang.Object)
co.notix.ob: ob()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
com.google.firebase.database.core.Repo$TransactionStatus: com.google.firebase.database.core.Repo$TransactionStatus[] values()
androidx.window.layout.SidecarWindowBackend: boolean isActivityRegistered(android.app.Activity)
co.notix.s6: java.lang.Object invoke()
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
co.notix.li: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.q8: boolean equals(java.lang.Object)
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
co.notix.native.NativeLoader: void doOnNextAvailable(kotlin.jvm.functions.Function1,long)
co.notix.ii: java.lang.Object invoke(java.lang.Object)
androidx.work.NetworkType: androidx.work.NetworkType valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzdi,int)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDeviceState(androidx.window.sidecar.SidecarDeviceState,androidx.window.sidecar.SidecarDeviceState)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
co.notix.callback.NotixCallback$Impression: int hashCode()
co.notix.xe: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.ol: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.bd: bd(co.notix.rg)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
co.notix.hq: co.notix.iq F()
co.notix.lb: lb(java.lang.ref.WeakReference)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.util.Optional getLong(java.lang.String)
co.notix.l5: java.lang.Object invoke(java.lang.Object)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
co.notix.f7: boolean equals(java.lang.Object)
co.notix.zo: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
co.notix.lsi.LockScreenInterstitialCallback: void onAdClicked()
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void notixInterstitialLoaderNext(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
co.notix.nl: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.id: id(long,java.lang.String,java.lang.String,java.lang.String)
androidx.collection.LongSparseArray: LongSparseArray()
com.google.android.gms.internal.measurement.zzft$zzk$zza: zzft$zzk$zza()
co.notix.ei: ei(co.notix.wb)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: java.lang.StackTraceElement getStackTraceElement()
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
co.notix.a: a(co.notix.b,kotlin.coroutines.Continuation)
co.notix.uc: void b(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityIntentPredicates(java.util.Set)
co.notix.interstitial.NotixInterstitial: void show(co.notix.interstitial.InterstitialData,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
com.google.firebase.perf.logging.AndroidLogger: AndroidLogger()
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.window.embedding.ActivityRule: boolean equals(java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: int getPaddingEnd(android.view.View)
com.google.firebase.perf.v1.AndroidApplicationInfo$Builder: AndroidApplicationInfo$Builder()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzdi)
co.notix.y1: y1(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.interstitial.InterstitialButton: co.notix.interstitial.InterstitialButton copy(java.lang.String)
com.google.firebase.perf.session.gauges.GaugeManager: long startCollectingGauges(com.google.firebase.perf.v1.ApplicationProcessState,com.google.firebase.perf.util.Timer)
com.google.firebase.perf.v1.NetworkRequestMetric: NetworkRequestMetric()
co.notix.yf: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.datastore.preferences.protobuf.LongArrayList: LongArrayList()
androidx.window.embedding.SplitInfo: SplitInfo(androidx.window.embedding.ActivityStack,androidx.window.embedding.ActivityStack,float)
co.notix.dh: dh(co.notix.gh,kotlin.coroutines.Continuation)
co.notix.pq: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.sh: sh(co.notix.periodicworker.PeriodicWorker,kotlin.coroutines.Continuation)
androidx.window.core.Bounds: boolean isZero()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void waitOnFence(android.media.Image)
androidx.window.embedding.SplitInfo: androidx.window.embedding.ActivityStack getSecondaryActivityStack()
co.notix.g6: g6(co.notix.k6)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
co.notix.push.data.NotificationOverrides: java.lang.Boolean getShowOnlyLastNotification()
co.notix.hq: co.notix.r8 e()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
co.notix.callback.NotixCallback$RefreshData: boolean equals(java.lang.Object)
androidx.window.layout.WindowMetrics: int hashCode()
co.notix.mg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.q7: q7(kotlinx.coroutines.flow.FlowCollector)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
androidx.window.layout.WindowBackend: void unregisterLayoutChangeCallback(androidx.core.util.Consumer)
co.notix.a6: java.lang.Object invoke()
co.notix.bp: int hashCode()
com.google.firebase.perf.config.RemoteConfigManager: long getCurrentSystemTimeMillis()
co.notix.j0: j0(co.notix.jh)
com.google.firebase.perf.network.FirebasePerfHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.HttpClient,org.apache.http.HttpHost,org.apache.http.HttpRequest)
co.notix.ba: ba(co.notix.ea,kotlin.coroutines.Continuation)
co.notix.zk: zk(co.notix.dj)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
co.notix.hq: co.notix.oe m()
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
co.notix.lf: lf(co.notix.mf,kotlin.coroutines.Continuation)
co.notix.f9: f9(java.lang.String,java.lang.String,java.lang.String)
co.notix.ya: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
co.notix.callback.NotixCallback$Subscription: NotixCallback$Subscription(co.notix.callback.NotixCallbackStatus,java.lang.String)
androidx.datastore.preferences.protobuf.FieldSet: FieldSet()
co.notix.w5: android.widget.TextView getTvTitle()
androidx.appcompat.widget.SearchView: int getImeOptions()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
co.notix.w4: w4(co.notix.u4)
androidx.window.core.Bounds: int getLeft()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory valueOf(java.lang.String)
co.notix.v7: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
co.notix.bg: bg(co.notix.push.firebase.NotixFirebaseMessagingService,java.lang.String,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatCheckBox: int getCompoundPaddingLeft()
co.notix.xp: java.lang.Object f(kotlin.coroutines.Continuation)
co.notix.hl: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getHINGE$cp()
co.notix.d6: d6(co.notix.k6)
co.notix.appopen.AppOpenLoader: void stopLoading()
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
androidx.work.ListenableWorker: java.util.List getTriggeredContentAuthorities()
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
co.notix.w6: w6(co.notix.appopen.AppOpenActivity,kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$RefreshData: java.lang.String getData()
co.notix.i3: void startLoading()
co.notix.banner.NotixBannerView: void onAttachedToWindow()
co.notix.c6: void a(java.util.List)
co.notix.wl: java.lang.Object d(kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzdg: com.google.android.gms.internal.measurement.zzdd asInterface(android.os.IBinder)
co.notix.ra: ra(co.notix.iq,kotlinx.coroutines.CoroutineScope,co.notix.x8)
co.notix.mb: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.qb: qb()
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
co.notix.le: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
kotlin.jvm.internal.FunctionReference: kotlin.reflect.KCallable computeReflected()
co.notix.nb: nb()
androidx.core.util.ObjectsCompat$Api19Impl: boolean equals(java.lang.Object,java.lang.Object)
io.flutter.plugins.imagepicker.Messages$CacheRetrievalType: io.flutter.plugins.imagepicker.Messages$CacheRetrievalType valueOf(java.lang.String)
androidx.appcompat.widget.SearchView: int getMaxWidth()
co.notix.ga: ga(java.lang.Throwable)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
co.notix.jc: jc(co.notix.jh)
co.notix.nb: void a(android.view.View)
co.notix.t2: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.id: boolean equals(java.lang.Object)
co.notix.xp: java.lang.Object e(kotlin.coroutines.Continuation)
co.notix.banner.NotixBannerView: int calculateStickyHeightDp(co.notix.banner.BannerSize$Sticky)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
co.notix.n1: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void notixInterstitialShow(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
co.notix.m: m(java.lang.String,java.lang.String,java.lang.String)
co.notix.sc: sc(co.notix.lsi.LockScreenInterstitialWorker,kotlin.coroutines.Continuation)
co.notix.bm: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.push.data.NotificationOverrides: java.lang.String component2()
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
co.notix.zp: boolean equals(java.lang.Object)
co.notix.banner.BannerRequest: co.notix.banner.BannerSize getSize()
co.notix.Notix$Companion: void setUserAgent(java.lang.String)
co.notix.bo: boolean equals(java.lang.Object)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType[] values()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int)
co.notix.x8: android.content.Context a()
co.notix.mq: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.view.TextureRegistry$GLTextureConsumer: android.graphics.SurfaceTexture getSurfaceTexture()
co.notix.callback.NotixCallback$RefreshData: co.notix.callback.NotixCallback$RefreshData copy$default(co.notix.callback.NotixCallback$RefreshData,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
androidx.window.core.Version$bigInteger$2: java.math.BigInteger invoke()
androidx.window.embedding.ExtensionEmbeddingBackend: void unregisterSplitListenerForActivity(androidx.core.util.Consumer)
co.notix.uh: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: GeneratedAndroidFirebaseCore$PigeonInitializeResponse()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
co.notix.callback.NotixCallback$Unsubscription: java.lang.String getData()
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
co.notix.eg: void show(co.notix.interstitial.InterstitialData,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.work.CoroutineWorker: kotlinx.coroutines.CompletableJob getJob$work_runtime_ktx_release()
androidx.core.view.ViewCompat$Api17Impl: int generateViewId()
androidx.core.view.ViewCompat$Api16Impl: void postOnAnimation(android.view.View,java.lang.Runnable)
com.google.firebase.perf.config.RemoteConfigManager: RemoteConfigManager(com.google.firebase.perf.config.DeviceCacheManager,java.util.concurrent.Executor,com.google.firebase.remoteconfig.FirebaseRemoteConfig,long,long)
co.notix.ca: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
co.notix.e8: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.mn: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
co.notix.l2: java.lang.Object a(co.notix.pq,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
kotlin.jvm.internal.Intrinsics: Intrinsics()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
androidx.window.layout.ExtensionInterfaceCompat: void onWindowLayoutChangeListenerRemoved(android.app.Activity)
androidx.window.embedding.ExtensionEmbeddingBackend: androidx.window.embedding.EmbeddingInterfaceCompat getEmbeddingExtension()
co.notix.lc: lc(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.ug: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.dn: java.lang.Object invoke(java.lang.Object)
co.notix.interstitial.NotixInterstitial: void show(co.notix.interstitial.InterstitialData,co.notix.interstitial.InterstitialButton,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
co.notix.Notix: void setUserAgent(java.lang.String)
co.notix.a4: a4(kotlinx.coroutines.flow.Flow,co.notix.d4,kotlin.coroutines.Continuation)
co.notix.gk: gk(kotlinx.coroutines.CoroutineScope,co.notix.iq,co.notix.wb,co.notix.hj,co.notix.l2,co.notix.zf)
co.notix.f2: f2(co.notix.l2,kotlin.coroutines.Continuation)
com.google.firebase.perf.metrics.Trace: void putMetric(java.lang.String,long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle createBigTextStyle(android.app.Notification$Builder)
co.notix.n9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.measurement.zzfn$zzh: zzfn$zzh()
co.notix.o1: java.lang.Object invoke(java.lang.Object)
co.notix.cm: cm(co.notix.wb)
com.google.android.datatransport.ProductData: ProductData()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
co.notix.bb: java.lang.String toString()
co.notix.np: np(co.notix.xp,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonSettableMetadata: GeneratedAndroidFirebaseStorage$PigeonSettableMetadata()
co.notix.i5: i5(kotlinx.coroutines.flow.Flow,co.notix.p4)
co.notix.Notix: void setCallbackHandler(co.notix.callback.NotixCallbackHandler)
co.notix.callback.NotixCallback$RefreshData: co.notix.callback.NotixCallback$RefreshData copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.native.NativeLoader: void stopLoading()
co.notix.rg: rg(co.notix.va,co.notix.iq,co.notix.x8,co.notix.nn,co.notix.fq,co.notix.gq)
co.notix.v3: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
co.notix.perseverance.worker.PerseveranceWorker: java.lang.Object a(co.notix.perseverance.worker.PerseveranceWorker,kotlin.coroutines.Continuation)
co.notix.f1: f1(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.b4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
co.notix.i0: java.lang.Object invoke(java.lang.Object)
co.notix.wd: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
co.notix.w5: void a(co.notix.i,kotlin.jvm.functions.Function0,android.view.View)
co.notix.gj: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.q7: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: void accept(java.util.List)
com.google.protobuf.DoubleArrayList: DoubleArrayList()
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
com.google.firebase.perf.application.AppStateUpdateHandler: void registerForAppState()
co.notix.ge: java.lang.Object a(java.lang.Object)
co.notix.re: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowCompat$Api16Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
co.notix.callback.NotixCallback$AppInstall: int hashCode()
co.notix.w6: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
com.google.android.gms.internal.measurement.zzfn$zza$zze: com.google.android.gms.internal.measurement.zzfn$zza$zze[] values()
co.notix.wl: java.lang.Object a(co.notix.bl,kotlin.coroutines.Continuation)
co.notix.d8: d8(co.notix.x8,kotlinx.coroutines.CoroutineScope)
co.notix.m: boolean equals(java.lang.Object)
com.google.firebase.StartupTime: StartupTime()
androidx.core.widget.TextViewCompat$Api17Impl: java.util.Locale getTextLocale(android.widget.TextView)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setUsage(android.media.AudioAttributes$Builder,int)
com.google.firebase.perf.v1.PerfSession$Builder: PerfSession$Builder()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.datastore.preferences.protobuf.GeneratedMessageLite: GeneratedMessageLite()
com.google.android.gms.signin.internal.zaa: zaa()
co.notix.xe: xe(kotlin.coroutines.Continuation)
co.notix.c2: c2(co.notix.jh)
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroups(android.app.NotificationManager,java.util.List)
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
androidx.window.embedding.EmbeddingCompat: void setSplitRules(java.util.Set)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.HardwareFoldingFeature$Type getType$window_release()
co.notix.eg: void show(co.notix.interstitial.InterstitialData,co.notix.interstitial.InterstitialButton,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
co.notix.ae: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
co.notix.x8: void a(android.content.Context)
co.notix.xp: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.ia: int hashCode()
kotlin.jvm.internal.CallableReference: java.util.List getParameters()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void addWindowLayoutInfoListener(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.room.RoomDatabase$Callback: RoomDatabase$Callback()
co.notix.of: of(co.notix.banner.NotixBannerView,kotlin.coroutines.Continuation)
com.google.firebase.messaging.FirebaseMessagingService: void handleIntent(android.content.Intent)
androidx.work.ArrayCreatingInputMerger: ArrayCreatingInputMerger()
co.notix.oo: java.lang.Object a(co.notix.o8,co.notix.xi)
androidx.appcompat.widget.ButtonBarLayout: int getMinimumHeight()
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
com.google.android.gms.internal.measurement.zzft$zzc: zzft$zzc()
androidx.window.embedding.SplitPairFilter: java.lang.String getSecondaryActivityIntentAction()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
co.notix.k9: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ug: ug(co.notix.jh,co.notix.vg,java.lang.Object,kotlin.coroutines.Continuation)
co.notix.n3: n3(kotlinx.coroutines.flow.Flow)
co.notix.yg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
co.notix.yf: yf(kotlin.coroutines.Continuation,co.notix.zf,co.notix.callback.NotixCallback)
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.google.firebase.sessions.DataCollectionState: com.google.firebase.sessions.DataCollectionState valueOf(java.lang.String)
androidx.work.ListenableWorker: java.util.concurrent.Executor getBackgroundExecutor()
co.notix.banner.NotixBannerView: void loadOnce()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: boolean isExtensionVersionSupported(java.lang.Integer)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,org.apache.http.protocol.HttpContext)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KType getReturnType()
com.google.protobuf.IntArrayList: IntArrayList()
co.notix.wj: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.FunctionReference: FunctionReference(int)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPredicates(java.util.Set)
co.notix.i3: co.notix.native.NativeData getNext()
co.notix.u0: u0(co.notix.jh)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
co.notix.y3: y3(co.notix.d4,kotlin.coroutines.Continuation)
co.notix.m1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
androidx.window.embedding.EmbeddingBackend: void unregisterRule(androidx.window.embedding.EmbeddingRule)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
co.notix.we: we(co.notix.x8)
co.notix.t1: java.lang.Object invoke(java.lang.Object)
androidx.work.impl.workers.DiagnosticsWorker: DiagnosticsWorker(android.content.Context,androidx.work.WorkerParameters)
co.notix.y7: y7(co.notix.d8)
androidx.datastore.core.State: State()
okio.Buffer: Buffer()
com.google.firebase.perf.v1.GaugeMetric$Builder: GaugeMetric$Builder()
co.notix.wf: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
co.notix.l4: java.lang.Object invokeSuspend(java.lang.Object)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
co.notix.q3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.content.FileProvider: FileProvider()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
androidx.datastore.preferences.PreferencesProto$PreferenceMap: PreferencesProto$PreferenceMap()
co.notix.v1: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.SidecarCompat: void unregisterComponentCallback(android.app.Activity)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageFirebaseApp: GeneratedAndroidFirebaseStorage$PigeonStorageFirebaseApp()
androidx.work.OverwritingInputMerger: OverwritingInputMerger()
com.google.firebase.messaging.FirebaseMessagingService: void dispatchMessage(android.content.Intent)
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
co.notix.gq: java.lang.Object invoke(java.lang.Object)
androidx.lifecycle.MutableLiveData: MutableLiveData()
com.google.firebase.remoteconfig.RemoteConfigRegistrar: java.util.List getComponents()
co.notix.gq: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitController: void registerRule(androidx.window.embedding.EmbeddingRule)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
co.notix.ng: ng(kotlinx.coroutines.CoroutineScope,co.notix.iq,co.notix.we,co.notix.x8,co.notix.j7,co.notix.pe,co.notix.qq,co.notix.gb,co.notix.ea,co.notix.vk,co.notix.kk,co.notix.xp)
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.window.layout.WindowInfoTracker$Companion: void reset()
co.notix.xj: xj(co.notix.jh)
co.notix.c9: boolean equals(java.lang.Object)
co.notix.n9: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
co.notix.lsi.NotixLockScreenInterstitialAd: void cancel()
co.notix.callback.NotixCallback$AppInstall: co.notix.callback.NotixCallback$AppInstall copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
co.notix.nb: void b()
co.notix.j8: co.notix.n8 c()
co.notix.push.pull.PullWorker: co.notix.lo a()
co.notix.kh: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.hp: hp(co.notix.rg,co.notix.wb)
co.notix.t2: t2(co.notix.u2,java.lang.String,co.notix.r4,kotlin.coroutines.Continuation)
co.notix.native.NotixNative$Companion: void trackImpression(co.notix.native.NativeData)
co.notix.banner.NotixBannerView: co.notix.banner.NotixBannerLoader access$getLoader$p(co.notix.banner.NotixBannerView)
co.notix.vk: java.lang.Object a(java.lang.String,kotlin.coroutines.Continuation)
androidx.fragment.app.FragmentManagerImpl: FragmentManagerImpl()
androidx.core.app.NotificationCompatBuilder$Api17Impl: android.app.Notification$Builder setShowWhen(android.app.Notification$Builder,boolean)
co.notix.bj: bj()
co.notix.o6: o6(co.notix.appopen.AppOpenActivity)
androidx.window.layout.WindowMetricsCalculator$Companion: WindowMetricsCalculator$Companion()
kotlin.coroutines.jvm.internal.ContinuationImpl: ContinuationImpl(kotlin.coroutines.Continuation)
androidx.work.impl.utils.futures.AbstractFuture$Waiter: AbstractFuture$Waiter()
com.google.android.gms.internal.measurement.zzgb$zzb: zzgb$zzb()
co.notix.mm: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getHINGE()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.jvm.internal.CoroutineStackFrame getCallerFrame()
com.google.android.gms.internal.measurement.zzft$zzi$zza: com.google.android.gms.internal.measurement.zzft$zzi$zza[] values()
com.google.android.gms.internal.measurement.zzfn$zzf: zzfn$zzf()
androidx.window.layout.ExtensionsWindowLayoutInfoAdapter: ExtensionsWindowLayoutInfoAdapter()
co.notix.x4: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
co.notix.h9: java.lang.Object invoke(java.lang.Object)
co.notix.m: java.lang.String toString()
co.notix.dj: dj()
io.flutter.plugins.imagepicker.Messages$ImageSelectionOptions: Messages$ImageSelectionOptions()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
com.google.protobuf.LazyFieldLite: LazyFieldLite()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
co.notix.xj: java.lang.Object invoke(java.lang.Object)
co.notix.pp: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void notixInterstitialLoaderStopLoading(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
co.notix.c5: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzfh$zzc: zzfh$zzc()
androidx.core.view.ViewCompat$Api17Impl: int getPaddingStart(android.view.View)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
co.notix.k7: boolean equals(java.lang.Object)
androidx.window.layout.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
co.notix.notix_inapp_flutter.Refs: java.lang.Object get(java.lang.String)
co.notix.z5: java.lang.Object invoke()
co.notix.xp: xp(co.notix.hp,co.notix.oh,co.notix.iq)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void accept(androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
co.notix.w0: w0(co.notix.ta)
co.notix.callback.NotixCallback$PushDataLoad: java.lang.String getData()
co.notix.hk: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
co.notix.push.data.NotificationOverrides: java.lang.String component3()
co.notix.x3: x3(co.notix.d4)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
co.notix.t0: t0(co.notix.rq)
co.notix.callback.NotixCallback$PushDataLoad: co.notix.callback.NotixCallbackStatus getStatus()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
co.notix.domain.RequestVars: java.lang.String toString()
co.notix.log.LogLevel: LogLevel(java.lang.String,int)
co.notix.wa: int hashCode()
co.notix.ad: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
co.notix.x7: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.mg: mg(co.notix.ng,java.lang.String,java.lang.String,co.notix.domain.RequestVars,kotlin.coroutines.Continuation)
androidx.window.layout.WindowInfoTracker$Companion: void overrideDecorator(androidx.window.layout.WindowInfoTrackerDecorator)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: android.app.Notification$BigPictureStyle createBigPictureStyle(android.app.Notification$Builder)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.firebase.perf.v1.AndroidMemoryReading: AndroidMemoryReading()
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
co.notix.ch: ch(co.notix.gh,kotlin.coroutines.Continuation)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
co.notix.ad: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
co.notix.banner.BannerRequest: long getZoneId()
co.notix.ho: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
co.notix.d4: java.lang.Object a(co.notix.d4,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
co.notix.d0: java.lang.Object invoke(java.lang.Object)
com.google.firebase.remoteconfig.RemoteConfigRegistrar: RemoteConfigRegistrar()
androidx.core.widget.TextViewCompat$Api17Impl: void setTextDirection(android.view.View,int)
co.notix.push.data.NotificationOverrides: java.lang.String component4()
co.notix.pp: pp(co.notix.xp,kotlin.coroutines.Continuation)
co.notix.s0: s0(co.notix.wb)
co.notix.push.data.NotificationOverrides: co.notix.push.data.NotificationOverrides copy(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.gms.internal.measurement.zzmt: zzmt()
co.notix.banner.BannerRequest: co.notix.banner.BannerRequest copy$default(co.notix.banner.BannerRequest,long,co.notix.banner.BannerSize,java.lang.String,java.lang.Integer,long,int,java.lang.Object)
co.notix.pe: pe(co.notix.iq)
co.notix.appopen.AppOpenLoader: co.notix.appopen.AppOpenData getNext()
co.notix.d7: d7(co.notix.i)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(androidx.window.extensions.layout.WindowLayoutInfo)
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
co.notix.callback.NotixCallback$PushDataLoad: java.lang.String component2()
androidx.work.CoroutineWorker: java.lang.Object getForegroundInfo$suspendImpl(androidx.work.CoroutineWorker,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
co.notix.tk: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.k6: void onDestroy()
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzkn getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
co.notix.x7: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.work.ListenableWorker: void onStopped()
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: BaseContinuationImpl(kotlin.coroutines.Continuation)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.remoteconfig.FirebaseRemoteConfigValue getRemoteConfigValue(java.lang.String)
co.notix.fd: fd()
co.notix.tj: tj(co.notix.wb)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
com.google.firebase.perf.v1.NetworkRequestMetric$NetworkClientErrorReason: com.google.firebase.perf.v1.NetworkRequestMetric$NetworkClientErrorReason valueOf(java.lang.String)
com.google.firebase.perf.session.gauges.GaugeManager: long getMemoryGaugeCollectionFrequencyMs(com.google.firebase.perf.v1.ApplicationProcessState)
com.google.firebase.perf.session.gauges.GaugeManager: void syncFlush(java.lang.String,com.google.firebase.perf.v1.ApplicationProcessState)
co.notix.hf: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
co.notix.gg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitController: androidx.window.embedding.SplitController access$getGlobalInstance$cp()
co.notix.yq: yq()
co.notix.oa: java.lang.String toString()
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
co.notix.r9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.database.tubesock.WebSocket$State: com.google.firebase.database.tubesock.WebSocket$State valueOf(java.lang.String)
co.notix.p4: co.notix.domain.RequestVars b()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onImage(android.media.ImageReader,android.media.Image)
com.google.firebase.perf.session.gauges.GaugeManager: boolean startCollectingCpuMetrics(long,com.google.firebase.perf.util.Timer)
co.notix.n: n()
co.notix.jg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.firebase.storage.StorageTask: StorageTask()
co.notix.ga: java.lang.Throwable a()
co.notix.m8: co.notix.n8 c()
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
com.google.android.gms.internal.measurement.zzfn$zzd$zza: zzfn$zzd$zza()
co.notix.native.NativeLoader: co.notix.native.NativeData getNext()
co.notix.s9: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.push.data.NotificationOverrides: java.lang.Boolean getRandomGroupId()
androidx.core.content.ContextCompat$Api19Impl: java.io.File[] getExternalCacheDirs(android.content.Context)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
co.notix.native.NotixNative: co.notix.native.NativeLoader createLoader(long,java.lang.Integer)
androidx.core.view.ViewCompat$Api16Impl: boolean performAccessibilityAction(android.view.View,int,android.os.Bundle)
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
androidx.window.embedding.EmbeddingAdapter: java.util.function.Predicate translateActivityPairPredicates(java.util.Set)
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
io.flutter.view.TextureRegistry$SurfaceProducer: android.view.Surface getSurface()
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
co.notix.fh: fh(co.notix.gh,kotlin.coroutines.Continuation)
co.notix.x6: x6(co.notix.appopen.AppOpenActivity)
com.google.firebase.perf.util.StorageUnit: com.google.firebase.perf.util.StorageUnit[] values()
androidx.work.ListenableWorker: void setRunInForeground(boolean)
co.notix.wc: void a(co.notix.vc,java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1(androidx.core.util.Consumer)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
co.notix.c9: c9(long,java.lang.Object,boolean)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
co.notix.cd: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
co.notix.qp: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.em: em(co.notix.jh)
androidx.window.layout.SidecarAdapter$Companion: androidx.window.layout.DisplayFeature translate$window_release(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDeviceState)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
co.notix.nl: nl(co.notix.wl,kotlin.coroutines.Continuation)
co.notix.ye: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.cf: co.notix.e7 a(long,co.notix.domain.RequestVars,java.lang.Integer)
co.notix.c7: java.lang.Object invoke()
co.notix.xn: xn()
co.notix.y2: java.lang.String a(co.notix.e3)
co.notix.hc: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.mq: mq(co.notix.nq,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
co.notix.lc: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.mf: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.k5: k5(co.notix.n5,kotlin.coroutines.Continuation)
co.notix.ek: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ic: ic(co.notix.pc,kotlin.coroutines.Continuation)
co.notix.o1: o1(co.notix.jh)
co.notix.callback.NotixCallback$Subscription: co.notix.callback.NotixCallbackStatus getStatus()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
co.notix.domain.RequestVars: java.lang.String component3()
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
co.notix.yj: java.lang.Object invoke(java.lang.Object)
co.notix.pg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.g6: java.lang.Object invoke()
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialShow$1$2: NotixInappFlutterPlugin$notixInterstitialShow$1$2(co.notix.notix_inapp_flutter.NotixInappFlutterPlugin)
co.notix.ig: void click(co.notix.native.NativeData)
co.notix.ee: void a(co.notix.ee)
co.notix.d1: java.lang.Object invoke(java.lang.Object)
co.notix.push.NotixPush: void init(android.content.Context,java.lang.String,java.lang.String,co.notix.domain.RequestVars)
co.notix.cf: void stopAutoShow()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
co.notix.push.data.NotificationOverrides: int hashCode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
co.notix.t6: java.lang.Object invoke()
co.notix.d8: java.lang.Object a(java.lang.String,co.notix.yn,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitRule: float getSplitRatio()
androidx.window.layout.SidecarCompat$registerConfigurationChangeListener$configChangeObserver$1: void onLowMemory()
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.core.view.accessibility.AccessibilityRecordCompat$Api15Impl: int getMaxScrollX(android.view.accessibility.AccessibilityRecord)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
co.notix.nn: java.lang.Object a(java.lang.String,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
co.notix.rd: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzdi,long)
androidx.appcompat.widget.SearchView: int getInputType()
com.google.protobuf.FieldSet: FieldSet()
co.notix.ai: ai(co.notix.yh)
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
co.notix.i8: i8()
co.notix.wl: java.lang.Object f(kotlin.coroutines.Continuation)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: WindowInfoTrackerCallbackAdapter$addListener$1$1(kotlinx.coroutines.flow.Flow,androidx.core.util.Consumer,kotlin.coroutines.Continuation)
com.google.android.datatransport.runtime.backends.CreationContext: CreationContext()
androidx.window.embedding.ExtensionEmbeddingBackend: void getSplitChangeCallbacks$annotations()
co.notix.tn: co.notix.tn[] values()
co.notix.hq: co.notix.wl C()
co.notix.x2: x2()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void disableFenceForTest()
co.notix.domain.RequestVars: java.lang.String getVar5()
co.notix.push.firebase.NotixFirebaseMessagingService: void onNewToken(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.google.firebase.perf.v1.TraceMetric$Builder: TraceMetric$Builder()
co.notix.dl: dl(java.lang.String,co.notix.fl,kotlin.coroutines.Continuation)
co.notix.c1: java.lang.Object invoke(java.lang.Object)
co.notix.cf: co.notix.appopen.AppOpenLoader createLoader(long)
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
co.notix.hq: co.notix.gf r()
androidx.work.CoroutineWorker: CoroutineWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.fragment.app.FragmentTransition$FragmentContainerTransition: FragmentTransition$FragmentContainerTransition()
com.google.android.gms.internal.measurement.zzfh$zze: zzfh$zze()
co.notix.v9: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.domain.RequestVars: void setVar2(java.lang.String)
androidx.window.embedding.SplitRule: SplitRule()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
co.notix.w8: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.t3: t3(kotlin.coroutines.Continuation)
co.notix.bq: int hashCode()
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
co.notix.cl: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.p4: java.lang.Integer a()
co.notix.we: boolean c()
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
co.notix.zc: zc()
co.notix.native.NativeLoader$DefaultImpls: java.lang.Object awaitNext$default(co.notix.native.NativeLoader,long,kotlin.coroutines.Continuation,int,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
co.notix.s: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.jk: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.ka: ka(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.lsi.NotixLockScreenInterstitialAd: void schedule(long)
co.notix.ce: ce(kotlinx.coroutines.flow.FlowCollector)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
co.notix.fq: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.internal.AbstractSharedFlow: AbstractSharedFlow()
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionDatastore getComponents$lambda-4(com.google.firebase.components.ComponentContainer)
co.notix.tf: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.google.android.gms.measurement.internal.zziq$zza: com.google.android.gms.measurement.internal.zziq$zza[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.core.provider.FontProvider$Api16Impl: android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
co.notix.s1: s1(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
co.notix.z2: java.lang.String getName()
co.notix.ym: ym(co.notix.wb)
co.notix.a9: kotlinx.coroutines.CoroutineScope b()
co.notix.u6: u6(co.notix.appopen.AppOpenActivity)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
co.notix.um: java.lang.Object invoke(java.lang.Object)
co.notix.xo: int hashCode()
androidx.core.content.ContextCompat$Api16Impl: void startActivity(android.content.Context,android.content.Intent,android.os.Bundle)
co.notix.df: co.notix.f3 a(co.notix.g)
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
kotlin.jvm.internal.CallableReference: kotlin.reflect.KDeclarationContainer getOwner()
co.notix.ug: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.firebase.perf.metrics.Trace: void writeToParcel(android.os.Parcel,int)
co.notix.yo: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzaj: zzaj()
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder[] values()
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.GaugeManager getInstance()
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
co.notix.iq: iq()
co.notix.hd: hd()
kotlin.jvm.internal.CallableReference: kotlin.reflect.KCallable getReflected()
co.notix.xg: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzdj)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
co.notix.callback.NotixCallback$Unsubscription: boolean equals(java.lang.Object)
com.google.firebase.perf.metrics.Trace: void putAttribute(java.lang.String,java.lang.String)
co.notix.th: th(co.notix.periodicworker.PeriodicWorker,kotlin.coroutines.Continuation)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityFilter parseActivityFilter(android.content.Context,android.content.res.XmlResourceParser)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
co.notix.ko: ko(co.notix.lo,kotlin.coroutines.Continuation)
co.notix.hq: co.notix.d8 d()
co.notix.al: int hashCode()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.window.layout.SidecarWindowBackend: void access$setGlobalInstance$cp(androidx.window.layout.SidecarWindowBackend)
co.notix.push.data.NotificationOverrides: java.lang.Integer getImportance()
co.notix.ud: android.graphics.Bitmap getImage()
co.notix.gh: java.util.List getReplayCache()
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void addListener(androidx.core.util.Consumer)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
co.notix.na: com.google.firebase.FirebaseApp a()
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
co.notix.qc: qc(co.notix.lsi.LsiInterval,co.notix.rc,long,kotlin.coroutines.Continuation)
co.notix.l6: void onAnimationStart(android.view.animation.Animation)
co.notix.n1: n1(co.notix.jh)
com.google.firebase.messaging.FirebaseMessagingService: void resetForTesting()
co.notix.uk: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.l2: java.lang.Object c(co.notix.pq,kotlin.coroutines.Continuation)
co.notix.ud: ud(co.notix.i)
co.notix.q: q(co.notix.l2,long)
co.notix.wb: wb()
co.notix.yo: int hashCode()
androidx.core.view.ViewCompat$Api17Impl: void setLayerPaint(android.view.View,android.graphics.Paint)
com.google.android.gms.internal.measurement.zzjo: com.google.android.gms.internal.measurement.zzjo[] values()
com.google.firebase.database.DatabaseRegistrar: com.google.firebase.database.FirebaseDatabaseComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
co.notix.interstitial.WebViewInterstitialActivity: android.view.View c()
androidx.window.layout.SidecarCompat: void onWindowLayoutChangeListenerAdded(android.app.Activity)
co.notix.f: f(java.lang.String,int)
co.notix.appopen.AppOpenLoader: void doOnNextAvailable(kotlin.jvm.functions.Function1)
co.notix.oa: boolean equals(java.lang.Object)
co.notix.xh: java.lang.Object a(java.lang.Object)
com.google.firebase.perf.session.gauges.GaugeManager: void initializeGaugeMetadataManager(android.content.Context)
com.google.firebase.perf.config.RemoteConfigManager: void lambda$triggerFirebaseRemoteConfigFetchAndActivateOnSuccessfulFetch$1(java.lang.Exception)
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
co.notix.qg: qg(co.notix.rg,kotlin.coroutines.Continuation)
co.notix.ro: java.lang.Object a(java.lang.Object)
com.google.firebase.perf.v1.NetworkRequestMetric$Builder: NetworkRequestMetric$Builder()
com.google.android.gms.internal.measurement.zzja: zzja()
com.google.android.gms.internal.measurement.zzhd$zza: zzhd$zza()
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
co.notix.notix_inapp_flutter.Refs: java.lang.String add(java.lang.Object)
androidx.window.embedding.EmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
co.notix.t9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
co.notix.ul: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.qj: java.lang.Object invoke(java.lang.Object)
co.notix.callback.NotixCallback$Click: NotixCallback$Click(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.ne: ne(co.notix.oe,kotlin.coroutines.Continuation)
androidx.window.layout.HardwareFoldingFeature: int hashCode()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
co.notix.y1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.c3: java.lang.String getName()
co.notix.w: w(kotlin.coroutines.Continuation)
co.notix.ra: boolean a(co.notix.ra)
com.google.firebase.perf.metrics.AppStartTrace: void setLauncherActivityOnStartTime(java.lang.String)
co.notix.yd: void onAvailable(android.net.Network)
androidx.work.impl.background.systemalarm.ConstraintProxy$BatteryNotLowProxy: ConstraintProxy$BatteryNotLowProxy()
co.notix.lp: java.lang.Object invokeSuspend(java.lang.Object)
androidx.work.ExistingWorkPolicy: androidx.work.ExistingWorkPolicy valueOf(java.lang.String)
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] values()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
co.notix.ja: ja()
co.notix.ri: ri(co.notix.perseverance.worker.PerseveranceWorker,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
androidx.work.impl.background.systemalarm.ConstraintProxy$NetworkStateProxy: ConstraintProxy$NetworkStateProxy()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion()
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks: FragmentManager$FragmentLifecycleCallbacks()
co.notix.uq: uq(co.notix.interstitial.WebViewInterstitialActivity)
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
androidx.window.layout.SidecarCompat$Companion: android.os.IBinder getActivityWindowToken$window_release(android.app.Activity)
co.notix.push.data.NotificationOverrides: java.lang.Integer getColor()
co.notix.vf: java.lang.Object invoke()
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.google.firebase.database.core.operation.Operation$OperationType: com.google.firebase.database.core.operation.Operation$OperationType valueOf(java.lang.String)
co.notix.m: int hashCode()
co.notix.ma: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.hg: void setCallbacks(co.notix.lsi.LockScreenInterstitialCallback)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
com.google.firebase.database.logging.Logger$Level: com.google.firebase.database.logging.Logger$Level[] values()
co.notix.n4: n4(co.notix.qn)
co.notix.a4: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPredicates$lambda-6(java.util.Set,android.app.Activity)
co.notix.k6: android.view.View$OnClickListener b(java.lang.String)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
co.notix.wg: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.i5: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
co.notix.fk: fk(co.notix.gk,kotlin.coroutines.Continuation)
co.notix.cg: cg(co.notix.dg,android.content.Context,kotlin.coroutines.Continuation)
co.notix.jb: jb(kotlinx.coroutines.flow.MutableStateFlow)
com.google.firebase.abt.component.AbtRegistrar: java.util.List getComponents()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
co.notix.pc: java.lang.Object a(long,kotlin.coroutines.Continuation)
co.notix.hi: hi(co.notix.wb)
com.google.firebase.perf.FirebasePerfRegistrar: java.util.List getComponents()
com.google.firebase.perf.config.RemoteConfigManager: int getVersionCode(android.content.Context)
androidx.window.layout.HardwareFoldingFeature$Type: HardwareFoldingFeature$Type(java.lang.String)
co.notix.db: db()
com.google.firebase.perf.session.SessionManager: void registerForSessionUpdates(java.lang.ref.WeakReference)
co.notix.zl: zl(co.notix.gn,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
co.notix.t7: java.lang.Object a(co.notix.c9)
com.google.firebase.perf.session.SessionManager: void stopGaugeCollectionIfSessionRunningTooLong()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
androidx.appcompat.widget.SearchView: SearchView(android.content.Context,android.util.AttributeSet,int)
co.notix.te: java.lang.Object a(co.notix.he,kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$RefreshData: int hashCode()
co.notix.mq: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
co.notix.cf: void show(co.notix.appopen.AppOpenData)
androidx.core.app.ActivityCompat$Api16Impl: void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
co.notix.bi: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.lq: lq()
co.notix.zg: zg(co.notix.gh,kotlin.coroutines.Continuation)
co.notix.eg: co.notix.interstitial.InterstitialLoader createLoader(long,co.notix.domain.RequestVars)
kotlin.internal.jdk8.JDK8PlatformImplementations: JDK8PlatformImplementations()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
co.notix.xg: xg(co.notix.gh)
co.notix.callback.NotixCallback$Unsubscription: java.lang.String toString()
co.notix.ej: boolean equals(java.lang.Object)
co.notix.ae: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzmw: zzmw()
co.notix.lsi.LsiInterval$Fixed: co.notix.lsi.LsiInterval$Fixed copy$default(co.notix.lsi.LsiInterval$Fixed,long,int,java.lang.Object)
androidx.lifecycle.ViewModelStore: ViewModelStore()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroup(android.app.NotificationManager,android.app.NotificationChannelGroup)
co.notix.z9: z9(co.notix.l9,co.notix.zf,kotlinx.coroutines.CoroutineScope)
co.notix.banner.BannerSize$Fixed: BannerSize$Fixed(int,int)
co.notix.fg: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.v6: java.lang.Object invoke()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.google.android.gms.internal.measurement.zzft$zzi: zzft$zzi()
co.notix.g7: android.content.pm.PackageInfo a(android.content.pm.PackageManager,java.lang.String)
co.notix.yj: yj(co.notix.jh)
androidx.window.layout.SidecarWindowBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
co.notix.q3: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.view.ViewCompat$Api17Impl: void setLabelFor(android.view.View,int)
co.notix.ch: java.lang.Object invokeSuspend(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
co.notix.ip: java.lang.Object invoke(java.lang.Object)
co.notix.mk: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
co.notix.x7: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NavUtils$Api16Impl: android.content.Intent getParentActivityIntent(android.app.Activity)
androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback: SidecarCompat$DistinctSidecarElementCallback(androidx.window.layout.SidecarAdapter,androidx.window.sidecar.SidecarInterface$SidecarCallback)
co.notix.ya: int hashCode()
co.notix.rk: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: void postInvalidateOnAnimation(android.view.View,int,int,int,int)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
co.notix.gq: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.d2: java.lang.Object invoke(java.lang.Object)
com.google.firebase.perf.ktx.FirebasePerfKtxRegistrar: FirebasePerfKtxRegistrar()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
androidx.window.layout.WindowMetrics: boolean equals(java.lang.Object)
co.notix.kq: kq(co.notix.nq,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,int,co.notix.domain.RequestVars,kotlin.coroutines.Continuation)
co.notix.nb: android.view.View c()
co.notix.ld: ld()
co.notix.hd: java.lang.Object a(java.lang.Object)
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.v1.GaugeMetadata getGaugeMetadata()
co.notix.i3: i3(co.notix.j3,int)
co.notix.appopen.AppOpenActivity: void a()
kotlin.internal.PlatformImplementations: PlatformImplementations()
co.notix.banner.NotixBannerView: NotixBannerView(android.content.Context,android.util.AttributeSet)
co.notix.domain.RequestVars: RequestVars()
co.notix.uf: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
co.notix.yc: yc()
co.notix.r0: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.yl: java.lang.Object invoke(java.lang.Object)
co.notix.o4: o4(co.notix.rn)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
co.notix.h8: h8()
co.notix.sj: java.lang.Object invoke(java.lang.Object)
co.notix.i7: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarDisplayFeature(androidx.window.sidecar.SidecarDisplayFeature,androidx.window.sidecar.SidecarDisplayFeature)
co.notix.rg: java.lang.Object a(co.notix.rg,java.lang.String,java.util.Map,co.notix.xa,java.util.Set,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setContentType(android.media.AudioAttributes$Builder,int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend: ExtensionWindowLayoutInfoBackend(androidx.window.extensions.layout.WindowLayoutComponent)
co.notix.z0: z0(co.notix.wb)
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
co.notix.lm: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzdq,long)
co.notix.z4: z4(co.notix.wb)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
com.google.android.gms.internal.measurement.zzcl: com.google.android.gms.internal.measurement.zzcl[] values()
androidx.work.impl.background.systemjob.SystemJobService: SystemJobService()
androidx.window.layout.HardwareFoldingFeature: HardwareFoldingFeature(androidx.window.core.Bounds,androidx.window.layout.HardwareFoldingFeature$Type,androidx.window.layout.FoldingFeature$State)
co.notix.zg: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.p1: p1(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
com.google.firebase.perf.config.RemoteConfigManager: void lambda$triggerFirebaseRemoteConfigFetchAndActivateOnSuccessfulFetch$0(java.lang.Boolean)
co.notix.tj: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.DisplayCompatHelperApi17: void getRealSize(android.view.Display,android.graphics.Point)
co.notix.pc: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.periodicworker.PeriodicWorker: PeriodicWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.firebase.perf.ktx.FirebasePerfKtxRegistrar: java.util.List getComponents()
co.notix.callback.NotixCallback$Click: java.lang.String getData()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
androidx.datastore.preferences.protobuf.UnsafeUtil: UnsafeUtil()
co.notix.xd: void onReceive(android.content.Context,android.content.Intent)
co.notix.jh: java.lang.Object a(java.lang.String,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
co.notix.xp: java.lang.Object g(kotlin.coroutines.Continuation)
androidx.datastore.preferences.protobuf.FloatArrayList: FloatArrayList()
io.flutter.view.TextureRegistry$ImageTextureEntry: long id()
co.notix.gi: java.lang.Object invoke(java.lang.Object)
co.notix.appopen.NotixAppOpen$DefaultImpls: void startAutoShow$default(co.notix.appopen.NotixAppOpen,co.notix.appopen.AppOpenLoader,long,long,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,int,java.lang.Object)
co.notix.native.NotixNative$Companion: co.notix.native.NativeLoader createLoader(long)
co.notix.fc: fc(co.notix.pc,kotlin.coroutines.Continuation)
co.notix.ze: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsIceCreamSandwich$window_release(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
com.google.firebase.perf.util.Constants$TraceNames: com.google.firebase.perf.util.Constants$TraceNames valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
co.notix.tc: tc(co.notix.lsi.LockScreenInterstitialWorker,kotlin.coroutines.Continuation)
androidx.window.core.Version: androidx.window.core.Version access$getUNKNOWN$cp()
co.notix.push.data.NotificationOverrides: java.lang.String getImageUrl()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
co.notix.R$styleable: R$styleable()
co.notix.lsi.LockScreenInterstitialWorker: LockScreenInterstitialWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.android.gms.internal.measurement.zzft$zzd: zzft$zzd()
okio.SegmentPool: SegmentPool()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: WindowInfoTrackerCallbackAdapter(androidx.window.layout.WindowInfoTracker)
co.notix.wm: wm(co.notix.gn,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingBackend: java.util.Set getSplitRules()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
androidx.lifecycle.viewmodel.CreationExtras: CreationExtras()
androidx.window.embedding.ActivityFilter: boolean equals(java.lang.Object)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
io.flutter.plugins.pathprovider.Messages$StorageDirectory: io.flutter.plugins.pathprovider.Messages$StorageDirectory[] values()
co.notix.R$dimen: R$dimen()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: void close(java.io.FileDescriptor)
kotlinx.coroutines.JobNode: JobNode()
co.notix.fq: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
co.notix.dm: dm(co.notix.rq)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
co.notix.ck: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.appopen.NotixAppOpen: co.notix.appopen.AppOpenLoader createLoader(long,co.notix.domain.RequestVars,java.lang.Integer)
co.notix.callback.NotixCallback$RefreshData: java.lang.String toString()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannel)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
co.notix.push.data.NotificationOverrides: java.lang.Integer component11()
androidx.window.embedding.EmbeddingCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
co.notix.xm: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
co.notix.i3: void stopLoading()
co.notix.m6: void onAnimationStart(android.view.animation.Animation)
androidx.window.layout.WindowMetricsCalculator$Companion: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.view.Surface getSurface()
androidx.core.view.ViewCompat$Api16Impl: void setImportantForAccessibility(android.view.View,int)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: long id()
co.notix.callback.NotixCallback$Click: boolean equals(java.lang.Object)
co.notix.banner.BannerSize$Inline: int getWidth()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id()
co.notix.cn: cn(co.notix.ta)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
co.notix.eg: eg(co.notix.k3,co.notix.d)
co.notix.lsi.LockScreenInterstitialWorker: java.lang.Object a(kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
kotlinx.coroutines.flow.StateFlowSlot: StateFlowSlot()
co.notix.ab: java.lang.Object a(co.notix.o8,co.notix.xi)
co.notix.callback.NotixCallback$GeneralMetrics: NotixCallback$GeneralMetrics(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.xo: xo(java.lang.Long)
co.notix.vm: vm(co.notix.jh)
androidx.appcompat.widget.SearchView: int getPreferredHeight()
co.notix.x9: x9(co.notix.z9,java.lang.String,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
co.notix.eq: co.notix.ed a()
co.notix.i9: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
co.notix.appopen.NotixAppOpen: void stopAutoShow()
androidx.core.graphics.TypefaceCompatUtil$Api19Impl: android.os.ParcelFileDescriptor openFileDescriptor(android.content.ContentResolver,android.net.Uri,java.lang.String,android.os.CancellationSignal)
androidx.core.view.ViewCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View)
com.google.android.gms.internal.measurement.zzaf: zzaf()
co.notix.yp: yp()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
co.notix.lsi.LsiInterval$Optimized: LsiInterval$Optimized()
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
co.notix.tk: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.ExtensionInterfaceCompat: boolean validateExtensionInterface()
co.notix.eo: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ig: void trackImpression(co.notix.native.NativeData)
co.notix.ab: ab(co.notix.z9)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
co.notix.x8: x8(kotlinx.coroutines.CoroutineScope)
co.notix.perseverance.worker.PerseveranceWorker: java.lang.Object b(kotlin.coroutines.Continuation)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
com.google.firebase.messaging.EnhancedIntentService: void lambda$processIntent$0(android.content.Intent,com.google.android.gms.tasks.TaskCompletionSource)
co.notix.w2: java.lang.String getName()
androidx.window.embedding.ActivityRule: boolean getAlwaysExpand()
co.notix.t2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
co.notix.push.NotixPush: void setNotificationModifier(co.notix.push.NotixNotificationModifier)
co.notix.yd: void onLost(android.net.Network)
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
co.notix.rm: rm(java.util.Set)
androidx.window.layout.FoldingFeature$OcclusionType$Companion: FoldingFeature$OcclusionType$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.k0: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.google.protobuf.CodedOutputStream: CodedOutputStream()
co.notix.iq: void a(android.content.Context,java.lang.String,java.lang.String)
androidx.window.embedding.ActivityFilter: boolean matchesIntent(android.content.Intent)
com.google.firebase.remoteconfig.FirebaseRemoteConfigException$Code: com.google.firebase.remoteconfig.FirebaseRemoteConfigException$Code valueOf(java.lang.String)
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
co.notix.lsi.LsiInterval$Fixed: long getIntervalMillis()
androidx.window.layout.WindowLayoutInfo: WindowLayoutInfo(java.util.List)
co.notix.interstitial.NotixInterstitial$DefaultImpls: void show$default(co.notix.interstitial.NotixInterstitial,co.notix.interstitial.InterstitialData,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,int,java.lang.Object)
co.notix.ng: void setNotificationModifier(co.notix.push.NotixNotificationModifier)
com.google.firebase.perf.application.AppStateUpdateHandler: void incrementTsnsCount(int)
androidx.window.layout.ActivityCompatHelperApi24: boolean isInMultiWindowMode(android.app.Activity)
co.notix.l2: java.lang.Object b(kotlin.coroutines.Continuation)
co.notix.ai: java.lang.Object invoke(java.lang.Object)
co.notix.y5: y5(co.notix.k6)
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.window.layout.ActivityCompatHelperApi30: ActivityCompatHelperApi30()
androidx.window.core.Version: java.lang.String getDescription()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
co.notix.w9: java.lang.Object a(co.notix.w9,java.lang.String,co.notix.e3,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
com.google.protobuf.JavaType: com.google.protobuf.JavaType[] values()
com.google.firebase.database.core.persistence.PruneForest: PruneForest()
co.notix.callback.NotixCallback$Impression: NotixCallback$Impression(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.f4: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchType: com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchType[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.google.firebase.perf.session.gauges.MemoryGaugeCollector: MemoryGaugeCollector()
androidx.work.Data: Data()
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonListResult: GeneratedAndroidFirebaseStorage$PigeonListResult()
co.notix.j7: j7(co.notix.dd,kotlinx.coroutines.CoroutineScope)
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
co.notix.i6: i6(co.notix.k6)
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
co.notix.oo: oo(co.notix.td)
co.notix.xm: xm(co.notix.gn,kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
co.notix.kd: boolean equals(java.lang.Object)
co.notix.b5: java.lang.Object invoke(java.lang.Object)
co.notix.rh: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
co.notix.f8: f8(co.notix.z9)
co.notix.a8: a8(co.notix.d8,java.lang.String,co.notix.yn,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
com.google.firebase.abt.component.AbtRegistrar: com.google.firebase.abt.component.AbtComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
androidx.window.layout.SidecarWindowBackend: void setWindowExtension(androidx.window.layout.ExtensionInterfaceCompat)
co.notix.kq: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
androidx.window.layout.SidecarAdapter$Companion: void setSidecarDevicePosture(androidx.window.sidecar.SidecarDeviceState,int)
co.notix.interstitial.WebViewInterstitialActivity: void a(java.lang.String)
co.notix.wi: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
co.notix.m3: m3(kotlinx.coroutines.flow.FlowCollector)
co.notix.log.LogLevel: co.notix.log.LogLevel[] $values()
co.notix.vk: vk(co.notix.pk,co.notix.nq,co.notix.iq,co.notix.x8,kotlinx.coroutines.CoroutineScope,co.notix.zf,co.notix.wb,co.notix.l2)
co.notix.na: java.lang.Object a(long,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
com.google.android.gms.internal.measurement.zzbx: android.os.IBinder asBinder()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
androidx.window.layout.WindowMetrics: WindowMetrics(android.graphics.Rect)
co.notix.dg: java.lang.String getVersion()
co.notix.l6: l6(co.notix.appopen.AppOpenActivity)
com.google.firebase.storage.StorageRegistrar: com.google.firebase.storage.FirebaseStorageComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
co.notix.ua: ua(java.lang.String,java.util.Map,co.notix.xa,kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
co.notix.oe: java.lang.Object a(co.notix.he,kotlin.coroutines.Continuation)
co.notix.c9: java.lang.String toString()
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
co.notix.qm: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
co.notix.q2: java.lang.Object invoke(java.lang.Object)
co.notix.vq: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.en: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.i3: java.lang.Object awaitNext(long,kotlin.coroutines.Continuation)
co.notix.q8: long c()
co.notix.oq: oq(co.notix.pq,kotlin.coroutines.Continuation)
co.notix.wo: java.lang.Object a(java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannel(android.app.NotificationManager,android.app.NotificationChannel)
co.notix.o9: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.k6: void a()
co.notix.g3: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void scheduleFrame()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
androidx.collection.SimpleArrayMap: SimpleArrayMap()
co.notix.a: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.n8: java.lang.Object a(co.notix.o8,co.notix.xi)
co.notix.en: en(co.notix.gn,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader33()
co.notix.worker.SelfRestartingWorker: co.notix.lo a()
co.notix.r1: java.lang.Object invoke(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Rect computeWindowBoundsQ$window_release(android.app.Activity)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
co.notix.r5: java.lang.Object invoke()
co.notix.v2: v2()
co.notix.dk: java.lang.Object a(kotlin.coroutines.Continuation)
com.google.android.gms.tasks.Task: Task()
co.notix.e6: java.lang.Object invoke()
co.notix.s2: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
androidx.window.embedding.SplitRule: boolean checkParentMetrics(android.view.WindowMetrics)
co.notix.x1: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
co.notix.xc: void setLogLevel(co.notix.log.LogLevel)
co.notix.bq: bq(co.notix.he)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.google.android.gms.internal.measurement.zzft$zzn$zza: zzft$zzn$zza()
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.google.firebase.database.core.utilities.DefaultRunLoop: DefaultRunLoop()
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
co.notix.a: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
co.notix.ao: ao()
co.notix.callback.NotixCallback$Subscription: int hashCode()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
co.notix.wj: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.lifecycle.SavedStateHandle: SavedStateHandle()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
co.notix.u4: u4(java.lang.String,co.notix.p4,co.notix.l,long)
co.notix.native.NotixNative: co.notix.native.NativeLoader createLoader(long,co.notix.domain.RequestVars,java.lang.Integer)
co.notix.cf: void a(co.notix.appopen.AppOpenData,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
co.notix.e0: java.lang.Object invoke(java.lang.Object)
co.notix.bl: co.notix.bl valueOf(java.lang.String)
co.notix.ac: ac(co.notix.lsi.LockScreenInterstitialActivity,kotlin.coroutines.Continuation)
androidx.work.impl.background.systemalarm.ConstraintProxyUpdateReceiver: ConstraintProxyUpdateReceiver()
co.notix.hq: co.notix.cf q()
co.notix.qj: qj(co.notix.wb)
co.notix.k9: k9(co.notix.l9,java.lang.String,kotlin.coroutines.Continuation)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
co.notix.callback.NotixCallback$Subscription: java.lang.String component2()
co.notix.a7: java.lang.Object invoke()
androidx.room.RoomDatabase: RoomDatabase()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
co.notix.oh: java.lang.Object a(java.lang.String,kotlin.coroutines.Continuation)
co.notix.ob: java.lang.Object a(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.util.List translate(java.util.List)
androidx.core.app.NotificationCompat$BigPictureStyle$Api16Impl: void setSummaryText(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
co.notix.v0: v0(co.notix.wb)
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
co.notix.do: java.lang.Object invoke(java.lang.Object)
co.notix.interstitial.InterstitialButton: int hashCode()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.firebase.remoteconfig.ktx.FirebaseRemoteConfigKtxRegistrar: FirebaseRemoteConfigKtxRegistrar()
co.notix.ia: boolean equals(java.lang.Object)
co.notix.te: te(co.notix.x8,co.notix.pi,co.notix.qi,kotlinx.coroutines.CoroutineScope,co.notix.l2)
androidx.window.core.Version: int compareTo(androidx.window.core.Version)
co.notix.oh: oh(co.notix.x8,kotlinx.coroutines.CoroutineScope,co.notix.wb)
co.notix.cf: void show(co.notix.appopen.AppOpenData,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.google.firebase.installations.remote.TokenResult: TokenResult()
com.google.firebase.perf.config.RemoteConfigManager: long getInitialStartupMillis()
co.notix.interstitial.InterstitialButton: InterstitialButton(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
co.notix.ik: java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
com.google.firebase.perf.network.FirebasePerfUrlConnection: java.lang.Object instrument(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.lang.Object component1(android.util.Pair)
co.notix.nb: void a()
androidx.window.core.Version: int getMajor()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
co.notix.y0: java.lang.Object invoke(java.lang.Object)
com.google.firebase.sessions.EventType: com.google.firebase.sessions.EventType valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
co.notix.c3: c3()
kotlin.jvm.internal.CallableReference: boolean isFinal()
co.notix.z4: java.lang.Object invoke(java.lang.Object)
androidx.core.widget.ListViewCompat$Api19Impl: void scrollListBy(android.widget.ListView,int)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
co.notix.t2: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.d4: java.lang.Object a(co.notix.l,kotlin.coroutines.Continuation)
co.notix.of: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitInfo: java.lang.String toString()
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: boolean performAccessibilityAction(android.view.View$AccessibilityDelegate,android.view.View,int,android.os.Bundle)
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: android.app.Activity getActivity()
com.google.firebase.sessions.DataCollectionState: com.google.firebase.sessions.DataCollectionState[] values()
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
com.google.firebase.messaging.FirebaseMessagingService: void onMessageSent(java.lang.String)
co.notix.b8: b8(co.notix.d8,kotlin.coroutines.Continuation)
co.notix.fo: void run()
com.google.firebase.perf.session.SessionManager: com.google.firebase.perf.session.SessionManager getInstance()
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
co.notix.b3: java.lang.String getName()
androidx.window.layout.WindowMetricsCalculator$-CC: void overrideDecorator(androidx.window.layout.WindowMetricsCalculatorDecorator)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
co.notix.jg: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: NotixInappFlutterPlugin()
co.notix.hq: co.notix.uo D()
androidx.window.embedding.MatcherUtils: boolean areComponentsMatching$window_release(android.content.ComponentName,android.content.ComponentName)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
co.notix.w3: w3(kotlinx.coroutines.flow.Flow,co.notix.d4,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
co.notix.lsi.LockScreenInterstitialActivity: void a(java.lang.String)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
com.google.android.datatransport.runtime.backends.BackendRequest: BackendRequest()
co.notix.ok: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api19Impl: void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int)
co.notix.za: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.banner.BannerRequest: co.notix.banner.BannerSize component2()
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: java.lang.Object invoke(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
com.google.android.gms.internal.measurement.zzij: zzij()
co.notix.sb: co.notix.f3 a(co.notix.g)
co.notix.h4: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
co.notix.tq: tq(android.content.Context,android.util.AttributeSet,int)
androidx.palette.graphics.Target: Target()
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
co.notix.gh: gh(co.notix.jh,co.notix.vg,java.lang.Object)
co.notix.periodicworker.PeriodicWorker: java.lang.Object b(kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
co.notix.k6: androidx.core.view.WindowInsetsCompat a(co.notix.k6,android.view.View,androidx.core.view.WindowInsetsCompat)
androidx.window.R$styleable: R$styleable()
co.notix.l9: l9(co.notix.rg)
co.notix.l2: java.lang.Object a(co.notix.pq,co.notix.l2,long,kotlin.coroutines.Continuation)
androidx.work.impl.background.systemalarm.ConstraintProxy$StorageNotLowProxy: ConstraintProxy$StorageNotLowProxy()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
co.notix.n2: java.lang.String a(java.lang.String,java.lang.Class,java.lang.String)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
co.notix.mb: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.vm: java.lang.Object invoke(java.lang.Object)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
co.notix.v8: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
co.notix.u5: java.lang.Object invoke()
co.notix.iq: java.lang.String a(android.content.Context,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
co.notix.gn: java.lang.Object b(kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: EmbeddingAdapter()
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
co.notix.qa: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.y0: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.l: java.lang.String toString()
co.notix.eg: void show(co.notix.interstitial.InterstitialData,co.notix.interstitial.InterstitialButton)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSgtmDebugInfo(android.content.Intent)
co.notix.perseverance.worker.PerseveranceWorker: PerseveranceWorker(android.content.Context,androidx.work.WorkerParameters)
com.google.firebase.database.core.view.Event$EventType: com.google.firebase.database.core.view.Event$EventType valueOf(java.lang.String)
co.notix.f0: f0(co.notix.rq)
com.google.firebase.perf.network.FirebasePerfHttpClient: java.lang.Object execute(org.apache.http.client.HttpClient,org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
androidx.core.view.ViewCompat$Api19Impl: int getAccessibilityLiveRegion(android.view.View)
com.google.firebase.perf.session.SessionManager: void setApplicationContext(android.content.Context)
co.notix.nj: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.io: void run()
co.notix.s0: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
co.notix.al: al(java.lang.String,co.notix.bl,java.lang.String,java.lang.String,long,java.util.Map,java.util.List)
androidx.window.embedding.ExtensionEmbeddingBackend: ExtensionEmbeddingBackend(androidx.window.embedding.EmbeddingInterfaceCompat)
co.notix.jk: jk(co.notix.kk,kotlin.coroutines.Continuation)
co.notix.v2: java.lang.String getName()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.window.layout.HardwareFoldingFeature$Type$Companion: HardwareFoldingFeature$Type$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.Image acquireLatestImage()
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
com.google.protobuf.BooleanArrayList: BooleanArrayList()
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: GeneratedAndroidFirebaseCore$PigeonFirebaseOptions()
androidx.work.ListenableWorker: boolean isUsed()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
androidx.window.embedding.SplitPairFilter: SplitPairFilter(android.content.ComponentName,android.content.ComponentName,java.lang.String)
com.google.android.gms.internal.measurement.zzbw: zzbw()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
co.notix.ig: co.notix.native.NativeLoader createLoader(long,java.lang.Integer)
com.google.android.gms.measurement.internal.zzip: com.google.android.gms.measurement.internal.zzip[] values()
androidx.window.layout.WindowLayoutInfo: java.util.List getDisplayFeatures()
androidx.window.embedding.ActivityStack: boolean equals(java.lang.Object)
co.notix.hf: hf(kotlin.coroutines.Continuation)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.util.Optional getBoolean(java.lang.String)
androidx.window.layout.SidecarCompat: androidx.window.layout.SidecarAdapter access$getSidecarAdapter$p(androidx.window.layout.SidecarCompat)
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object)
com.google.firebase.perf.metrics.Trace: int describeContents()
com.google.android.gms.internal.measurement.zzjs: zzjs()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
com.google.android.gms.dynamite.zzn: zzn()
co.notix.z3: z3(co.notix.d4,kotlin.coroutines.Continuation)
androidx.window.embedding.EmbeddingAdapter: boolean translateParentMetricsPredicate$lambda-4(androidx.window.embedding.SplitRule,android.view.WindowMetrics)
com.example.myapp.MainActivity: MainActivity()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: boolean hasMultipleSigners(android.content.pm.SigningInfo)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
co.notix.hq: co.notix.m4 b()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl: androidx.window.layout.WindowBackend access$getWindowBackend$p(androidx.window.layout.WindowInfoTrackerImpl)
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
co.notix.xk: java.lang.Object invoke(java.lang.Object)
co.notix.c7: c7(co.notix.appopen.AppOpenActivity)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerWebSource(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest,kotlin.coroutines.Continuation)
co.notix.x8: android.app.Activity a(java.util.WeakHashMap,co.notix.f)
co.notix.im: im(co.notix.gn,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitRuleParser: SplitRuleParser()
co.notix.pm: pm(co.notix.gn,kotlin.coroutines.Continuation)
co.notix.qf: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
co.notix.ng: void init(android.content.Context,java.lang.String,java.lang.String,co.notix.domain.RequestVars)
co.notix.callback.NotixCallback: NotixCallback(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
com.google.android.gms.internal.measurement.zzfh$zza: zzfh$zza()
com.google.android.gms.internal.measurement.zzhz: zzhz()
com.google.firebase.perf.v1.ApplicationInfo: ApplicationInfo()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
co.notix.he: java.lang.String toString()
co.notix.push.NotixPush$Companion: void setTargetEventHandler(co.notix.push.NotixTargetEventHandler)
androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface: void onSplitInfoChanged(java.util.List)
co.notix.native.NativeData: android.graphics.Bitmap getImage()
co.notix.hf: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.u2: java.lang.Object a(co.notix.r4,co.notix.g4)
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
co.notix.ef: ef()
co.notix.i4: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.google.firebase.perf.metrics.Trace: void incrementMetric(java.lang.String,long)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State valueOf(java.lang.String)
co.notix.f2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
co.notix.mo: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.vc: void b(java.lang.String)
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility[] values()
co.notix.f1: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
com.google.firebase.perf.v1.NetworkRequestMetric$HttpMethod: com.google.firebase.perf.v1.NetworkRequestMetric$HttpMethod[] values()
co.notix.s4: s4(co.notix.n4,co.notix.j)
co.notix.yo: yo(java.lang.Boolean,java.lang.Integer,java.lang.Long,java.lang.Long)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
co.notix.pc: java.lang.Object b(kotlin.coroutines.Continuation)
co.notix.i8: java.lang.Object a(java.lang.Object)
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
androidx.window.embedding.ExtensionEmbeddingBackend$SplitListenerWrapper: androidx.core.util.Consumer getCallback()
androidx.core.app.NavUtils$Api16Impl: boolean navigateUpTo(android.app.Activity,android.content.Intent)
co.notix.y1: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
co.notix.j2: j2(co.notix.l2,kotlin.coroutines.Continuation)
co.notix.la: java.lang.Object invokeSuspend(java.lang.Object)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection[] values()
co.notix.td: java.lang.Object c(kotlin.coroutines.Continuation)
co.notix.db: java.lang.Object a(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImageReaders()
co.notix.ek: ek(co.notix.gk,kotlin.coroutines.Continuation)
co.notix.wm: java.lang.Object invoke(java.lang.Object)
co.notix.xp: java.lang.Object d(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
co.notix.yd: yd(co.notix.ee)
co.notix.g2: g2(co.notix.l2,kotlin.coroutines.Continuation)
co.notix.qa: qa(co.notix.ra,kotlin.coroutines.Continuation)
com.google.firebase.perf.config.RemoteConfigManager: boolean shouldFetchAndActivateRemoteConfigValues()
androidx.window.embedding.MatcherUtils: MatcherUtils()
co.notix.z8: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
androidx.window.layout.WindowMetrics: android.graphics.Rect getBounds()
co.notix.r9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.oi: oi(java.lang.String,kotlin.jvm.functions.Function1)
co.notix.m: java.lang.String a()
kotlin.reflect.KVisibility: kotlin.reflect.KVisibility valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
co.notix.go: go(com.google.common.util.concurrent.ListenableFuture)
co.notix.native.NotixNative$Companion: co.notix.native.NativeLoader createLoader(long,co.notix.domain.RequestVars)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
co.notix.t3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.layout.SidecarCompat$DistinctElementCallback: SidecarCompat$DistinctElementCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
co.notix.push.data.NotificationOverrides: NotificationOverrides(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Boolean)
androidx.core.view.ViewCompat$Api16Impl: boolean getFitsSystemWindows(android.view.View)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.window.core.Version: int getMinor()
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api19Impl: android.os.Bundle getExtras(android.view.accessibility.AccessibilityNodeInfo)
co.notix.bk: java.lang.Object invoke(java.lang.Object)
co.notix.lsi.LsiInterval$Fixed: int hashCode()
com.google.firebase.sessions.DataCollectionStatus: DataCollectionStatus()
co.notix.pk: pk(co.notix.rg,co.notix.wb)
co.notix.zj: zj(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.r4: int hashCode()
androidx.exifinterface.media.ExifInterfaceUtils$Api23Impl: void setDataSource(android.media.MediaMetadataRetriever,android.media.MediaDataSource)
co.notix.jg: jg(co.notix.ng,kotlin.coroutines.Continuation)
com.google.firebase.database.FirebaseDatabaseKtxRegistrar: FirebaseDatabaseKtxRegistrar()
co.notix.callback.NotixCallback$ManageAudience: co.notix.callback.NotixCallback$ManageAudience copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.appopen.AppOpenActivity: AppOpenActivity()
co.notix.wk: int hashCode()
co.notix.nf: nf(co.notix.banner.NotixBannerView,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
com.google.android.gms.internal.measurement.zzfh$zzc$zza: zzfh$zzc$zza()
co.notix.z0: java.lang.Object invoke(java.lang.Object)
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: AbstractSharedFlowSlot()
io.flutter.plugins.imagepicker.Messages$VideoSelectionOptions: Messages$VideoSelectionOptions()
com.google.firebase.perf.session.gauges.GaugeManager: boolean startCollectingMemoryMetrics(long,com.google.firebase.perf.util.Timer)
co.notix.s9: s9(co.notix.w9,java.lang.String,kotlin.coroutines.Continuation)
androidx.datastore.preferences.protobuf.CodedOutputStream: CodedOutputStream()
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1$invokeSuspend$$inlined$collect$1: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext$Key getKey()
co.notix.R: R()
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
com.google.firebase.perf.config.RemoteConfigManager: void triggerRemoteConfigFetchIfNecessary()
co.notix.hn: hn(co.notix.zk)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
co.notix.gf: gf(co.notix.k3,co.notix.x8,co.notix.w9)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.datatransport.runtime.EventInternal: EventInternal()
co.notix.xq: xq()
co.notix.zm: java.lang.Object invoke(java.lang.Object)
co.notix.callback.NotixCallback$FcmTokenReceived: co.notix.callback.NotixCallback$FcmTokenReceived copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.nm: java.lang.Object invoke(java.lang.Object)
co.notix.ub: boolean equals(java.lang.Object)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.util.Optional getString(java.lang.String)
co.notix.gh: java.lang.Object b(kotlin.coroutines.Continuation)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
co.notix.xc: void b(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzdi,long)
co.notix.s3: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.s5: java.lang.Object invoke()
co.notix.li: li(co.notix.pi,kotlin.coroutines.Continuation)
co.notix.v7: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.zn: java.lang.Object a(java.lang.Object)
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice[] values()
androidx.work.OutOfQuotaPolicy: androidx.work.OutOfQuotaPolicy valueOf(java.lang.String)
com.google.firebase.perf.network.FirebasePerfUrlConnection: java.lang.Object getContent(java.net.URL,java.lang.Class[])
com.google.android.gms.internal.measurement.zzft$zze: zzft$zze()
com.google.firebase.remoteconfig.ktx.FirebaseRemoteConfigKtxRegistrar: java.util.List getComponents()
kotlin.jvm.internal.CallableReference: java.util.List getAnnotations()
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void cleanup()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
co.notix.log.LogLevel: co.notix.log.LogLevel valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
co.notix.l1: l1(co.notix.jh)
androidx.work.CoroutineWorker: void getCoroutineContext$annotations()
com.google.firebase.sessions.LogEnvironment: com.google.firebase.sessions.LogEnvironment valueOf(java.lang.String)
androidx.window.layout.FoldingFeature$State$Companion: FoldingFeature$State$Companion()
co.notix.y7: java.lang.Object invoke()
androidx.window.layout.WindowMetricsCalculatorCompat: int getNavigationBarHeight(android.content.Context)
co.notix.u: u(co.notix.l2,kotlin.coroutines.Continuation)
co.notix.n5: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback$Impression: co.notix.callback.NotixCallbackStatus getStatus()
androidx.window.embedding.SplitPlaceholderRule: androidx.window.embedding.SplitPlaceholderRule plus$window_release(androidx.window.embedding.ActivityFilter)
co.notix.j: java.lang.Object a(java.lang.Object)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType valueOf(java.lang.String)
co.notix.f5: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.o6: java.lang.Object invoke()
com.google.android.gms.internal.measurement.zzft$zzj: zzft$zzj()
co.notix.callback.NotixCallback$Subscription: java.lang.String toString()
co.notix.b8: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.kd: int hashCode()
co.notix.w9: w9(co.notix.pi,co.notix.qi,kotlinx.coroutines.CoroutineScope,co.notix.l2,co.notix.wb)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
co.notix.uf: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.e3: java.lang.String getName()
co.notix.bp: boolean equals(java.lang.Object)
com.google.android.gms.internal.measurement.zzjt: zzjt()
co.notix.fo: fo(kotlinx.coroutines.CancellableContinuationImpl,com.google.common.util.concurrent.ListenableFuture)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
androidx.fragment.app.Fragment: Fragment()
co.notix.xa: xa(java.lang.String,int)
androidx.window.layout.ExtensionWindowLayoutInfoBackend$MulticastConsumer: void accept(java.lang.Object)
co.notix.dc: dc(co.notix.lsi.LockScreenInterstitialActivity)
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
co.notix.dd: dd(co.notix.bd,co.notix.iq,co.notix.x8,kotlinx.coroutines.CoroutineScope,co.notix.zf)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: SidecarWindowBackend$WindowLayoutChangeCallbackWrapper(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
androidx.work.CoroutineWorker: com.google.common.util.concurrent.ListenableFuture getForegroundInfoAsync()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
co.notix.callback.NotixCallback$PushDataLoad: co.notix.callback.NotixCallback$PushDataLoad copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.jk: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
co.notix.interstitial.NotixInterstitial$Companion: void show(co.notix.interstitial.InterstitialData)
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
co.notix.we: boolean a()
co.notix.jh: kotlinx.coroutines.CoroutineScope a(co.notix.jh)
co.notix.d3: d3()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$600(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
androidx.work.ListenableWorker$Result: ListenableWorker$Result()
co.notix.banner.NotixBannerView: kotlinx.coroutines.flow.MutableStateFlow access$getTimeVisibleF$p(co.notix.banner.NotixBannerView)
co.notix.je: je(co.notix.oe,kotlin.coroutines.Continuation)
co.notix.gj: gj(co.notix.hj,java.lang.String,kotlin.coroutines.Continuation)
co.notix.banner.NotixBannerView: NotixBannerView(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.kk: kk(co.notix.x8,co.notix.dk,co.notix.xp,kotlinx.coroutines.CoroutineScope,co.notix.we,co.notix.ea)
co.notix.appopen.NotixAppOpen$Companion: co.notix.appopen.AppOpenLoader createLoader(long,co.notix.domain.RequestVars,java.lang.Integer)
co.notix.nc: java.lang.Object invoke(java.lang.Object)
co.notix.s2: s2(co.notix.u2)
co.notix.callback.NotixCallback$Subscription: boolean equals(java.lang.Object)
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
co.notix.sf: java.lang.Object invoke()
co.notix.vb: vb(co.notix.m,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
androidx.work.CoroutineWorker: kotlinx.coroutines.CoroutineDispatcher getCoroutineContext()
androidx.window.embedding.EmbeddingRule: EmbeddingRule()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
com.google.android.gms.internal.measurement.zzfh$zzf$zza: com.google.android.gms.internal.measurement.zzfh$zzf$zza[] values()
com.google.android.gms.internal.measurement.zzlr: com.google.android.gms.internal.measurement.zzlr[] values()
com.google.common.collect.ImmutableList: ImmutableList()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
co.notix.banner.BannerSize$Sticky: int getWidth()
com.google.firebase.messaging.FirebaseMessagingService: boolean alreadyReceivedMessage(java.lang.String)
co.notix.k6: void a(co.notix.k6,co.notix.i,kotlin.Pair)
co.notix.u2: java.lang.Object b(co.notix.r4,co.notix.g4)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: kotlinx.coroutines.flow.Flow windowLayoutInfo(android.app.Activity)
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: java.lang.Object invoke(java.lang.Object)
co.notix.xn: xn(int)
co.notix.m6: void onAnimationRepeat(android.view.animation.Animation)
io.flutter.plugins.imagepicker.ImagePickerCache$CacheType: io.flutter.plugins.imagepicker.ImagePickerCache$CacheType valueOf(java.lang.String)
co.notix.vb: boolean equals(java.lang.Object)
co.notix.jb: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.window.layout.SidecarCompat: androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface access$getExtensionCallback$p(androidx.window.layout.SidecarCompat)
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.util.Optional getDouble(java.lang.String)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityIntentPredicates$lambda-3(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
co.notix.worker.SelfRestartingWorker: SelfRestartingWorker(android.content.Context,androidx.work.WorkerParameters)
androidx.window.layout.WindowMetricsCalculator$Companion$decorator$1: WindowMetricsCalculator$Companion$decorator$1()
co.notix.y3: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeWindowLayoutInfoListener(androidx.core.util.Consumer)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.ActivityRule parseSplitActivityRule(android.content.Context,android.content.res.XmlResourceParser)
co.notix.mh: java.lang.String a(java.io.File)
co.notix.r3: r3(co.notix.d4,kotlin.coroutines.Continuation)
co.notix.rb: java.lang.String toString()
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
co.notix.s: s(co.notix.l2,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeScheduleFrame(long)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
co.notix.c: void onActivityDestroyed(android.app.Activity)
co.notix.callback.NotixCallback$FcmTokenReceived: java.lang.String component2()
co.notix.sg: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
co.notix.kd: java.lang.String toString()
androidx.core.view.MarginLayoutParamsCompat$Api17Impl: int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams)
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
co.notix.ki: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.p4: long c()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
co.notix.n6: n6(co.notix.appopen.AppOpenActivity)
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
com.google.android.gms.internal.measurement.zzfn$zzg: zzfn$zzg()
co.notix.ti: ti(co.notix.perseverance.worker.PerseveranceWorker)
com.google.firebase.perf.session.SessionManager: void logGaugeMetadataIfCollectionEnabled(com.google.firebase.perf.v1.ApplicationProcessState)
androidx.window.embedding.ExtensionEmbeddingBackend: void registerRule(androidx.window.embedding.EmbeddingRule)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter$addListener$1$1: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
androidx.window.embedding.SplitPairFilter: int hashCode()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
com.google.firebase.perf.session.gauges.CpuGaugeCollector: CpuGaugeCollector()
co.notix.appopen.AppOpenLoader: void doOnNextAvailable(kotlin.jvm.functions.Function1,long)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
androidx.window.embedding.ExtensionEmbeddingBackend: void setEmbeddingExtension(androidx.window.embedding.EmbeddingInterfaceCompat)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void release()
co.notix.x0: x0(co.notix.jh)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
co.notix.i7: i7(co.notix.j7,java.lang.String,kotlin.coroutines.Continuation)
co.notix.ok: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
co.notix.na: com.google.firebase.FirebaseApp a(long)
co.notix.fl: fl(co.notix.wl,kotlinx.coroutines.CoroutineScope)
co.notix.jp: jp(co.notix.jh)
androidx.work.impl.background.systemalarm.SystemAlarmService: SystemAlarmService()
androidx.datastore.preferences.core.MutablePreferences: MutablePreferences()
co.notix.i3: co.notix.interstitial.InterstitialData getNext()
com.google.firebase.perf.v1.AndroidApplicationInfo: AndroidApplicationInfo()
com.google.firebase.perf.session.gauges.GaugeManager: com.google.firebase.perf.session.gauges.MemoryGaugeCollector lambda$new$1()
co.notix.wi: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
co.notix.ki: java.lang.Object invoke(java.lang.Object)
io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageTaskState: io.flutter.plugins.firebase.storage.GeneratedAndroidFirebaseStorage$PigeonStorageTaskState[] values()
co.notix.t5: java.lang.Object invoke()
co.notix.tc: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.nk: nk(kotlinx.coroutines.CoroutineScope,co.notix.pk)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
com.google.protobuf.UnknownFieldSetLite: UnknownFieldSetLite()
co.notix.kh: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.firebase.perf.FirebasePerfRegistrar: com.google.firebase.perf.FirebasePerformance providesFirebasePerformance(com.google.firebase.components.ComponentContainer)
co.notix.appopen.NotixAppOpen: void doOnApplicationOpen(kotlin.jvm.functions.Function1,long)
co.notix.lj: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ua: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.layout.SidecarWindowBackend: void registerLayoutChangeCallback(android.app.Activity,java.util.concurrent.Executor,androidx.core.util.Consumer)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
co.notix.uf: uf(co.notix.banner.NotixBannerView,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerWebSourceAsync(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)
androidx.core.view.ViewCompat$Api19Impl: boolean isAttachedToWindow(android.view.View)
com.google.firebase.database.core.utilities.ParsedUrl: ParsedUrl()
co.notix.k6: android.view.View c()
co.notix.sd: sd(co.notix.td,kotlin.coroutines.Continuation)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
co.notix.ki: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.cf: co.notix.appopen.AppOpenLoader createLoader(long,co.notix.domain.RequestVars)
com.google.firebase.perf.v1.TraceMetric: TraceMetric()
co.notix.callback.NotixCallback$Click: co.notix.callback.NotixCallback$Click copy(co.notix.callback.NotixCallbackStatus,java.lang.String)
co.notix.domain.RequestVars: java.lang.String getVar3()
co.notix.ag: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
androidx.core.view.AccessibilityDelegateCompat$Api16Impl: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View$AccessibilityDelegate,android.view.View)
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: ExtensionEmbeddingBackend$Companion()
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
co.notix.banner.NotixBannerLoader: void doOnNextAvailable(kotlin.jvm.functions.Function1,long)
androidx.window.embedding.EmbeddingAdapter: boolean translateActivityPairPredicates$lambda-1(androidx.window.embedding.EmbeddingAdapter,java.util.Set,android.util.Pair)
androidx.window.core.Version$Companion: androidx.window.core.Version getUNKNOWN()
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin$notixInterstitialLoaderNext$1: java.lang.Object invoke(java.lang.Object)
co.notix.y9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onTrimMemory(int)
com.google.firebase.perf.session.gauges.GaugeManager: long getCpuGaugeCollectionFrequencyMs(com.google.firebase.perf.v1.ApplicationProcessState)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
androidx.window.layout.WindowInfoTrackerImpl$Companion: WindowInfoTrackerImpl$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterEngineGroupCache: FlutterEngineGroupCache()
com.google.firebase.sessions.SessionDatastoreImpl$Companion: SessionDatastoreImpl$Companion()
co.notix.dg: void setCallbackHandler(co.notix.callback.NotixCallbackHandler)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
io.flutter.view.TextureRegistry$SurfaceProducer: void release()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.google.firebase.sessions.SessionLifecycleService: SessionLifecycleService()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
co.notix.ld: ld(int)
co.notix.notix_inapp_flutter.NotixInappFlutterPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
co.notix.f5: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.EmbeddingAdapter: java.util.Set translate(java.util.Set)
co.notix.cm: java.lang.Object invoke(java.lang.Object)
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
co.notix.r8: void b(java.lang.String)
co.notix.w8: w8(co.notix.x8)
androidx.window.embedding.SplitController$Companion: void initialize(android.content.Context,int)
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$OcclusionType getOcclusionType()
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
co.notix.banner.NotixBannerView: kotlin.Pair getSimpleDp(co.notix.banner.BannerSize)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
co.notix.zp: java.lang.String toString()
co.notix.cf: boolean a(co.notix.cf,android.app.Activity)
co.notix.hq: co.notix.ec j()
co.notix.am: am(co.notix.gn,kotlin.coroutines.Continuation)
co.notix.m7: m7(co.notix.s7,kotlin.coroutines.Continuation)
co.notix.u8: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.nb: void g()
com.google.firebase.perf.config.RemoteConfigManager: boolean hasLastFetchBecomeStale(long)
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
com.google.android.gms.internal.ads_identifier.zzc: zzc()
co.notix.bq: java.lang.String toString()
co.notix.h7: h7(co.notix.j7,java.lang.String,kotlin.coroutines.Continuation)
com.google.common.collect.ImmutableSet: ImmutableSet()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
co.notix.startup.NotixInitializer: java.util.List dependencies()
co.notix.sk: sk(co.notix.vk,java.lang.String,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
co.notix.sk: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.core.Version: boolean equals(java.lang.Object)
co.notix.cg: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
co.notix.cl: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.work.impl.utils.ForceStopRunnable$BroadcastReceiver: ForceStopRunnable$BroadcastReceiver()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
co.notix.callback.NotixCallback$Subscription: java.lang.String getData()
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
kotlin.jvm.internal.FunctionReference: int hashCode()
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.InsetDrawable)
co.notix.interstitial.InterstitialButton: java.lang.String getText()
co.notix.zh: zh(co.notix.pi,kotlin.coroutines.Continuation)
com.google.firebase.messaging.FirebaseMessagingService: java.lang.String getMessageId(android.content.Intent)
com.google.firebase.concurrent.FirebaseExecutors$DirectExecutor: com.google.firebase.concurrent.FirebaseExecutors$DirectExecutor valueOf(java.lang.String)
co.notix.ha: ha(java.lang.String)
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: CallbackToFutureAdapter$Completer()
co.notix.push.NotixPush$Companion: void deleteAudience(java.lang.String)
androidx.window.layout.WindowInfoTracker$-CC: androidx.window.layout.WindowInfoTracker getOrCreate(android.content.Context)
com.google.firebase.database.ktx.FirebaseDatabaseKtxRegistrar: FirebaseDatabaseKtxRegistrar()
co.notix.xf: void a(kotlin.jvm.functions.Function0)
co.notix.appopen.NotixAppOpen: void startAutoShow(co.notix.appopen.AppOpenLoader)
co.notix.callback.NotixCallback$FcmTokenReceived: int hashCode()
co.notix.push.permissions.NotificationsPermissionActivity: void onCreate(android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
co.notix.w9: java.lang.Object a(java.lang.String,kotlin.coroutines.Continuation)
co.notix.p9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.s9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
co.notix.ml: ml(co.notix.wl,kotlin.coroutines.Continuation)
co.notix.lsi.LockScreenInterstitialActivity: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.push.NotixPush$Companion: void setNotificationModifier(co.notix.push.NotixNotificationModifier)
androidx.work.ListenableWorker$Result$Failure: ListenableWorker$Result$Failure()
co.notix.h1: h1(co.notix.rq)
co.notix.callback.NotixCallback$ManageAudience: int hashCode()
co.notix.rk: rk(co.notix.vk,kotlin.coroutines.Continuation)
co.notix.native.NativeLoader: void startLoading()
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
co.notix.h5: java.lang.Object emit(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.fp: java.lang.Object invoke(java.lang.Object)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void release()
androidx.window.embedding.SplitRule: int getMinSmallestWidth()
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
co.notix.wa: wa(java.lang.String)
co.notix.im: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getPrimaryActivityName()
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
co.notix.de: de(kotlinx.coroutines.flow.StateFlow)
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.google.firebase.perf.application.AppStateUpdateHandler: AppStateUpdateHandler()
com.google.android.gms.internal.measurement.zzcj: zzcj()
androidx.window.layout.HardwareFoldingFeature$Type$Companion: androidx.window.layout.HardwareFoldingFeature$Type getFOLD()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.google.android.gms.internal.measurement.zzgb$zzd$zza: com.google.android.gms.internal.measurement.zzgb$zzd$zza[] values()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
co.notix.domain.RequestVars: java.lang.String getVar2()
androidx.window.layout.SidecarWindowBackend$WindowLayoutChangeCallbackWrapper: void setLastInfo(androidx.window.layout.WindowLayoutInfo)
androidx.window.embedding.SplitInfo: float getSplitRatio()
kotlin.jvm.internal.FunctionReference: FunctionReference(int,java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,int)
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
com.google.firebase.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
_COROUTINE._BOUNDARY: _BOUNDARY()
co.notix.qe: qe(co.notix.te,kotlin.coroutines.Continuation)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
androidx.window.embedding.EmbeddingAdapter: androidx.window.embedding.SplitInfo translate(androidx.window.extensions.embedding.SplitInfo)
co.notix.vj: vj(co.notix.jh)
kotlin.coroutines.jvm.internal.BaseContinuationImpl: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
com.google.firebase.perf.metrics.Trace: java.lang.String getAttribute(java.lang.String)
co.notix.appopen.NotixAppOpen$Companion: void show(co.notix.appopen.AppOpenData)
co.notix.e0: e0(co.notix.wb)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
co.notix.o9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.window.layout.WindowMetrics: WindowMetrics(androidx.window.core.Bounds)
androidx.work.Worker: Worker(android.content.Context,androidx.work.WorkerParameters)
co.notix.interstitial.NotixInterstitial$Companion: void show(co.notix.interstitial.InterstitialData,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
co.notix.in: boolean equals(java.lang.Object)
co.notix.n4: java.lang.Object a(java.lang.Object)
co.notix.u4: boolean equals(java.lang.Object)
co.notix.ke: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.z: java.lang.Object invoke(java.lang.Object)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannelGroup)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
androidx.window.embedding.SplitController$Companion: SplitController$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
com.google.firebase.perf.session.SessionManager: void unregisterForSessionUpdates(java.lang.ref.WeakReference)
co.notix.vc: void setLogLevel(co.notix.log.LogLevel)
com.google.firebase.heartbeatinfo.HeartBeatResult: HeartBeatResult()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
androidx.window.layout.SidecarAdapter: boolean isEqualSidecarWindowLayoutInfo(androidx.window.sidecar.SidecarWindowLayoutInfo,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
co.notix.j4: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
androidx.work.ListenableWorker: android.net.Network getNetwork()
co.notix.gp: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.wp: wp(co.notix.xp,kotlin.coroutines.Continuation)
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
co.notix.tk: tk(co.notix.vk,java.lang.String,kotlin.coroutines.Continuation)
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
androidx.core.content.pm.PackageInfoCompat$Api28Impl: long getLongVersionCode(android.content.pm.PackageInfo)
co.notix.banner.NotixBannerView: void addListeners()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.google.firebase.perf.util.Constants$CounterNames: com.google.firebase.perf.util.Constants$CounterNames valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
co.notix.banner.BannerRequest: co.notix.banner.BannerRequest copy(long,co.notix.banner.BannerSize,java.lang.String,java.lang.Integer,long)
co.notix.c0: java.lang.Object invoke(java.lang.Object)
co.notix.uk: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.gc: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.callback.NotixCallback$RefreshData: co.notix.callback.NotixCallbackStatus getStatus()
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
androidx.window.embedding.EmbeddingInterfaceCompat: void setEmbeddingCallback(androidx.window.embedding.EmbeddingInterfaceCompat$EmbeddingCallbackInterface)
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
co.notix.o: int hashCode()
androidx.window.layout.SidecarCompat$FirstAttachAdapter: void onViewDetachedFromWindow(android.view.View)
androidx.work.impl.workers.CombineContinuationsWorker: CombineContinuationsWorker(android.content.Context,androidx.work.WorkerParameters)
co.notix.q8: java.lang.Integer a()
co.notix.c4: c4(co.notix.d4,kotlin.coroutines.Continuation)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
co.notix.in: java.lang.String toString()
co.notix.tl: tl(co.notix.wl,kotlin.coroutines.Continuation)
co.notix.da: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
androidx.window.layout.SidecarWindowBackend: SidecarWindowBackend(androidx.window.layout.ExtensionInterfaceCompat)
com.google.firebase.messaging.FirebaseMessagingService: void handleMessageIntent(android.content.Intent)
androidx.window.layout.SidecarAdapter: java.util.List translate(java.util.List,androidx.window.sidecar.SidecarDeviceState)
co.notix.fa: fa(java.lang.Exception)
com.google.firebase.perf.config.RemoteConfigManager: java.lang.Object getRemoteConfigValueOrDefault(java.lang.String,java.lang.Object)
com.google.firebase.perf.v1.GaugeMetadata: GaugeMetadata()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
co.notix.rc: rc(co.notix.x8,kotlinx.coroutines.CoroutineScope,co.notix.pc,co.notix.xp)
co.notix.R$drawable: R$drawable()
co.notix.of: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.callback.NotixCallbackHandler: void handle(android.content.Context,co.notix.callback.NotixCallback)
co.notix.banner.NotixBannerView: void onLayout(boolean,int,int,int,int)
co.notix.domain.RequestVars: RequestVars(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
co.notix.sk: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.measurement.zzgb$zzd: zzgb$zzd()
com.google.firebase.perf.session.SessionManager: void initializeGaugeCollection()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
co.notix.j5: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firebase.database.connection.Connection$State: com.google.firebase.database.connection.Connection$State[] values()
co.notix.push.data.NotificationOverrides: java.lang.String component9()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
co.notix.bg: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
kotlin.collections.IntIterator: IntIterator()
co.notix.b2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
com.google.firebase.perf.config.RemoteConfigManager: void triggerFirebaseRemoteConfigFetchAndActivateOnSuccessfulFetch()
co.notix.be: be(co.notix.ce,kotlin.coroutines.Continuation)
com.google.firebase.messaging.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
co.notix.ok: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture getMeasurementApiStatusAsync()
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
co.notix.push.data.NotificationOverrides: java.lang.Integer component5()
co.notix.l7: java.lang.String toString()
co.notix.eb: co.notix.ed a()
co.notix.a4: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.perseverance.worker.PerseveranceWorker: java.lang.Object a(java.lang.String,kotlin.coroutines.Continuation)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
co.notix.t: t()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.google.firebase.perf.config.RemoteConfigManager: void syncConfigValues(java.util.Map)
co.notix.callback.NotixCallback$ManageAudience: co.notix.callback.NotixCallbackStatus getStatus()
co.notix.am: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
co.notix.td: td(co.notix.iq,co.notix.x8,co.notix.we,co.notix.od,co.notix.zf,co.notix.wb)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
androidx.window.embedding.EmbeddingInterfaceCompat: void setSplitRules(java.util.Set)
androidx.window.embedding.SplitPairRule: boolean getClearTop()
co.notix.r0: r0(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
androidx.work.impl.foreground.SystemForegroundService: SystemForegroundService()
co.notix.ud: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
androidx.window.layout.WindowMetricsCalculator$Companion$reset$1: WindowMetricsCalculator$Companion$reset$1()
co.notix.q2: q2(co.notix.wb)
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus[] values()
co.notix.di: di(java.lang.String)
co.notix.ue: ue(co.notix.we)
co.notix.y: y(co.notix.rq)
co.notix.l0: java.lang.Object invoke(java.lang.Object)
co.notix.h1: java.lang.Object invoke(java.lang.Object)
co.notix.dk: java.lang.Object b(long,kotlin.coroutines.Continuation)
co.notix.u9: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.banner.NotixBannerView: co.notix.banner.NotixBannerListener getListener()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
co.notix.gb: gb()
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
co.notix.notix_inapp_flutter.R$bool: R$bool()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzft$zzg$zza: zzft$zzg$zza()
co.notix.p6: p6(co.notix.appopen.AppOpenActivity)
co.notix.fn: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.n7: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.messaging.EnhancedIntentService: void onDestroy()
io.flutter.plugins.firebase.messaging.JobIntentService: JobIntentService()
co.notix.ee: void a(boolean)
co.notix.u9: java.lang.Object invokeSuspend(java.lang.Object)
kotlin.jvm.internal.FunctionReference: java.lang.String toString()
co.notix.a0: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
co.notix.j1: java.lang.Object invoke(java.lang.Object)
co.notix.qk: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.tp: tp(co.notix.r7)
co.notix.h9: h9()
co.notix.tq: android.webkit.WebView getWv()
androidx.core.widget.TextViewCompat$Api16Impl: int getMinLines(android.widget.TextView)
co.notix.callback.NotixCallback$PushDataLoad: NotixCallback$PushDataLoad(co.notix.callback.NotixCallbackStatus,java.lang.String)
com.google.firebase.storage.FirebaseStorageKtxRegistrar: java.util.List getComponents()
co.notix.i: boolean equals(java.lang.Object)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.google.firebase.sessions.EventType: com.google.firebase.sessions.EventType[] values()
co.notix.im: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.gh: java.lang.Object b(kotlin.jvm.functions.Function1,kotlin.coroutines.Continuation)
co.notix.uo: uo(co.notix.iq,co.notix.td,co.notix.x8)
co.notix.ig: co.notix.native.NativeLoader createLoader(long,co.notix.domain.RequestVars,java.lang.Integer)
co.notix.k8: void a(android.content.Context,kotlin.jvm.functions.Function1,androidx.palette.graphics.Palette)
co.notix.callback.NotixCallback$Click: java.lang.String component2()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader()
co.notix.xe: java.lang.Object invokeSuspend(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
com.google.android.gms.internal.base.zac: zac()
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerSource(android.net.Uri,android.view.InputEvent,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
com.google.android.gms.internal.measurement.zzft$zzl$zza: zzft$zzl$zza()
androidx.exifinterface.media.ExifInterfaceUtils$Api21Impl: java.io.FileDescriptor dup(java.io.FileDescriptor)
co.notix.r6: r6(co.notix.appopen.AppOpenActivity)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
co.notix.nh: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.embedding.SplitPairFilter: java.lang.String toString()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannels(android.app.NotificationManager,java.util.List)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: void setAutoMirrored(android.graphics.drawable.Drawable,boolean)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
co.notix.i3: co.notix.appopen.AppOpenData getNext()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
co.notix.pi: java.lang.Object a(co.notix.yh,kotlin.coroutines.Continuation)
co.notix.appopen.AppOpenActivity: void onBackPressed()
co.notix.r9: r9(co.notix.w9,java.lang.String,kotlin.coroutines.Continuation)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String)
co.notix.h3: java.lang.Object invoke(java.lang.Object)
co.notix.a5: a5(co.notix.rq)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
androidx.window.layout.WindowInfoTrackerImpl: WindowInfoTrackerImpl(androidx.window.layout.WindowMetricsCalculator,androidx.window.layout.WindowBackend)
androidx.window.embedding.SplitRuleParser: androidx.window.embedding.SplitPairRule parseSplitPairRule(android.content.Context,android.content.res.XmlResourceParser)
co.notix.native.NativeLoader: void doOnNextAvailable(kotlin.jvm.functions.Function1)
androidx.window.embedding.SplitController$Companion: androidx.window.embedding.SplitController getInstance()
com.google.android.datatransport.cct.internal.BatchedLogRequest: BatchedLogRequest()
com.google.firebase.messaging.EnhancedIntentService: android.os.IBinder onBind(android.content.Intent)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
androidx.window.embedding.SplitController: java.util.concurrent.locks.ReentrantLock access$getGlobalLock$cp()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
co.notix.dk: java.lang.Object c(kotlin.coroutines.Continuation)
co.notix.rb: int hashCode()
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
kotlin.coroutines.jvm.internal.ContinuationImpl: void releaseIntercepted()
co.notix.qe: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.kk: java.lang.Object a(co.notix.kk,int,long,kotlin.coroutines.Continuation)
androidx.window.layout.FoldingFeature$Orientation: java.lang.String toString()
androidx.core.widget.TextViewCompat$Api17Impl: void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice: io.flutter.plugins.imagepicker.ImagePickerDelegate$CameraDevice valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
kotlin.jvm.internal.CallableReference: boolean isSuspend()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.firebase.perf.v1.AndroidMemoryReading$Builder: AndroidMemoryReading$Builder()
co.notix.nb: void f()
com.google.android.gms.internal.measurement.zzng: com.google.android.gms.internal.measurement.zzng[] values()
androidx.window.embedding.ActivityStack: java.lang.String toString()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.google.android.gms.internal.common.zzc: zzc()
kotlin.jvm.internal.CallableReference: CallableReference(java.lang.Object,java.lang.Class,java.lang.String,java.lang.String,boolean)
androidx.window.layout.SidecarCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.firebase.perf.util.StorageUnit: com.google.firebase.perf.util.StorageUnit valueOf(java.lang.String)
androidx.window.layout.SidecarAdapter: java.lang.String access$getTAG$cp()
com.google.android.gms.internal.measurement.zzkd: com.google.android.gms.internal.measurement.zzkd[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void pruneImageReaderQueue()
kotlin.coroutines.jvm.internal.BaseContinuationImpl: void releaseIntercepted()
co.notix.callback.NotixCallback$Impression: java.lang.String toString()
co.notix.r0: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api17Impl: android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView)
co.notix.um: um(co.notix.jh)
co.notix.hg: void cancel()
com.google.firebase.remoteconfig.internal.ConfigFetchHttpClient: com.google.firebase.remoteconfig.internal.ConfigFetchHandler$FetchResponse fetch(java.net.HttpURLConnection,java.lang.String,java.lang.String,java.util.Map,java.lang.String,java.util.Map,java.lang.Long,java.util.Date)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
co.notix.lo: androidx.work.OneTimeWorkRequest a(co.notix.lo,androidx.work.OneTimeWorkRequest$Builder)
co.notix.callback.NotixCallback$AppInstall: java.lang.String toString()
co.notix.nb: void a(co.notix.nb,android.view.View)
co.notix.qp: qp(co.notix.xp,kotlin.coroutines.Continuation)
co.notix.ud: java.lang.String getDescription()
co.notix.le: le(co.notix.xf,kotlin.coroutines.Continuation,co.notix.push.NotixNotificationModifier,co.notix.oe,co.notix.he)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
androidx.datastore.preferences.protobuf.ExtensionSchema: ExtensionSchema()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
co.notix.hm: hm(co.notix.jh)
co.notix.sf: sf(co.notix.banner.NotixBannerView)
co.notix.o7: o7(co.notix.c9)
co.notix.rf: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.DrawableCompat$Api19Impl: boolean isAutoMirrored(android.graphics.drawable.Drawable)
com.google.android.gms.internal.measurement.zzft$zzm$zza: zzft$zzm$zza()
co.notix.wl: java.lang.Object b(kotlin.coroutines.Continuation)
co.notix.s7: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.b0: java.lang.Object invoke(java.lang.Object)
androidx.window.layout.HardwareFoldingFeature$Companion: HardwareFoldingFeature$Companion(kotlin.jvm.internal.DefaultConstructorMarker)
co.notix.q8: java.lang.String toString()
co.notix.m4: java.lang.Object c(co.notix.p4,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
co.notix.m2: java.lang.Object b(co.notix.r4,co.notix.g4)
co.notix.ba: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.messaging.EnhancedIntentService: boolean handleIntentOnMainThread(android.content.Intent)
co.notix.tk: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.ya: ya(java.lang.String,int)
androidx.core.widget.ListViewCompat$Api19Impl: boolean canScrollList(android.widget.ListView,int)
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType[] values()
co.notix.w6: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.wa: java.lang.String toString()
com.google.firebase.database.core.view.QueryParams$ViewFrom: com.google.firebase.database.core.view.QueryParams$ViewFrom valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
androidx.window.layout.FoldingFeature: androidx.window.layout.FoldingFeature$State getState()
co.notix.f7: int hashCode()
androidx.work.ListenableWorker: androidx.work.impl.utils.taskexecutor.TaskExecutor getTaskExecutor()
co.notix.q4: q4(co.notix.o4,co.notix.n)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
co.notix.ag: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.callback.NotixCallback: java.lang.String getData()
co.notix.je: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.mi: java.lang.Object invoke(java.lang.Object)
co.notix.p1: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
co.notix.xc: void a(java.lang.String,java.lang.Throwable)
co.notix.fl: void a(java.lang.String)
co.notix.w2: w2()
co.notix.appopen.NotixAppOpen$Companion: void show(co.notix.appopen.AppOpenData,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
co.notix.kq: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.b6: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
kotlin.coroutines.AbstractCoroutineContextElement: kotlin.coroutines.CoroutineContext plus(kotlin.coroutines.CoroutineContext)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.gms.internal.measurement.zzfn$zza$zzd: com.google.android.gms.internal.measurement.zzfn$zza$zzd[] values()
com.google.android.gms.internal.measurement.zzjq: com.google.android.gms.internal.measurement.zzjq[] values()
com.google.firebase.database.snapshot.ChildrenNode: ChildrenNode()
com.google.firebase.database.snapshot.Node$HashVersion: com.google.firebase.database.snapshot.Node$HashVersion valueOf(java.lang.String)
co.notix.yh: int hashCode()
co.notix.ka: ka(java.lang.String,int)
co.notix.lp: lp(co.notix.xp,kotlin.coroutines.Continuation)
co.notix.de: java.lang.Object collect(kotlinx.coroutines.flow.FlowCollector,kotlin.coroutines.Continuation)
co.notix.re: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
co.notix.rj: rj(co.notix.rq)
co.notix.jf: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.b1: java.lang.Object invoke(java.lang.Object)
co.notix.qo: qo()
co.notix.f4: f4(co.notix.m4,kotlin.coroutines.Continuation)
co.notix.yf: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.database.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
co.notix.interstitial.WebViewInterstitialActivity: WebViewInterstitialActivity()
co.notix.fg: java.lang.Object invoke(java.lang.Object,java.lang.Object)
co.notix.w5: android.view.View getLlContainer()
co.notix.wf: wf(kotlin.jvm.functions.Function0,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitRule: int hashCode()
androidx.work.impl.utils.futures.AbstractFuture: AbstractFuture()
androidx.work.CoroutineWorker: androidx.work.impl.utils.futures.SettableFuture getFuture$work_runtime_ktx_release()
co.notix.j9: java.lang.Object invoke(java.lang.Object)
co.notix.vc: void a(java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
com.google.firebase.perf.config.RemoteConfigManager: RemoteConfigManager()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
io.flutter.plugins.imagepicker.Messages$CacheRetrievalType: io.flutter.plugins.imagepicker.Messages$CacheRetrievalType[] values()
co.notix.push.firebase.NotixFirebaseMessagingService: void onMessageReceived(com.google.firebase.messaging.RemoteMessage)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
co.notix.v0: java.lang.Object invoke(java.lang.Object)
co.notix.i: i(java.lang.String,java.lang.String,android.graphics.Bitmap,java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,java.lang.String)
co.notix.Notix: java.lang.String getVersion()
co.notix.bq: boolean equals(java.lang.Object)
co.notix.qc: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
co.notix.r7: r7(co.notix.gh)
co.notix.lm: lm(co.notix.jh)
co.notix.interstitial.InterstitialLoader: java.lang.Object awaitNext(long,kotlin.coroutines.Continuation)
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
co.notix.uc: void a(java.lang.String,java.lang.Throwable)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
co.notix.xo: boolean equals(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
co.notix.wp: java.lang.Object invoke(java.lang.Object)
co.notix.x6: java.lang.Object invoke()
co.notix.bb: int hashCode()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzjg: zzjg()
com.google.firebase.perf.config.RemoteConfigManager: com.google.firebase.perf.config.RemoteConfigManager getInstance()
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.google.android.gms.internal.measurement.zzjp: zzjp()
co.notix.ve: ve(co.notix.we)
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
androidx.window.layout.WindowMetricsCalculatorCompat: void getRectSizeFromDisplay(android.app.Activity,android.graphics.Rect)
co.notix.y6: y6()
androidx.window.layout.WindowInfoTracker$Companion: androidx.window.layout.WindowBackend windowBackend$window_release(android.content.Context)
co.notix.q8: q8(long,co.notix.domain.RequestVars,java.lang.Integer)
androidx.window.embedding.SplitPairFilter: boolean matchesActivityPair(android.app.Activity,android.app.Activity)
co.notix.vc: vc()
co.notix.kk: java.lang.Class b()
co.notix.so: co.notix.n8 c()
co.notix.mp: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setLegacyStreamType(android.media.AudioAttributes$Builder,int)
co.notix.bh: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.zb: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.m4: java.lang.Object b(co.notix.p4,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend: java.util.concurrent.CopyOnWriteArrayList getSplitChangeCallbacks()
co.notix.b6: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
co.notix.c: c(co.notix.w8)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.firebase.perf.v1.ApplicationProcessState: com.google.firebase.perf.v1.ApplicationProcessState valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
co.notix.pl: pl(co.notix.wl,kotlin.coroutines.Continuation)
co.notix.iq: java.lang.String a()
androidx.core.widget.TextViewCompat$Api16Impl: int getMaxLines(android.widget.TextView)
com.google.android.gms.measurement.internal.zzai: com.google.android.gms.measurement.internal.zzai[] values()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
io.flutter.plugins.imagepicker.Messages$CacheRetrievalResult: Messages$CacheRetrievalResult()
co.notix.tm: tm(long)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
androidx.window.layout.WindowInfoTrackerImpl$windowLayoutInfo$1: void invokeSuspend$lambda-0(kotlinx.coroutines.channels.Channel,androidx.window.layout.WindowLayoutInfo)
com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState: com.google.firebase.database.connection.PersistentConnectionImpl$ConnectionState[] values()
co.notix.kg: java.lang.Object invokeSuspend(java.lang.Object)
androidx.window.core.Version: androidx.window.core.Version parse(java.lang.String)
co.notix.appopen.NotixAppOpen: void startAutoShow(co.notix.appopen.AppOpenLoader,long,long,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
co.notix.wl: java.lang.Object a(kotlin.coroutines.Continuation)
co.notix.i3: void doOnNextAvailable(kotlin.jvm.functions.Function1)
co.notix.z7: z7(co.notix.d8,java.lang.String,co.notix.yn,kotlin.coroutines.Continuation)
co.notix.j6: java.lang.Object invoke()
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
com.google.firebase.database.collection.ImmutableSortedMap: ImmutableSortedMap()
co.notix.iq: java.lang.String c()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
co.notix.l6: void onAnimationRepeat(android.view.animation.Animation)
androidx.window.layout.HardwareFoldingFeature: java.lang.String toString()
androidx.window.embedding.ActivityFilter: ActivityFilter(android.content.ComponentName,java.lang.String)
androidx.window.layout.ExtensionInterfaceCompat: void setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface)
com.google.android.gms.common.api.PendingResult: PendingResult()
co.notix.r4: java.lang.String toString()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
co.notix.banner.BannerSize$Fixed: int getHeight()
androidx.window.layout.SidecarWindowBackend$Companion: boolean isSidecarVersionSupported(androidx.window.core.Version)
co.notix.k4: java.lang.Object invokeSuspend(java.lang.Object)
androidx.work.WorkInfo$State: androidx.work.WorkInfo$State[] values()
co.notix.notix_inapp_flutter.R$layout: R$layout()
co.notix.n9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
co.notix.ye: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
co.notix.nj: nj(co.notix.dk,kotlin.coroutines.Continuation)
com.google.android.datatransport.cct.internal.LogEvent: LogEvent()
androidx.window.embedding.SplitPlaceholderRule: android.content.Intent getPlaceholderIntent()
androidx.core.app.ActivityCompat$Api16Impl: void finishAffinity(android.app.Activity)
androidx.datastore.preferences.protobuf.UnknownFieldSetLite: UnknownFieldSetLite()
androidx.core.view.ViewCompat$Api19Impl: boolean isLayoutDirectionResolved(android.view.View)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannels(android.app.NotificationManager)
co.notix.p0: java.lang.Object invoke(java.lang.Object)
co.notix.r8: void a(java.lang.String,java.lang.Throwable)
com.google.firebase.perf.v1.PerfMetric$Builder: PerfMetric$Builder()
co.notix.notix_inapp_flutter.R$raw: R$raw()
androidx.work.DirectExecutor: androidx.work.DirectExecutor[] values()
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.window.embedding.SplitController: void access$setGlobalInstance$cp(androidx.window.embedding.SplitController)
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzdj)
com.google.android.gms.internal.measurement.zzft$zzc$zza: zzft$zzc$zza()
com.google.firebase.perf.session.SessionManager: void startOrStopCollectingGauges(com.google.firebase.perf.v1.ApplicationProcessState)
androidx.window.embedding.SplitPairFilter: android.content.ComponentName getSecondaryActivityName()
co.notix.e2: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
co.notix.d8: java.lang.Object a(co.notix.d8,java.lang.String,kotlin.coroutines.Continuation)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
co.notix.vf: vf(co.notix.banner.NotixBannerView)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
co.notix.o4: java.lang.Object a(java.lang.Object)
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
co.notix.bl: bl(java.lang.String,int,java.lang.String)
co.notix.gh: java.lang.Object getValue()
co.notix.t0: java.lang.Object invoke(java.lang.Object)
io.flutter.plugins.imagepicker.Messages$SourceCamera: io.flutter.plugins.imagepicker.Messages$SourceCamera[] values()
co.notix.gl: java.lang.Object invoke(java.lang.Object)
androidx.core.app.NotificationCompat$BigTextStyle$Api16Impl: android.app.Notification$BigTextStyle bigText(android.app.Notification$BigTextStyle,java.lang.CharSequence)
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
co.notix.e2: java.lang.Object invoke(java.lang.Object)
co.notix.m7: java.lang.Object invokeSuspend(java.lang.Object)
androidx.lifecycle.ViewModel: ViewModel()
co.notix.pc: java.lang.Object b(long,kotlin.coroutines.Continuation)
co.notix.r1: r1(co.notix.jh)
co.notix.interstitial.NotixInterstitial: void show(co.notix.interstitial.InterstitialData,co.notix.interstitial.InterstitialButton)
co.notix.th: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.t8: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
co.notix.za: za(co.notix.ab,kotlin.coroutines.Continuation)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax[] values()
co.notix.ph: ph(co.notix.x8)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
co.notix.r2: r2(co.notix.ta)
co.notix.native.NotixNative: co.notix.native.NativeLoader createLoader(long,co.notix.domain.RequestVars)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
co.notix.callback.NotixCallbackStatus: NotixCallbackStatus(java.lang.String,int)
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
co.notix.callback.NotixCallback$GeneralMetrics: java.lang.String component2()
co.notix.pa: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.google.android.gms.internal.measurement.zzib: zzib()
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
co.notix.bf: java.lang.Object invoke(java.lang.Object)
co.notix.o3: o3(co.notix.d4,kotlin.coroutines.Continuation)
co.notix.m6: m6(co.notix.appopen.AppOpenActivity,android.view.animation.AlphaAnimation)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzdi,long)
co.notix.n8: n8()
co.notix.banner.BannerRequest: BannerRequest(long,co.notix.banner.BannerSize,java.lang.String,java.lang.Integer,long,int,kotlin.jvm.internal.DefaultConstructorMarker)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
co.notix.n5: java.lang.Object a(co.notix.u4,kotlin.coroutines.Continuation)
androidx.window.embedding.ExtensionEmbeddingBackend: boolean isSplitSupported()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.protobuf.ByteString: ByteString()
androidx.window.embedding.SplitController: void initialize(android.content.Context,int)
co.notix.push.NotixPush$Companion: void init(android.content.Context,java.lang.String,java.lang.String,co.notix.domain.RequestVars)
co.notix.al: java.lang.String toString()
co.notix.la: la(co.notix.na,kotlin.coroutines.Continuation)
co.notix.se: java.lang.Object invoke(java.lang.Object,java.lang.Object)
com.google.android.gms.internal.measurement.zzft$zza: zzft$zza()
co.notix.notix_inapp_flutter.R$style: R$style()
co.notix.sk: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
co.notix.gl: gl()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
androidx.work.CoroutineWorker: java.lang.Object getForegroundInfo(kotlin.coroutines.Continuation)
co.notix.nb: void e()
androidx.work.impl.background.systemalarm.ConstraintProxy: ConstraintProxy()
androidx.window.embedding.ExtensionEmbeddingBackend$Companion: androidx.window.embedding.ExtensionEmbeddingBackend getInstance()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
co.notix.callback.NotixCallback$Click: co.notix.callback.NotixCallbackStatus getStatus()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
androidx.core.content.pm.PackageInfoCompat$Api28Impl: android.content.pm.Signature[] getApkContentsSigners(android.content.pm.SigningInfo)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
co.notix.wl: java.lang.Object e(kotlin.coroutines.Continuation)
co.notix.vl: vl(co.notix.wl,kotlin.coroutines.Continuation)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
co.notix.ei: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
co.notix.interstitial.WebViewInterstitialActivity: void a()
co.notix.interstitial.NotixInterstitial: co.notix.interstitial.InterstitialLoader createLoader(long,co.notix.domain.RequestVars,java.lang.Integer)
co.notix.fj: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.google.android.gms.internal.measurement.zzju: zzju()
co.notix.banner.NotixBannerView: co.notix.xf access$getCallbackExecutor$p(co.notix.banner.NotixBannerView)
co.notix.ti: java.lang.Object invoke(java.lang.Object)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
androidx.window.embedding.ActivityFilter: boolean matchesActivity(android.app.Activity)
co.notix.appopen.NotixAppOpen$Companion: void startAutoShow(co.notix.appopen.AppOpenLoader)
co.notix.vo: vo(co.notix.d9)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzdi)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
com.google.firebase.perf.v1.CpuMetricReading$Builder: CpuMetricReading$Builder()
co.notix.f5: java.lang.Object invoke(java.lang.Object)
co.notix.en: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.y1: java.lang.Object invoke(java.lang.Object)
co.notix.qd: qd(co.notix.td,kotlin.coroutines.Continuation)
co.notix.lf: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api16Impl: int getMinimumWidth(android.view.View)
co.notix.wm: java.lang.Object invokeSuspend(java.lang.Object)
com.google.android.datatransport.cct.internal.ClientInfo: ClientInfo()
co.notix.ag: ag(com.google.firebase.messaging.RemoteMessage,co.notix.push.firebase.NotixFirebaseMessagingService,kotlin.coroutines.Continuation)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
co.notix.ah: ah(co.notix.gh,kotlin.coroutines.Continuation)
androidx.window.core.Bounds: int getWidth()
co.notix.me: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.eb: eb()
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
co.notix.n0: n0(co.notix.jh)
com.google.android.gms.internal.measurement.zzft$zzg: zzft$zzg()
co.notix.c8: c8(co.notix.d8,java.lang.String,kotlin.coroutines.Continuation)
co.notix.lb: void onTick(long)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
co.notix.r8: r8(co.notix.xc[])
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
co.notix.af: java.lang.Object invoke(java.lang.Object,java.lang.Object)
io.flutter.plugins.imagepicker.Messages$SourceType: io.flutter.plugins.imagepicker.Messages$SourceType[] values()
co.notix.rh: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
androidx.core.view.ViewCompat$Api17Impl: android.view.Display getDisplay(android.view.View)
co.notix.callback.NotixCallback$FcmTokenReceived: co.notix.callback.NotixCallback$FcmTokenReceived copy$default(co.notix.callback.NotixCallback$FcmTokenReceived,co.notix.callback.NotixCallbackStatus,java.lang.String,int,java.lang.Object)
co.notix.appopen.NotixAppOpen$Companion: co.notix.appopen.AppOpenLoader createLoader(long,co.notix.domain.RequestVars)
co.notix.hb: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.xm: java.lang.Object invoke(java.lang.Object)
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus valueOf(java.lang.String)
androidx.window.layout.FoldingFeature$State: FoldingFeature$State(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
androidx.window.core.Version: Version(int,int,int,java.lang.String)
co.notix.cf: void startAutoShow(co.notix.appopen.AppOpenLoader)
co.notix.ee: void b(co.notix.ee)
co.notix.y0: y0(co.notix.pq,java.lang.String,kotlin.coroutines.Continuation)
co.notix.banner.NotixBannerLoader: void startLoading()
co.notix.banner.NotixBannerListener: void onAdFailedToLoad(java.lang.String)
co.notix.q6: java.lang.Object invoke()
co.notix.g8: java.lang.String toString()
co.notix.v9: v9(co.notix.w9,java.lang.String,kotlin.coroutines.Continuation)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
com.google.firebase.remoteconfig.interop.rollouts.RolloutAssignment: RolloutAssignment()
co.notix.ki: ki(co.notix.pi,kotlin.coroutines.Continuation)
io.flutter.plugins.firebase.performance.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
co.notix.ha: java.lang.Throwable a()
co.notix.v9: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitPairRule: java.util.Set getFilters()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void waitOnFence(android.media.Image)
com.google.android.gms.internal.measurement.zzfv: com.google.android.gms.internal.measurement.zzfv[] values()
co.notix.vp: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.interstitial.InterstitialButton: java.lang.String component1()
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
co.notix.wl: wl(co.notix.il,co.notix.x8,co.notix.gn,co.notix.xp)
co.notix.wa: boolean equals(java.lang.Object)
com.google.firebase.database.DatabaseRegistrar: DatabaseRegistrar()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
androidx.window.embedding.SplitRuleParser: android.content.ComponentName buildClassName(java.lang.String,java.lang.CharSequence)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
co.notix.w3: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.s5: s5(co.notix.w5)
androidx.window.embedding.SplitPairFilter: boolean equals(java.lang.Object)
co.notix.ac: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.x: x(co.notix.wb)
com.google.android.gms.measurement.internal.zzir: com.google.android.gms.measurement.internal.zzir[] values()
co.notix.cj: cj()
androidx.window.layout.HardwareFoldingFeature: androidx.window.layout.FoldingFeature$Orientation getOrientation()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
co.notix.interstitial.NotixInterstitial: co.notix.interstitial.InterstitialLoader createLoader(long,co.notix.domain.RequestVars)
co.notix.wn: wn()
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
co.notix.ed: java.lang.Object a(java.lang.Object)
com.google.firebase.perf.session.gauges.GaugeManager: GaugeManager()
androidx.window.embedding.ExtensionEmbeddingBackend$EmbeddingCallbackImpl: ExtensionEmbeddingBackend$EmbeddingCallbackImpl(androidx.window.embedding.ExtensionEmbeddingBackend)
co.notix.k8: void a(co.notix.k6,android.graphics.Bitmap,co.notix.c6)
co.notix.si: si(co.notix.perseverance.worker.PerseveranceWorker,kotlin.coroutines.Continuation)
androidx.window.embedding.SplitController: SplitController()
co.notix.g2: java.lang.Object invokeSuspend(java.lang.Object)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
co.notix.y4: y4()
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
co.notix.k7: int hashCode()
co.notix.h7: java.lang.Object invoke(java.lang.Object,java.lang.Object)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
co.notix.eg: co.notix.interstitial.InterstitialLoader createLoader(long)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.window.layout.WindowMetricsCalculatorCompat: android.graphics.Point getRealSizeForDisplay$window_release(android.view.Display)
co.notix.ik: java.lang.Object invokeSuspend(java.lang.Object)
com.google.firebase.perf.session.gauges.GaugeManager: void lambda$stopCollectingGauges$3(java.lang.String,com.google.firebase.perf.v1.ApplicationProcessState)
co.notix.ud: java.lang.String getTitle()
co.notix.bn: java.lang.Object invoke(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
co.notix.g8: g8(java.lang.String)
co.notix.bh: bh(co.notix.gh,kotlin.coroutines.Continuation)
co.notix.g5: java.lang.Object invokeSuspend(java.lang.Object)
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
co.notix.i1: i1(co.notix.jh)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
co.notix.lsi.NotixLockScreenInterstitialAd$Companion: void schedule(long)
co.notix.jo: jo(com.google.common.util.concurrent.ListenableFuture)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
co.notix.l4: l4(co.notix.m4,java.lang.String,kotlin.coroutines.Continuation)
co.notix.c8: kotlin.coroutines.Continuation create(java.lang.Object,kotlin.coroutines.Continuation)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
kotlinx.coroutines.scheduling.Task: Task()
co.notix.pf: pf(kotlin.coroutines.Continuation)
com.google.common.util.concurrent.internal.InternalFutureFailureAccess: InternalFutureFailureAccess()
co.notix.appopen.AppOpenActivity: void a(co.notix.appopen.AppOpenActivity,co.notix.i,android.view.View)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
co.notix.eo: eo(co.notix.lo,kotlin.coroutines.Continuation)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes build(android.media.AudioAttributes$Builder)
kotlin.coroutines.jvm.internal.SuspendLambda: java.lang.String toString()
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object getMeasurementApiStatus(kotlin.coroutines.Continuation)
co.notix.iq: void a(android.content.Context,java.lang.String,long)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void releaseInternal()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
com.google.android.gms.internal.measurement.zzjt$zzb: zzjt$zzb()
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
co.notix.callback.NotixCallback$Unsubscription: NotixCallback$Unsubscription(co.notix.callback.NotixCallbackStatus,java.lang.String)
androidx.window.java.layout.WindowInfoTrackerCallbackAdapter: void removeListener(androidx.core.util.Consumer)
com.google.firebase.database.Logger$Level: com.google.firebase.database.Logger$Level valueOf(java.lang.String)
co.notix.fa: java.lang.Throwable a()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.google.android.gms.internal.measurement.zzfn$zza$zzf: zzfn$zza$zzf()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
androidx.datastore.preferences.core.Preferences: Preferences()
io.flutter.plugins.imagepicker.ImagePickerCache$CacheType: io.flutter.plugins.imagepicker.ImagePickerCache$CacheType[] values()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
co.notix.hh: java.lang.Object invoke()
co.notix.oj: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.oc: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
co.notix.kp: java.lang.Object invoke(java.lang.Object)
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
co.notix.eb: co.notix.n8 c()
co.notix.r8: void setLogLevel(co.notix.log.LogLevel)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
co.notix.on: int hashCode()
co.notix.vh: long a(int)
co.notix.push.data.NotificationOverrides: java.lang.String toString()
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
co.notix.gn: gn(co.notix.oh)
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
co.notix.banner.BannerRequest: int hashCode()
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: GeneratedMessageLite$ExtendableMessage()
co.notix.wl: java.lang.Object b(co.notix.wk,kotlin.coroutines.Continuation)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
co.notix.pj: pj(co.notix.dk,kotlin.coroutines.Continuation)
co.notix.qf: qf(kotlin.coroutines.Continuation)
co.notix.callback.NotixCallbackStatus: co.notix.callback.NotixCallbackStatus valueOf(java.lang.String)
androidx.window.layout.HardwareFoldingFeature$Type: androidx.window.layout.HardwareFoldingFeature$Type access$getFOLD$cp()
co.notix.h6: h6(co.notix.k6)
co.notix.v5: java.lang.Object invoke()
com.google.firebase.appcheck.FirebaseAppCheckKtxRegistrar: FirebaseAppCheckKtxRegistrar()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzdi)
com.google.firebase.perf.v1.NetworkRequestMetric$NetworkClientErrorReason: com.google.firebase.perf.v1.NetworkRequestMetric$NetworkClientErrorReason[] values()
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
co.notix.e2: java.lang.Object invokeSuspend(java.lang.Object)
co.notix.d0: kotlin.coroutines.Continuation create(kotlin.coroutines.Continuation)
androidx.window.layout.DisplayFeature: android.graphics.Rect getBounds()
com.google.android.gms.internal.measurement.zzft$zzh: zzft$zzh()
androidx.datastore.preferences.PreferencesProto$StringSet: PreferencesProto$StringSet()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
co.notix.g8: int hashCode()
androidx.window.layout.WindowMetrics: java.lang.String toString()
co.notix.l3: l3(co.notix.m3,kotlin.coroutines.Continuation)
